
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ALIGNOF AND AND_BIT AS ASSIGN BECOME BINARIO BOOL BOX BREAK BYTE CHAR COMA COMMA_DOT CONST CONTINUE CRATE DECIMAL DIVIDE DO ELSE ENUM EQUALS EXTERN FINAL FLOAT FN FOR HEXADECIMAL IF IMPL IN INTEGER LEFT_MAYUS LESSEQUAL_THAN LESS_THAN LET LKEY LOOP LPAREN MACRO MATCH MATH_REMINDER MINUS MOD MOREEQUAL_THAN MORE_THAN MOV MUT NOT NOT_EQUALS OCTAL OFFSETOF OR OR_BIT OVERRIDE PLUS POINT PRINTLN PRIV PROC PUB PURE QUO_MARKS REF RETURN RIGHT_MAYUS RKEY RPAREN SELF SIZEOF STATIC STRING STRUCT SUPER TIMES TRAIT TWO_POINTS TYPE TYPEOF UNSAFE UNSIZED USE VARIABLE VIRTUAL WHERE WHILE XOR_BIT YIELDcuerpo : asignacion\n  | asignacionMutableasignacion : LET VARIABLE ASSIGN valor COMMA_DOTvalor : STRING\n  | CHAR\n  | DECIMAL\n  | HEXADECIMAL\n  | OCTAL\n  | BINARIO\n  | BOOL\n  | FLOATasignacionMutable : LET MUT VARIABLE ASSIGN valor COMMA_DOT'
    
_lr_action_items = {'LET':([0,],[4,]),'$end':([1,2,3,19,21,],[0,-1,-2,-3,-12,]),'VARIABLE':([4,6,],[5,8,]),'MUT':([4,],[6,]),'ASSIGN':([5,8,],[7,18,]),'STRING':([7,18,],[10,10,]),'CHAR':([7,18,],[11,11,]),'DECIMAL':([7,18,],[12,12,]),'HEXADECIMAL':([7,18,],[13,13,]),'OCTAL':([7,18,],[14,14,]),'BINARIO':([7,18,],[15,15,]),'BOOL':([7,18,],[16,16,]),'FLOAT':([7,18,],[17,17,]),'COMMA_DOT':([9,10,11,12,13,14,15,16,17,20,],[19,-4,-5,-6,-7,-8,-9,-10,-11,21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,],[1,]),'asignacion':([0,],[2,]),'asignacionMutable':([0,],[3,]),'valor':([7,18,],[9,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',5),
  ('cuerpo -> asignacionMutable','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',6),
  ('asignacion -> LET VARIABLE ASSIGN valor COMMA_DOT','asignacion',5,'p_asignacion','AnalizadorSintactico.py',10),
  ('valor -> STRING','valor',1,'p_valor','AnalizadorSintactico.py',14),
  ('valor -> CHAR','valor',1,'p_valor','AnalizadorSintactico.py',15),
  ('valor -> DECIMAL','valor',1,'p_valor','AnalizadorSintactico.py',16),
  ('valor -> HEXADECIMAL','valor',1,'p_valor','AnalizadorSintactico.py',17),
  ('valor -> OCTAL','valor',1,'p_valor','AnalizadorSintactico.py',18),
  ('valor -> BINARIO','valor',1,'p_valor','AnalizadorSintactico.py',19),
  ('valor -> BOOL','valor',1,'p_valor','AnalizadorSintactico.py',20),
  ('valor -> FLOAT','valor',1,'p_valor','AnalizadorSintactico.py',21),
  ('asignacionMutable -> LET MUT VARIABLE ASSIGN valor COMMA_DOT','asignacionMutable',6,'p_asignacionMutable','AnalizadorSintactico.py',52),
]
