
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ALIGNOF AND AND_BIT AS ASSIGN BECOME BINARIO BOOL BOX BREAK BYTE CHAR COMA COMMA_DOT CONST CONTINUE CRATE DECIMAL DIVIDE DO ELSE ENUM EQUALS EXTERN FINAL FLOAT FN FOR GENERIC HASHMAP HEXADECIMAL IF IMPL IN INTEGER LBRACKET LEFT_MAYUS LESSEQUAL_THAN LESS_THAN LET LKEY LOOP LPAREN MACRO MATCH MATH_REMINDER MINUS MOD MOREEQUAL_THAN MORE_THAN MOV MUT NEW NOT NOT_EQUALS OCTAL OFFSETOF OR OR_BIT OVERRIDE PLUS POINT PRINTLN PRIV PROC PUB PURE QUO_MARKS RBRACKET REF RETURN RIGHT_MAYUS RKEY RPAREN SELF SIZEOF STATIC STRING STRUCT SUPER TIMES TRAIT TWO_POINTS TYPE TYPEOF UNSAFE UNSIZED USE VARIABLE VEC VIRTUAL WHERE WHILE XOR_BIT YIELDcuerpo : asignacion\n    | struct\n    | varEnVar\n    | definirFuncion\n    | hashMap\n    | vector\n    | for \n    | for cuerpo\n    | loop\n    | eMatch\n    asignacion : definicion ASSIGN valorAsignado COMMA_DOT\n    | VARIABLE ASSIGN valorAsignado COMMA_DOT\n    | VARIABLE ASSIGN varEnVar COMMA_DOT\n    | definicionvarEnVar : VARIABLE POINT VARIABLEdefinicion : creacion\n    | creacion COMMA_DOT\n    | creacion tipoDatocreacion : LET MUT VARIABLE\n    | LET VARIABLE\n    | CONST VARIABLEtipoDato : TWO_POINTS dato\n    | TWO_POINTS tipoDato\n    | dato LESS_THAN dato MORE_THAN\n    | TWO_POINTS apuntador\n    dato : STRING\n    | CHAR\n    | DECIMAL\n    | HEXADECIMAL\n    | OCTAL\n    | BINARIO\n    | BOOL\n    | FLOAT\n    | VEC\n    | GENERIC\n    valorAsignado : dato\n    | llamadaAfuncion\n    | llamadaAfuncionPorAlias\n    | vector\n    | hashMap\n    | VARIABLEllamadaAfuncionPorAlias : VARIABLE POINT llamadaAfuncionllamadaAfuncion : VARIABLE argumentos\n    | VARIABLE argumentos POINT llamadaAfuncion\n    | VARIABLE TWO_POINTS TWO_POINTS argumentos\n    | VARIABLE TWO_POINTS TWO_POINTS\n    | VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncionargumentos : LPAREN argumento RPAREN\n    | LPAREN RPARENargumento : VARIABLE\n    | dato\n    | VARIABLE COMA argumento\n    | dato COMA argumento\n    | llamadaAfuncion\n    | llamadaAfuncionPorAlias\n    | llamadaAfuncion COMA argumento\n    | llamadaAfuncionPorAlias COMA argumento definirFuncion : FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY\n    | FN VARIABLE parametros LKEY cuerpoFuncion RKEY\n    trait : LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN  datoARetornar : MINUS MORE_THAN dato\n    | MINUS MORE_THAN NOT\n    | MINUS MORE_THAN tipoDato\n    parametros : LPAREN RPAREN datoARetornar\n    | LPAREN parametro RPAREN datoARetornar\n    | LPAREN RPAREN\n    | LPAREN parametro RPARENparametro : VARIABLE TWO_POINTS dato \n    | VARIABLE TWO_POINTS dato COMA parametro\n    | dato COMA parametro\n    | dato\n     cuerpoFuncion : cuerpo\n    struct : STRUCT VARIABLE LKEY atributos RKEYatributos : VARIABLE TWO_POINTS dato\n    | VARIABLE TWO_POINTS dato COMA atributosvector : VEC NOT LBRACKET datos RBRACKET \n    | VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN\n    | VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPARENdatos : dato\n    | dato COMA datoshashMap : HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPARENfor : FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY rango : DECIMAL POINT POINT DECIMAL\n    | DECIMAL POINT POINT ASSIGN DECIMAL eMatch : MATCH VARIABLE LKEY content RKEYcontent : dato MOREEQUAL_THAN cuerpoFuncion\n    | dato MOREEQUAL_THAN cuerpoFuncion COMA contentloop : LOOP LKEY cuerpoFuncion RKEYapuntador : FN parametros'
    
_lr_action_items = {'VARIABLE':([0,8,13,14,17,19,21,22,24,25,26,33,49,64,68,84,86,87,93,110,113,123,125,130,135,138,144,145,146,147,167,173,175,],[12,12,27,28,32,34,50,51,58,60,63,12,81,90,97,111,116,120,12,111,111,12,151,97,12,12,116,116,116,116,90,97,-82,]),'STRUCT':([0,8,33,93,123,135,138,175,],[13,13,13,13,13,13,13,-82,]),'FN':([0,8,33,37,93,123,135,138,175,],[14,14,14,79,14,14,14,14,-82,]),'HASHMAP':([0,8,24,25,33,93,123,135,138,175,],[15,15,15,15,15,15,15,15,15,-82,]),'VEC':([0,8,20,24,25,33,37,50,51,68,70,75,80,81,86,93,121,123,129,130,133,134,135,138,144,145,146,147,152,173,175,178,],[16,16,47,59,59,16,47,-20,-21,47,47,47,47,-19,47,16,47,16,47,47,47,47,16,16,47,47,47,47,47,47,-82,47,]),'FOR':([0,8,33,93,123,135,138,175,],[17,17,17,17,17,17,17,-82,]),'LOOP':([0,8,33,93,123,135,138,175,],[18,18,18,18,18,18,18,-82,]),'MATCH':([0,8,33,93,123,135,138,175,],[19,19,19,19,19,19,19,-82,]),'LET':([0,8,33,93,123,135,138,175,],[21,21,21,21,21,21,21,-82,]),'CONST':([0,8,33,93,123,135,138,175,],[22,22,22,22,22,22,22,-82,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,20,23,35,36,39,40,41,42,43,44,45,46,47,48,50,51,63,76,77,78,81,82,88,89,95,105,108,122,126,128,132,137,139,150,153,156,158,168,170,171,172,174,175,],[0,-1,-2,-3,-4,-5,-6,-7,-9,-10,-14,-16,-8,-17,-18,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-20,-21,-15,-22,-23,-25,-19,-11,-12,-13,-66,-88,-89,-73,-64,-67,-76,-85,-24,-59,-65,-81,-77,-58,-61,-62,-63,-78,-82,]),'RKEY':([2,3,4,5,6,7,8,9,10,11,20,23,35,36,39,40,41,42,43,44,45,46,47,48,50,51,63,73,74,76,77,78,81,82,88,89,91,95,105,106,108,122,124,126,128,132,137,139,148,149,150,153,156,158,160,162,168,170,171,172,174,175,179,182,],[-1,-2,-3,-4,-5,-6,-7,-9,-10,-14,-16,-8,-17,-18,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-20,-21,-15,105,-72,-22,-23,-25,-19,-11,-12,-13,122,-66,-88,137,-89,-73,150,-64,-67,-76,-85,-24,-74,168,-59,-65,-81,-77,175,-86,-58,-61,-62,-63,-78,-82,-75,-87,]),'COMA':([2,3,4,5,6,7,8,9,10,11,20,23,35,36,39,40,41,42,43,44,45,46,47,48,50,51,63,74,76,77,78,81,82,83,88,89,95,98,101,105,108,112,113,115,116,117,118,119,122,126,128,132,137,139,140,141,142,143,148,150,153,154,156,158,162,168,170,171,172,174,175,],[-1,-2,-3,-4,-5,-6,-7,-9,-10,-14,-16,-8,-17,-18,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-20,-21,-15,-72,-22,-23,-25,-19,-11,-43,-12,-13,-66,130,133,-88,-89,-42,-46,-49,144,145,146,147,-73,-64,-67,-76,-85,-24,-44,-45,-47,-48,167,-59,-65,173,-81,-77,178,-58,-61,-62,-63,-78,-82,]),'ASSIGN':([11,12,20,35,36,39,40,41,42,43,44,45,46,47,48,50,51,76,77,78,81,95,108,126,128,139,153,161,170,171,172,],[24,25,-16,-17,-18,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-20,-21,-22,-23,-25,-19,-66,-89,-64,-67,-24,-65,177,-61,-62,-63,]),'POINT':([12,58,60,83,104,115,116,136,143,],[26,84,87,110,136,-49,84,161,-48,]),'TWO_POINTS':([15,16,20,29,31,37,50,51,58,59,60,81,85,90,94,97,111,116,120,152,],[29,31,37,69,71,37,-20,-21,85,31,85,-19,113,121,125,129,85,85,85,37,]),'NOT':([16,59,152,],[30,30,171,]),'LKEY':([18,27,34,39,40,41,42,43,44,45,46,47,48,66,76,77,78,92,95,103,108,126,128,139,153,170,171,172,176,181,],[33,64,75,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,93,-22,-23,-25,123,-66,135,-89,-64,-67,-24,-65,-61,-62,-63,-83,-84,]),'COMMA_DOT':([20,39,40,41,42,43,44,45,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,81,83,112,113,115,120,132,140,141,142,143,156,158,174,],[35,-26,-27,-28,-29,-30,-31,-32,-33,-35,-20,-21,82,-36,-37,-38,-39,-40,-41,-34,-41,88,89,-19,-43,-42,-46,-49,-15,-76,-44,-45,-47,-48,-81,-77,-78,]),'STRING':([20,24,25,37,50,51,68,70,75,80,81,86,121,129,130,133,134,144,145,146,147,152,173,178,],[39,39,39,39,-20,-21,39,39,39,39,-19,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'CHAR':([20,24,25,37,50,51,68,70,75,80,81,86,121,129,130,133,134,144,145,146,147,152,173,178,],[40,40,40,40,-20,-21,40,40,40,40,-19,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'DECIMAL':([20,24,25,37,50,51,68,70,72,75,80,81,86,121,129,130,133,134,144,145,146,147,152,161,173,177,178,],[41,41,41,41,-20,-21,41,41,104,41,41,-19,41,41,41,41,41,41,41,41,41,41,41,176,41,181,41,]),'HEXADECIMAL':([20,24,25,37,50,51,68,70,75,80,81,86,121,129,130,133,134,144,145,146,147,152,173,178,],[42,42,42,42,-20,-21,42,42,42,42,-19,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'OCTAL':([20,24,25,37,50,51,68,70,75,80,81,86,121,129,130,133,134,144,145,146,147,152,173,178,],[43,43,43,43,-20,-21,43,43,43,43,-19,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'BINARIO':([20,24,25,37,50,51,68,70,75,80,81,86,121,129,130,133,134,144,145,146,147,152,173,178,],[44,44,44,44,-20,-21,44,44,44,44,-19,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'BOOL':([20,24,25,37,50,51,68,70,75,80,81,86,121,129,130,133,134,144,145,146,147,152,173,178,],[45,45,45,45,-20,-21,45,45,45,45,-19,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'FLOAT':([20,24,25,37,50,51,68,70,75,80,81,86,121,129,130,133,134,144,145,146,147,152,173,178,],[46,46,46,46,-20,-21,46,46,46,46,-19,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'GENERIC':([20,24,25,37,50,51,67,68,70,75,80,81,86,121,129,130,133,134,144,145,146,147,152,173,178,],[48,48,48,48,-20,-21,94,48,48,48,48,-19,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'MUT':([21,],[49,]),'LESS_THAN':([28,38,39,40,41,42,43,44,45,46,47,48,76,170,],[67,80,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,80,80,]),'LPAREN':([28,58,60,65,79,99,102,111,113,116,120,169,],[68,86,86,68,68,131,134,86,86,86,86,-60,]),'LBRACKET':([30,],[70,]),'IN':([32,],[72,]),'RPAREN':([39,40,41,42,43,44,45,46,47,48,68,83,86,96,98,101,112,113,114,115,116,117,118,119,131,134,140,141,142,143,154,155,157,159,163,164,165,166,180,],[-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,95,-43,115,128,-71,-79,-42,-46,143,-49,-50,-51,-54,-55,156,158,-44,-45,-47,-48,-68,-70,-80,174,-52,-53,-56,-57,-69,]),'RBRACKET':([39,40,41,42,43,44,45,46,47,48,100,101,157,],[-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,132,-79,-80,]),'MOREEQUAL_THAN':([39,40,41,42,43,44,45,46,47,48,107,],[-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,138,]),'MORE_THAN':([39,40,41,42,43,44,45,46,47,48,109,127,151,],[-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,139,152,169,]),'NEW':([69,71,],[99,102,]),'MINUS':([95,128,],[127,127,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,8,33,93,123,135,138,],[1,23,74,74,74,74,74,]),'asignacion':([0,8,33,93,123,135,138,],[2,2,2,2,2,2,2,]),'struct':([0,8,33,93,123,135,138,],[3,3,3,3,3,3,3,]),'varEnVar':([0,8,25,33,93,123,135,138,],[4,4,62,4,4,4,4,4,]),'definirFuncion':([0,8,33,93,123,135,138,],[5,5,5,5,5,5,5,]),'hashMap':([0,8,24,25,33,93,123,135,138,],[6,6,57,57,6,6,6,6,6,]),'vector':([0,8,24,25,33,93,123,135,138,],[7,7,56,56,7,7,7,7,7,]),'for':([0,8,33,93,123,135,138,],[8,8,8,8,8,8,8,]),'loop':([0,8,33,93,123,135,138,],[9,9,9,9,9,9,9,]),'eMatch':([0,8,33,93,123,135,138,],[10,10,10,10,10,10,10,]),'definicion':([0,8,33,93,123,135,138,],[11,11,11,11,11,11,11,]),'creacion':([0,8,33,93,123,135,138,],[20,20,20,20,20,20,20,]),'tipoDato':([20,37,152,],[36,77,172,]),'dato':([20,24,25,37,68,70,75,80,86,121,129,130,133,134,144,145,146,147,152,173,178,],[38,53,53,76,98,101,107,109,117,148,154,98,101,101,117,117,117,117,170,98,107,]),'valorAsignado':([24,25,],[52,61,]),'llamadaAfuncion':([24,25,84,86,87,110,113,144,145,146,147,],[54,54,112,118,112,140,142,118,118,118,118,]),'llamadaAfuncionPorAlias':([24,25,86,144,145,146,147,],[55,55,119,119,119,119,119,]),'trait':([28,],[65,]),'parametros':([28,65,79,],[66,92,108,]),'cuerpoFuncion':([33,93,123,135,138,],[73,124,149,160,162,]),'apuntador':([37,],[78,]),'argumentos':([58,60,111,113,116,120,],[83,83,83,141,83,83,]),'atributos':([64,167,],[91,179,]),'parametro':([68,130,173,],[96,155,180,]),'datos':([70,133,134,],[100,157,159,]),'rango':([72,],[103,]),'content':([75,178,],[106,182,]),'argumento':([86,144,145,146,147,],[114,163,164,165,166,]),'datoARetornar':([95,128,],[126,153,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',67),
  ('cuerpo -> struct','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',68),
  ('cuerpo -> varEnVar','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',69),
  ('cuerpo -> definirFuncion','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',70),
  ('cuerpo -> hashMap','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',71),
  ('cuerpo -> vector','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',72),
  ('cuerpo -> for','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',73),
  ('cuerpo -> for cuerpo','cuerpo',2,'p_cuerpo','AnalizadorSintactico.py',74),
  ('cuerpo -> loop','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',75),
  ('cuerpo -> eMatch','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',76),
  ('asignacion -> definicion ASSIGN valorAsignado COMMA_DOT','asignacion',4,'p_asignacion','AnalizadorSintactico.py',80),
  ('asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT','asignacion',4,'p_asignacion','AnalizadorSintactico.py',81),
  ('asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT','asignacion',4,'p_asignacion','AnalizadorSintactico.py',82),
  ('asignacion -> definicion','asignacion',1,'p_asignacion','AnalizadorSintactico.py',83),
  ('varEnVar -> VARIABLE POINT VARIABLE','varEnVar',3,'p_varEnVar','AnalizadorSintactico.py',86),
  ('definicion -> creacion','definicion',1,'p_definicion','AnalizadorSintactico.py',89),
  ('definicion -> creacion COMMA_DOT','definicion',2,'p_definicion','AnalizadorSintactico.py',90),
  ('definicion -> creacion tipoDato','definicion',2,'p_definicion','AnalizadorSintactico.py',91),
  ('creacion -> LET MUT VARIABLE','creacion',3,'p_creacion','AnalizadorSintactico.py',94),
  ('creacion -> LET VARIABLE','creacion',2,'p_creacion','AnalizadorSintactico.py',95),
  ('creacion -> CONST VARIABLE','creacion',2,'p_creacion','AnalizadorSintactico.py',96),
  ('tipoDato -> TWO_POINTS dato','tipoDato',2,'p_tipoDato','AnalizadorSintactico.py',99),
  ('tipoDato -> TWO_POINTS tipoDato','tipoDato',2,'p_tipoDato','AnalizadorSintactico.py',100),
  ('tipoDato -> dato LESS_THAN dato MORE_THAN','tipoDato',4,'p_tipoDato','AnalizadorSintactico.py',101),
  ('tipoDato -> TWO_POINTS apuntador','tipoDato',2,'p_tipoDato','AnalizadorSintactico.py',102),
  ('dato -> STRING','dato',1,'p_dato','AnalizadorSintactico.py',106),
  ('dato -> CHAR','dato',1,'p_dato','AnalizadorSintactico.py',107),
  ('dato -> DECIMAL','dato',1,'p_dato','AnalizadorSintactico.py',108),
  ('dato -> HEXADECIMAL','dato',1,'p_dato','AnalizadorSintactico.py',109),
  ('dato -> OCTAL','dato',1,'p_dato','AnalizadorSintactico.py',110),
  ('dato -> BINARIO','dato',1,'p_dato','AnalizadorSintactico.py',111),
  ('dato -> BOOL','dato',1,'p_dato','AnalizadorSintactico.py',112),
  ('dato -> FLOAT','dato',1,'p_dato','AnalizadorSintactico.py',113),
  ('dato -> VEC','dato',1,'p_dato','AnalizadorSintactico.py',114),
  ('dato -> GENERIC','dato',1,'p_dato','AnalizadorSintactico.py',115),
  ('valorAsignado -> dato','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',119),
  ('valorAsignado -> llamadaAfuncion','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',120),
  ('valorAsignado -> llamadaAfuncionPorAlias','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',121),
  ('valorAsignado -> vector','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',122),
  ('valorAsignado -> hashMap','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',123),
  ('valorAsignado -> VARIABLE','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',124),
  ('llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion','llamadaAfuncionPorAlias',3,'p_llamadaAfuncionPorAlias','AnalizadorSintactico.py',127),
  ('llamadaAfuncion -> VARIABLE argumentos','llamadaAfuncion',2,'p_llamadaAfuncion','AnalizadorSintactico.py',130),
  ('llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion','llamadaAfuncion',4,'p_llamadaAfuncion','AnalizadorSintactico.py',131),
  ('llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos','llamadaAfuncion',4,'p_llamadaAfuncion','AnalizadorSintactico.py',132),
  ('llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS','llamadaAfuncion',3,'p_llamadaAfuncion','AnalizadorSintactico.py',133),
  ('llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion','llamadaAfuncion',4,'p_llamadaAfuncion','AnalizadorSintactico.py',134),
  ('argumentos -> LPAREN argumento RPAREN','argumentos',3,'p_argumentos','AnalizadorSintactico.py',137),
  ('argumentos -> LPAREN RPAREN','argumentos',2,'p_argumentos','AnalizadorSintactico.py',138),
  ('argumento -> VARIABLE','argumento',1,'p_argumento','AnalizadorSintactico.py',141),
  ('argumento -> dato','argumento',1,'p_argumento','AnalizadorSintactico.py',142),
  ('argumento -> VARIABLE COMA argumento','argumento',3,'p_argumento','AnalizadorSintactico.py',143),
  ('argumento -> dato COMA argumento','argumento',3,'p_argumento','AnalizadorSintactico.py',144),
  ('argumento -> llamadaAfuncion','argumento',1,'p_argumento','AnalizadorSintactico.py',145),
  ('argumento -> llamadaAfuncionPorAlias','argumento',1,'p_argumento','AnalizadorSintactico.py',146),
  ('argumento -> llamadaAfuncion COMA argumento','argumento',3,'p_argumento','AnalizadorSintactico.py',147),
  ('argumento -> llamadaAfuncionPorAlias COMA argumento','argumento',3,'p_argumento','AnalizadorSintactico.py',148),
  ('definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY','definirFuncion',7,'p_definirFuncion','AnalizadorSintactico.py',151),
  ('definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY','definirFuncion',6,'p_definirFuncion','AnalizadorSintactico.py',152),
  ('trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN','trait',5,'p_trait','AnalizadorSintactico.py',156),
  ('datoARetornar -> MINUS MORE_THAN dato','datoARetornar',3,'p_datoAretornar','AnalizadorSintactico.py',159),
  ('datoARetornar -> MINUS MORE_THAN NOT','datoARetornar',3,'p_datoAretornar','AnalizadorSintactico.py',160),
  ('datoARetornar -> MINUS MORE_THAN tipoDato','datoARetornar',3,'p_datoAretornar','AnalizadorSintactico.py',161),
  ('parametros -> LPAREN RPAREN datoARetornar','parametros',3,'p_parametros','AnalizadorSintactico.py',165),
  ('parametros -> LPAREN parametro RPAREN datoARetornar','parametros',4,'p_parametros','AnalizadorSintactico.py',166),
  ('parametros -> LPAREN RPAREN','parametros',2,'p_parametros','AnalizadorSintactico.py',167),
  ('parametros -> LPAREN parametro RPAREN','parametros',3,'p_parametros','AnalizadorSintactico.py',168),
  ('parametro -> VARIABLE TWO_POINTS dato','parametro',3,'p_parametro','AnalizadorSintactico.py',172),
  ('parametro -> VARIABLE TWO_POINTS dato COMA parametro','parametro',5,'p_parametro','AnalizadorSintactico.py',173),
  ('parametro -> dato COMA parametro','parametro',3,'p_parametro','AnalizadorSintactico.py',174),
  ('parametro -> dato','parametro',1,'p_parametro','AnalizadorSintactico.py',175),
  ('cuerpoFuncion -> cuerpo','cuerpoFuncion',1,'p_cuerpoFuncion','AnalizadorSintactico.py',179),
  ('struct -> STRUCT VARIABLE LKEY atributos RKEY','struct',5,'p_struct','AnalizadorSintactico.py',184),
  ('atributos -> VARIABLE TWO_POINTS dato','atributos',3,'p_atributos','AnalizadorSintactico.py',187),
  ('atributos -> VARIABLE TWO_POINTS dato COMA atributos','atributos',5,'p_atributos','AnalizadorSintactico.py',188),
  ('vector -> VEC NOT LBRACKET datos RBRACKET','vector',5,'p_vector','AnalizadorSintactico.py',192),
  ('vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN','vector',6,'p_vector','AnalizadorSintactico.py',193),
  ('vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN','vector',7,'p_vector','AnalizadorSintactico.py',194),
  ('datos -> dato','datos',1,'p_datos','AnalizadorSintactico.py',197),
  ('datos -> dato COMA datos','datos',3,'p_datos','AnalizadorSintactico.py',198),
  ('hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN','hashMap',6,'p_hashMap','AnalizadorSintactico.py',202),
  ('for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY','for',7,'p_for','AnalizadorSintactico.py',206),
  ('rango -> DECIMAL POINT POINT DECIMAL','rango',4,'p_rango','AnalizadorSintactico.py',210),
  ('rango -> DECIMAL POINT POINT ASSIGN DECIMAL','rango',5,'p_rango','AnalizadorSintactico.py',211),
  ('eMatch -> MATCH VARIABLE LKEY content RKEY','eMatch',5,'p_eMatch','AnalizadorSintactico.py',215),
  ('content -> dato MOREEQUAL_THAN cuerpoFuncion','content',3,'p_content','AnalizadorSintactico.py',219),
  ('content -> dato MOREEQUAL_THAN cuerpoFuncion COMA content','content',5,'p_content','AnalizadorSintactico.py',220),
  ('loop -> LOOP LKEY cuerpoFuncion RKEY','loop',4,'p_loop','AnalizadorSintactico.py',224),
  ('apuntador -> FN parametros','apuntador',2,'p_apuntador','AnalizadorSintactico.py',227),
]
