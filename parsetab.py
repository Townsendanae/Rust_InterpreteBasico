
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ALIGNOF AND AND_BIT AS ASSIGN BECOME BINARIO BOOL BOX BREAK BYTE CHAR COMA COMMA_DOT CONST CONTINUE CRATE DECIMAL DIVIDE DO ELSE ENUM EQUALS EXTERN FINAL FLOAT FN FOR GENERIC HASHMAP HEXADECIMAL IF IMPL IN INTEGER LBRACKET LEFT_MAYUS LESSEQUAL_THAN LESS_THAN LET LKEY LOOP LPAREN MACRO MATCH MATH_REMINDER MINUS MOD MOREEQUAL_THAN MORE_THAN MOV MUT NEW NOT NOT_EQUALS OCTAL OFFSETOF OR OR_BIT OVERRIDE PLUS POINT PRINTLN PRIV PROC PUB PURE QUO_MARKS RBRACKET REF RETURN RIGHT_MAYUS RKEY RPAREN SELF SIZEOF STATIC STRING STRUCT SUPER TIMES TRAIT TWO_POINTS TYPE TYPEOF UNSAFE UNSIZED USE VARIABLE VEC VIRTUAL WHERE WHILE XOR_BIT YIELDcuerpo : asignacion\n    | struct\n    | varEnVar\n    | definirFuncion\n    | hashMap\n    | vector\n    | for\n    | loop\n    | eMatch\n    | condicional\n    asignacion : definicion ASSIGN valorAsignado COMMA_DOT\n    | VARIABLE ASSIGN valorAsignado COMMA_DOT\n    | VARIABLE ASSIGN varEnVar COMMA_DOT\n    | definicionvarEnVar : VARIABLE POINT VARIABLEdefinicion : creacion\n    | creacion COMMA_DOT\n    | creacion tipoDatocreacion : LET MUT VARIABLE\n    | LET VARIABLE\n    | CONST VARIABLEtipoDato : TWO_POINTS dato\n    | TWO_POINTS dato tipoDato\n    | LESS_THAN dato MORE_THAN\n    | TWO_POINTS apuntador\n    dato : STRING\n    | CHAR\n    | DECIMAL\n    | HEXADECIMAL\n    | OCTAL\n    | BINARIO\n    | BOOL\n    | FLOAT\n    | VEC\n    | GENERIC\n    valorAsignado : dato\n    | llamadaAfuncion\n    | llamadaAfuncionPorAlias\n    | vector\n    | hashMap\n    | VARIABLEllamadaAfuncionPorAlias : VARIABLE POINT llamadaAfuncionllamadaAfuncion : VARIABLE argumentos\n    | VARIABLE argumentos POINT llamadaAfuncion\n    | VARIABLE TWO_POINTS TWO_POINTS argumentos\n    | VARIABLE TWO_POINTS TWO_POINTS\n    | VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncionargumentos : LPAREN argumento RPAREN\n    | LPAREN RPARENargumento : VARIABLE\n    | dato\n    | VARIABLE COMA argumento\n    | dato COMA argumento\n    | llamadaAfuncion\n    | llamadaAfuncionPorAlias\n    | llamadaAfuncion COMA argumento\n    | llamadaAfuncionPorAlias COMA argumento definirFuncion : FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY\n    | FN VARIABLE parametros LKEY cuerpoFuncion RKEY\n    trait : LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN  datoARetornar : MINUS MORE_THAN dato\n    | MINUS MORE_THAN NOT\n    parametros : LPAREN RPAREN datoARetornar\n    | LPAREN parametro RPAREN datoARetornar\n    | LPAREN RPAREN\n    | LPAREN parametro RPARENparametro : VARIABLE TWO_POINTS dato \n    | VARIABLE TWO_POINTS dato COMA parametro\n    | dato COMA parametro\n    | dato\n     cuerpoFuncion : cuerpo\n    struct : STRUCT VARIABLE LKEY atributos RKEYatributos : VARIABLE TWO_POINTS dato\n    | VARIABLE TWO_POINTS dato COMA atributosvector : VEC NOT LBRACKET datos RBRACKET datos : dato\n    | dato COMA datoscondicional : IF VARIABLE comparacion VARIABLE LKEY cuerpo RKEYcomparacion : EQUALS \n    | NOT_EQUALS\n    | LESS_THAN\n    | LESSEQUAL_THAN\n    | MORE_THAN\n    | MOREEQUAL_THANhashMap : HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPARENfor : FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY rango : DECIMAL POINT POINT DECIMAL\n    | DECIMAL POINT POINT ASSIGN DECIMAL eMatch : MATCH VARIABLE LKEY content RKEYcontent : dato MOREEQUAL_THAN cuerpoFuncion\n    | dato MOREEQUAL_THAN cuerpoFuncion COMA contentloop : LOOP LKEY cuerpoFuncion RKEYapuntador : FN parametros'
    
_lr_action_items = {'VARIABLE':([0,14,15,18,20,21,23,24,25,26,27,33,40,64,68,75,76,77,78,79,80,81,90,92,93,99,117,120,130,132,137,141,144,145,150,151,152,153,172,177,],[13,28,29,32,34,35,41,42,49,60,63,13,87,96,103,113,-79,-80,-81,-82,-83,-84,118,123,127,13,118,118,13,157,103,13,13,13,123,123,123,123,96,103,]),'STRUCT':([0,33,99,130,141,144,145,],[14,14,14,14,14,14,14,]),'FN':([0,33,38,99,130,141,144,145,],[15,15,85,15,15,15,15,15,]),'HASHMAP':([0,25,26,33,99,130,141,144,145,],[16,16,16,16,16,16,16,16,16,]),'VEC':([0,25,26,33,38,39,68,70,74,92,99,128,130,136,137,140,141,144,145,150,151,152,153,158,177,181,],[17,58,58,17,84,84,84,84,84,84,17,84,17,84,84,84,17,17,17,84,84,84,84,84,84,84,]),'FOR':([0,33,99,130,141,144,145,],[18,18,18,18,18,18,18,]),'LOOP':([0,33,99,130,141,144,145,],[19,19,19,19,19,19,19,]),'MATCH':([0,33,99,130,141,144,145,],[20,20,20,20,20,20,20,]),'IF':([0,33,99,130,141,144,145,],[21,21,21,21,21,21,21,]),'LET':([0,33,99,130,141,144,145,],[23,23,23,23,23,23,23,]),'CONST':([0,33,99,130,141,144,145,],[24,24,24,24,24,24,24,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,22,36,37,41,42,50,51,52,53,54,55,56,57,59,63,82,83,84,87,88,94,95,101,110,114,115,116,129,133,135,139,143,156,159,162,173,175,176,178,182,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-14,-16,-17,-18,-20,-21,-26,-27,-28,-29,-30,-31,-32,-33,-35,-15,-22,-25,-34,-19,-11,-12,-13,-65,-92,-23,-93,-24,-72,-63,-66,-75,-89,-59,-64,-85,-58,-61,-62,-86,-78,]),'RKEY':([2,3,4,5,6,7,8,9,10,11,12,22,36,37,41,42,50,51,52,53,54,55,56,57,59,63,72,73,82,83,84,87,88,94,95,97,101,110,111,114,115,116,129,131,133,135,139,143,154,155,156,159,162,164,166,167,173,175,176,178,182,183,186,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-14,-16,-17,-18,-20,-21,-26,-27,-28,-29,-30,-31,-32,-33,-35,-15,110,-71,-22,-25,-34,-19,-11,-12,-13,129,-65,-92,143,-23,-93,-24,-72,156,-63,-66,-75,-89,-73,173,-59,-64,-85,178,-90,182,-58,-61,-62,-86,-78,-74,-91,]),'COMA':([2,3,4,5,6,7,8,9,10,11,12,22,36,37,41,42,50,51,52,53,54,55,56,57,59,63,73,82,83,84,87,88,89,94,95,101,104,107,110,114,115,116,119,120,122,123,124,125,126,129,133,135,139,143,146,147,148,149,154,156,159,160,162,166,173,175,176,178,182,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-14,-16,-17,-18,-20,-21,-26,-27,-28,-29,-30,-31,-32,-33,-35,-15,-71,-22,-25,-34,-19,-11,-43,-12,-13,-65,137,140,-92,-23,-93,-24,-42,-46,-49,150,151,152,153,-72,-63,-66,-75,-89,-44,-45,-47,-48,172,-59,-64,177,-85,181,-58,-61,-62,-86,-78,]),'ASSIGN':([12,13,22,36,37,41,42,50,51,52,53,54,55,56,57,59,82,83,84,87,101,114,115,116,133,135,159,165,175,176,],[25,26,-16,-17,-18,-20,-21,-26,-27,-28,-29,-30,-31,-32,-33,-35,-22,-25,-34,-19,-65,-23,-93,-24,-63,-66,-64,180,-61,-62,]),'POINT':([13,49,60,89,109,122,123,142,149,],[27,90,93,117,142,-49,90,165,-48,]),'TWO_POINTS':([16,22,30,41,42,49,50,51,52,53,54,55,56,57,59,60,82,84,87,91,96,100,103,118,123,127,],[30,38,69,-20,-21,91,-26,-27,-28,-29,-30,-31,-32,-33,-35,91,38,-34,-19,120,128,132,136,91,91,91,]),'NOT':([17,58,158,],[31,31,176,]),'LKEY':([19,28,34,50,51,52,53,54,55,56,57,59,66,84,98,101,108,113,133,135,159,175,176,179,185,],[33,64,74,-26,-27,-28,-29,-30,-31,-32,-33,-35,99,-34,130,-65,141,145,-63,-66,-64,-61,-62,-87,-88,]),'COMMA_DOT':([22,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,87,89,119,120,122,127,139,146,147,148,149,162,],[36,-20,-21,88,-36,-37,-38,-39,-40,-41,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-41,94,95,-19,-43,-42,-46,-49,-15,-75,-44,-45,-47,-48,-85,]),'LESS_THAN':([22,29,35,41,42,50,51,52,53,54,55,56,57,59,82,84,87,],[39,67,78,-20,-21,-26,-27,-28,-29,-30,-31,-32,-33,-35,39,-34,-19,]),'MUT':([23,],[40,]),'STRING':([25,26,38,39,68,70,74,92,128,136,137,140,150,151,152,153,158,177,181,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'CHAR':([25,26,38,39,68,70,74,92,128,136,137,140,150,151,152,153,158,177,181,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'DECIMAL':([25,26,38,39,68,70,71,74,92,128,136,137,140,150,151,152,153,158,165,177,180,181,],[52,52,52,52,52,52,109,52,52,52,52,52,52,52,52,52,52,52,179,52,185,52,]),'HEXADECIMAL':([25,26,38,39,68,70,74,92,128,136,137,140,150,151,152,153,158,177,181,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'OCTAL':([25,26,38,39,68,70,74,92,128,136,137,140,150,151,152,153,158,177,181,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'BINARIO':([25,26,38,39,68,70,74,92,128,136,137,140,150,151,152,153,158,177,181,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'BOOL':([25,26,38,39,68,70,74,92,128,136,137,140,150,151,152,153,158,177,181,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'FLOAT':([25,26,38,39,68,70,74,92,128,136,137,140,150,151,152,153,158,177,181,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'GENERIC':([25,26,38,39,67,68,70,74,92,128,136,137,140,150,151,152,153,158,177,181,],[59,59,59,59,100,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'LPAREN':([29,49,60,65,85,105,118,120,123,127,174,],[68,92,92,68,68,138,92,92,92,92,-60,]),'LBRACKET':([31,],[70,]),'IN':([32,],[71,]),'EQUALS':([35,],[76,]),'NOT_EQUALS':([35,],[77,]),'LESSEQUAL_THAN':([35,],[79,]),'MORE_THAN':([35,50,51,52,53,54,55,56,57,59,84,86,134,157,],[80,-26,-27,-28,-29,-30,-31,-32,-33,-35,-34,116,158,174,]),'MOREEQUAL_THAN':([35,50,51,52,53,54,55,56,57,59,84,112,],[81,-26,-27,-28,-29,-30,-31,-32,-33,-35,-34,144,]),'RPAREN':([50,51,52,53,54,55,56,57,59,68,84,89,92,102,104,119,120,121,122,123,124,125,126,138,146,147,148,149,160,161,168,169,170,171,184,],[-26,-27,-28,-29,-30,-31,-32,-33,-35,101,-34,-43,122,135,-70,-42,-46,149,-49,-50,-51,-54,-55,162,-44,-45,-47,-48,-67,-69,-52,-53,-56,-57,-68,]),'RBRACKET':([50,51,52,53,54,55,56,57,59,84,106,107,163,],[-26,-27,-28,-29,-30,-31,-32,-33,-35,-34,139,-76,-77,]),'NEW':([69,],[105,]),'MINUS':([101,135,],[134,134,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,33,99,130,141,144,145,],[1,73,73,73,73,73,167,]),'asignacion':([0,33,99,130,141,144,145,],[2,2,2,2,2,2,2,]),'struct':([0,33,99,130,141,144,145,],[3,3,3,3,3,3,3,]),'varEnVar':([0,26,33,99,130,141,144,145,],[4,62,4,4,4,4,4,4,]),'definirFuncion':([0,33,99,130,141,144,145,],[5,5,5,5,5,5,5,]),'hashMap':([0,25,26,33,99,130,141,144,145,],[6,48,48,6,6,6,6,6,6,]),'vector':([0,25,26,33,99,130,141,144,145,],[7,47,47,7,7,7,7,7,7,]),'for':([0,33,99,130,141,144,145,],[8,8,8,8,8,8,8,]),'loop':([0,33,99,130,141,144,145,],[9,9,9,9,9,9,9,]),'eMatch':([0,33,99,130,141,144,145,],[10,10,10,10,10,10,10,]),'condicional':([0,33,99,130,141,144,145,],[11,11,11,11,11,11,11,]),'definicion':([0,33,99,130,141,144,145,],[12,12,12,12,12,12,12,]),'creacion':([0,33,99,130,141,144,145,],[22,22,22,22,22,22,22,]),'tipoDato':([22,82,],[37,114,]),'valorAsignado':([25,26,],[43,61,]),'dato':([25,26,38,39,68,70,74,92,128,136,137,140,150,151,152,153,158,177,181,],[44,44,82,86,104,107,112,124,154,160,104,107,124,124,124,124,175,104,112,]),'llamadaAfuncion':([25,26,90,92,93,117,120,150,151,152,153,],[45,45,119,125,119,146,148,125,125,125,125,]),'llamadaAfuncionPorAlias':([25,26,92,150,151,152,153,],[46,46,126,126,126,126,126,]),'trait':([29,],[65,]),'parametros':([29,65,85,],[66,98,115,]),'cuerpoFuncion':([33,99,130,141,144,],[72,131,155,164,166,]),'comparacion':([35,],[75,]),'apuntador':([38,],[83,]),'argumentos':([49,60,118,120,123,127,],[89,89,89,147,89,89,]),'atributos':([64,172,],[97,183,]),'parametro':([68,137,177,],[102,161,184,]),'datos':([70,140,],[106,163,]),'rango':([71,],[108,]),'content':([74,181,],[111,186,]),'argumento':([92,150,151,152,153,],[121,168,169,170,171,]),'datoARetornar':([101,135,],[133,159,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',67),
  ('cuerpo -> struct','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',68),
  ('cuerpo -> varEnVar','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',69),
  ('cuerpo -> definirFuncion','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',70),
  ('cuerpo -> hashMap','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',71),
  ('cuerpo -> vector','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',72),
  ('cuerpo -> for','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',73),
  ('cuerpo -> loop','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',74),
  ('cuerpo -> eMatch','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',75),
  ('cuerpo -> condicional','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',76),
  ('asignacion -> definicion ASSIGN valorAsignado COMMA_DOT','asignacion',4,'p_asignacion','AnalizadorSintactico.py',80),
  ('asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT','asignacion',4,'p_asignacion','AnalizadorSintactico.py',81),
  ('asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT','asignacion',4,'p_asignacion','AnalizadorSintactico.py',82),
  ('asignacion -> definicion','asignacion',1,'p_asignacion','AnalizadorSintactico.py',83),
  ('varEnVar -> VARIABLE POINT VARIABLE','varEnVar',3,'p_varEnVar','AnalizadorSintactico.py',86),
  ('definicion -> creacion','definicion',1,'p_definicion','AnalizadorSintactico.py',89),
  ('definicion -> creacion COMMA_DOT','definicion',2,'p_definicion','AnalizadorSintactico.py',90),
  ('definicion -> creacion tipoDato','definicion',2,'p_definicion','AnalizadorSintactico.py',91),
  ('creacion -> LET MUT VARIABLE','creacion',3,'p_creacion','AnalizadorSintactico.py',94),
  ('creacion -> LET VARIABLE','creacion',2,'p_creacion','AnalizadorSintactico.py',95),
  ('creacion -> CONST VARIABLE','creacion',2,'p_creacion','AnalizadorSintactico.py',96),
  ('tipoDato -> TWO_POINTS dato','tipoDato',2,'p_tipoDato','AnalizadorSintactico.py',99),
  ('tipoDato -> TWO_POINTS dato tipoDato','tipoDato',3,'p_tipoDato','AnalizadorSintactico.py',100),
  ('tipoDato -> LESS_THAN dato MORE_THAN','tipoDato',3,'p_tipoDato','AnalizadorSintactico.py',101),
  ('tipoDato -> TWO_POINTS apuntador','tipoDato',2,'p_tipoDato','AnalizadorSintactico.py',102),
  ('dato -> STRING','dato',1,'p_dato','AnalizadorSintactico.py',106),
  ('dato -> CHAR','dato',1,'p_dato','AnalizadorSintactico.py',107),
  ('dato -> DECIMAL','dato',1,'p_dato','AnalizadorSintactico.py',108),
  ('dato -> HEXADECIMAL','dato',1,'p_dato','AnalizadorSintactico.py',109),
  ('dato -> OCTAL','dato',1,'p_dato','AnalizadorSintactico.py',110),
  ('dato -> BINARIO','dato',1,'p_dato','AnalizadorSintactico.py',111),
  ('dato -> BOOL','dato',1,'p_dato','AnalizadorSintactico.py',112),
  ('dato -> FLOAT','dato',1,'p_dato','AnalizadorSintactico.py',113),
  ('dato -> VEC','dato',1,'p_dato','AnalizadorSintactico.py',114),
  ('dato -> GENERIC','dato',1,'p_dato','AnalizadorSintactico.py',115),
  ('valorAsignado -> dato','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',119),
  ('valorAsignado -> llamadaAfuncion','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',120),
  ('valorAsignado -> llamadaAfuncionPorAlias','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',121),
  ('valorAsignado -> vector','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',122),
  ('valorAsignado -> hashMap','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',123),
  ('valorAsignado -> VARIABLE','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',124),
  ('llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion','llamadaAfuncionPorAlias',3,'p_llamadaAfuncionPorAlias','AnalizadorSintactico.py',127),
  ('llamadaAfuncion -> VARIABLE argumentos','llamadaAfuncion',2,'p_llamadaAfuncion','AnalizadorSintactico.py',130),
  ('llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion','llamadaAfuncion',4,'p_llamadaAfuncion','AnalizadorSintactico.py',131),
  ('llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos','llamadaAfuncion',4,'p_llamadaAfuncion','AnalizadorSintactico.py',132),
  ('llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS','llamadaAfuncion',3,'p_llamadaAfuncion','AnalizadorSintactico.py',133),
  ('llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion','llamadaAfuncion',4,'p_llamadaAfuncion','AnalizadorSintactico.py',134),
  ('argumentos -> LPAREN argumento RPAREN','argumentos',3,'p_argumentos','AnalizadorSintactico.py',137),
  ('argumentos -> LPAREN RPAREN','argumentos',2,'p_argumentos','AnalizadorSintactico.py',138),
  ('argumento -> VARIABLE','argumento',1,'p_argumento','AnalizadorSintactico.py',141),
  ('argumento -> dato','argumento',1,'p_argumento','AnalizadorSintactico.py',142),
  ('argumento -> VARIABLE COMA argumento','argumento',3,'p_argumento','AnalizadorSintactico.py',143),
  ('argumento -> dato COMA argumento','argumento',3,'p_argumento','AnalizadorSintactico.py',144),
  ('argumento -> llamadaAfuncion','argumento',1,'p_argumento','AnalizadorSintactico.py',145),
  ('argumento -> llamadaAfuncionPorAlias','argumento',1,'p_argumento','AnalizadorSintactico.py',146),
  ('argumento -> llamadaAfuncion COMA argumento','argumento',3,'p_argumento','AnalizadorSintactico.py',147),
  ('argumento -> llamadaAfuncionPorAlias COMA argumento','argumento',3,'p_argumento','AnalizadorSintactico.py',148),
  ('definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY','definirFuncion',7,'p_definirFuncion','AnalizadorSintactico.py',151),
  ('definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY','definirFuncion',6,'p_definirFuncion','AnalizadorSintactico.py',152),
  ('trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN','trait',5,'p_trait','AnalizadorSintactico.py',156),
  ('datoARetornar -> MINUS MORE_THAN dato','datoARetornar',3,'p_datoAretornar','AnalizadorSintactico.py',159),
  ('datoARetornar -> MINUS MORE_THAN NOT','datoARetornar',3,'p_datoAretornar','AnalizadorSintactico.py',160),
  ('parametros -> LPAREN RPAREN datoARetornar','parametros',3,'p_parametros','AnalizadorSintactico.py',164),
  ('parametros -> LPAREN parametro RPAREN datoARetornar','parametros',4,'p_parametros','AnalizadorSintactico.py',165),
  ('parametros -> LPAREN RPAREN','parametros',2,'p_parametros','AnalizadorSintactico.py',166),
  ('parametros -> LPAREN parametro RPAREN','parametros',3,'p_parametros','AnalizadorSintactico.py',167),
  ('parametro -> VARIABLE TWO_POINTS dato','parametro',3,'p_parametro','AnalizadorSintactico.py',171),
  ('parametro -> VARIABLE TWO_POINTS dato COMA parametro','parametro',5,'p_parametro','AnalizadorSintactico.py',172),
  ('parametro -> dato COMA parametro','parametro',3,'p_parametro','AnalizadorSintactico.py',173),
  ('parametro -> dato','parametro',1,'p_parametro','AnalizadorSintactico.py',174),
  ('cuerpoFuncion -> cuerpo','cuerpoFuncion',1,'p_cuerpoFuncion','AnalizadorSintactico.py',178),
  ('struct -> STRUCT VARIABLE LKEY atributos RKEY','struct',5,'p_struct','AnalizadorSintactico.py',183),
  ('atributos -> VARIABLE TWO_POINTS dato','atributos',3,'p_atributos','AnalizadorSintactico.py',186),
  ('atributos -> VARIABLE TWO_POINTS dato COMA atributos','atributos',5,'p_atributos','AnalizadorSintactico.py',187),
  ('vector -> VEC NOT LBRACKET datos RBRACKET','vector',5,'p_vector','AnalizadorSintactico.py',191),
  ('datos -> dato','datos',1,'p_datos','AnalizadorSintactico.py',194),
  ('datos -> dato COMA datos','datos',3,'p_datos','AnalizadorSintactico.py',195),
  ('condicional -> IF VARIABLE comparacion VARIABLE LKEY cuerpo RKEY','condicional',7,'p_condicional','AnalizadorSintactico.py',198),
  ('comparacion -> EQUALS','comparacion',1,'p_comparacion','AnalizadorSintactico.py',201),
  ('comparacion -> NOT_EQUALS','comparacion',1,'p_comparacion','AnalizadorSintactico.py',202),
  ('comparacion -> LESS_THAN','comparacion',1,'p_comparacion','AnalizadorSintactico.py',203),
  ('comparacion -> LESSEQUAL_THAN','comparacion',1,'p_comparacion','AnalizadorSintactico.py',204),
  ('comparacion -> MORE_THAN','comparacion',1,'p_comparacion','AnalizadorSintactico.py',205),
  ('comparacion -> MOREEQUAL_THAN','comparacion',1,'p_comparacion','AnalizadorSintactico.py',206),
  ('hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN','hashMap',6,'p_hashMap','AnalizadorSintactico.py',210),
  ('for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY','for',7,'p_for','AnalizadorSintactico.py',214),
  ('rango -> DECIMAL POINT POINT DECIMAL','rango',4,'p_rango','AnalizadorSintactico.py',218),
  ('rango -> DECIMAL POINT POINT ASSIGN DECIMAL','rango',5,'p_rango','AnalizadorSintactico.py',219),
  ('eMatch -> MATCH VARIABLE LKEY content RKEY','eMatch',5,'p_eMatch','AnalizadorSintactico.py',223),
  ('content -> dato MOREEQUAL_THAN cuerpoFuncion','content',3,'p_content','AnalizadorSintactico.py',227),
  ('content -> dato MOREEQUAL_THAN cuerpoFuncion COMA content','content',5,'p_content','AnalizadorSintactico.py',228),
  ('loop -> LOOP LKEY cuerpoFuncion RKEY','loop',4,'p_loop','AnalizadorSintactico.py',232),
  ('apuntador -> FN parametros','apuntador',2,'p_apuntador','AnalizadorSintactico.py',235),
]
