
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ALIGNOF AND AND_BIT AS ASSIGN BECOME BINARIO BOOL BOX BREAK BYTE CHAR COMA COMMA_DOT CONST CONTINUE CRATE DECIMAL DIVIDE DO ELSE ENUM EQUALS EXTERN FINAL FLOAT FN FOR GENERIC HASHMAP HEXADECIMAL IF IMPL IN INTEGER LEFT_MAYUS LESSEQUAL_THAN LESS_THAN LET LKEY LOOP LPAREN MACRO MATCH MATH_REMINDER MINUS MOD MOREEQUAL_THAN MORE_THAN MOV MUT NEW NOT NOT_EQUALS OCTAL OFFSETOF OR OR_BIT OVERRIDE PLUS POINT PRINTLN PRIV PROC PUB PURE QUO_MARKS REF RETURN RIGHT_MAYUS RKEY RPAREN SELF SIZEOF STATIC STRING STRUCT SUPER TIMES TRAIT TWO_POINTS TYPE TYPEOF UNSAFE UNSIZED USE VARIABLE VIRTUAL WHERE WHILE XOR_BIT YIELDcuerpo : asignacion\n  | asignacionMutable\n  | eMatch\n  | instruccion\n  | funcion\n  | funcionDivasignacion : LET VARIABLE ASSIGN valor COMMA_DOTvalor : STRING\n  | CHAR\n  | DECIMAL\n  | HEXADECIMAL\n  | OCTAL\n  | BINARIO\n  | BOOL\n  | FLOATeMatch : MATCH VARIABLE LKEY content RKEYcontent : valor MOREEQUAL_THAN instruccion\n  | valor MOREEQUAL_THAN instruccion COMA contentinstruccion : imprimir\n  | hashMapimprimir : PRINTLN NOT LPAREN valor RPARENhashMap : LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOTasignacionMutable : LET MUT VARIABLE ASSIGN valor COMMA_DOTfuncion : FN VARIABLE parametros LKEY instruccion RKEYparametros : LPAREN RPAREN\n  | LPAREN parametro RPARENparametro : VARIABLE\n  | VARIABLE COMA parametrofuncionDiv : FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY'
    
_lr_action_items = {'LET':([0,37,47,64,],[8,49,49,49,]),'MATCH':([0,],[9,]),'FN':([0,],[12,]),'PRINTLN':([0,37,47,64,],[13,13,13,13,]),'$end':([1,2,3,4,5,6,7,10,11,43,46,53,54,57,70,72,],[0,-1,-2,-3,-4,-5,-6,-19,-20,-7,-16,-21,-23,-24,-29,-22,]),'VARIABLE':([8,9,12,15,23,52,58,],[14,16,17,20,41,41,63,]),'MUT':([8,49,],[15,58,]),'RKEY':([10,11,35,48,53,56,66,68,72,],[-19,-20,46,57,-21,-17,-18,70,-22,]),'COMA':([10,11,41,53,56,72,],[-19,-20,52,-21,62,-22,]),'NOT':([13,50,],[18,59,]),'ASSIGN':([14,20,63,],[19,34,67,]),'LKEY':([16,22,39,51,59,],[21,37,-25,-26,64,]),'LPAREN':([17,18,65,],[23,24,69,]),'STRING':([19,21,24,34,62,],[26,26,26,26,26,]),'CHAR':([19,21,24,34,62,],[27,27,27,27,27,]),'DECIMAL':([19,21,24,34,62,],[28,28,28,28,28,]),'HEXADECIMAL':([19,21,24,34,62,],[29,29,29,29,29,]),'OCTAL':([19,21,24,34,62,],[30,30,30,30,30,]),'BINARIO':([19,21,24,34,62,],[31,31,31,31,31,]),'BOOL':([19,21,24,34,62,],[32,32,32,32,32,]),'FLOAT':([19,21,24,34,62,],[33,33,33,33,33,]),'MINUS':([22,39,51,],[38,-25,-26,]),'RPAREN':([23,26,27,28,29,30,31,32,33,40,41,42,60,69,],[39,-8,-9,-10,-11,-12,-13,-14,-15,51,-27,53,-28,71,]),'COMMA_DOT':([25,26,27,28,29,30,31,32,33,44,71,],[43,-8,-9,-10,-11,-12,-13,-14,-15,54,72,]),'MOREEQUAL_THAN':([26,27,28,29,30,31,32,33,36,],[-8,-9,-10,-11,-12,-13,-14,-15,47,]),'HASHMAP':([34,67,],[45,45,]),'MORE_THAN':([38,],[50,]),'TWO_POINTS':([45,55,],[55,61,]),'NEW':([61,],[65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,],[1,]),'asignacion':([0,],[2,]),'asignacionMutable':([0,],[3,]),'eMatch':([0,],[4,]),'instruccion':([0,37,47,64,],[5,48,56,68,]),'funcion':([0,],[6,]),'funcionDiv':([0,],[7,]),'imprimir':([0,37,47,64,],[10,10,10,10,]),'hashMap':([0,37,47,64,],[11,11,11,11,]),'parametros':([17,],[22,]),'valor':([19,21,24,34,62,],[25,36,42,44,36,]),'content':([21,62,],[35,66,]),'parametro':([23,52,],[40,60,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',6),
  ('cuerpo -> asignacionMutable','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',7),
  ('cuerpo -> eMatch','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',8),
  ('cuerpo -> instruccion','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',9),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',10),
  ('cuerpo -> funcionDiv','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',11),
  ('asignacion -> LET VARIABLE ASSIGN valor COMMA_DOT','asignacion',5,'p_asignacion','AnalizadorSintactico.py',15),
  ('valor -> STRING','valor',1,'p_valor','AnalizadorSintactico.py',19),
  ('valor -> CHAR','valor',1,'p_valor','AnalizadorSintactico.py',20),
  ('valor -> DECIMAL','valor',1,'p_valor','AnalizadorSintactico.py',21),
  ('valor -> HEXADECIMAL','valor',1,'p_valor','AnalizadorSintactico.py',22),
  ('valor -> OCTAL','valor',1,'p_valor','AnalizadorSintactico.py',23),
  ('valor -> BINARIO','valor',1,'p_valor','AnalizadorSintactico.py',24),
  ('valor -> BOOL','valor',1,'p_valor','AnalizadorSintactico.py',25),
  ('valor -> FLOAT','valor',1,'p_valor','AnalizadorSintactico.py',26),
  ('eMatch -> MATCH VARIABLE LKEY content RKEY','eMatch',5,'p_eMatch','AnalizadorSintactico.py',31),
  ('content -> valor MOREEQUAL_THAN instruccion','content',3,'p_content','AnalizadorSintactico.py',34),
  ('content -> valor MOREEQUAL_THAN instruccion COMA content','content',5,'p_content','AnalizadorSintactico.py',35),
  ('instruccion -> imprimir','instruccion',1,'p_instruccion','AnalizadorSintactico.py',38),
  ('instruccion -> hashMap','instruccion',1,'p_instruccion','AnalizadorSintactico.py',39),
  ('imprimir -> PRINTLN NOT LPAREN valor RPAREN','imprimir',5,'p_imprimir','AnalizadorSintactico.py',42),
  ('hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT','hashMap',11,'p_hashMap','AnalizadorSintactico.py',59),
  ('asignacionMutable -> LET MUT VARIABLE ASSIGN valor COMMA_DOT','asignacionMutable',6,'p_asignacionMutable','AnalizadorSintactico.py',68),
  ('funcion -> FN VARIABLE parametros LKEY instruccion RKEY','funcion',6,'p_funcion','AnalizadorSintactico.py',71),
  ('parametros -> LPAREN RPAREN','parametros',2,'p_parametros','AnalizadorSintactico.py',74),
  ('parametros -> LPAREN parametro RPAREN','parametros',3,'p_parametros','AnalizadorSintactico.py',75),
  ('parametro -> VARIABLE','parametro',1,'p_parametro','AnalizadorSintactico.py',78),
  ('parametro -> VARIABLE COMA parametro','parametro',3,'p_parametro','AnalizadorSintactico.py',79),
  ('funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY','funcionDiv',9,'p_funcionDiv','AnalizadorSintactico.py',82),
]
