
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ALIGNOF AND AND_BIT AS ASSIGN BECOME BINARIO BOOL BOX BREAK BYTE CHAR COMA COMMA_DOT CONST CONTINUE CRATE DECIMAL DIVIDE DO ELSE ENUM EQUALS EXTERN FINAL FLOAT FN FOR GENERIC HASHMAP HEXADECIMAL IF IMPL IN INTEGER LBRACKET LEFT_MAYUS LESSEQUAL_THAN LESS_THAN LET LKEY LOOP LPAREN MACRO MATCH MATH_REMINDER MINUS MOD MOREEQUAL_THAN MORE_THAN MOV MUT NEW NOT NOT_EQUALS OCTAL OFFSETOF OR OR_BIT OVERRIDE PLUS POINT PRINTLN PRIV PROC PUB PURE QUO_MARKS RBRACKET REF RETURN RIGHT_MAYUS RKEY RPAREN SELF SIZEOF STATIC STRING STRUCT SUPER TIMES TRAIT TWO_POINTS TYPE TYPEOF UNSAFE UNSIZED USE VARIABLE VEC VIRTUAL WHERE WHILE XOR_BIT YIELDcuerpo : asignacion\n    | definicion\n    | struct\n    | varEnVar\n    | definirFuncion\n    | hashMap\n    | vector\n    asignacion : definicion ASSIGN valorAsignado COMMA_DOT\n    | VARIABLE ASSIGN valorAsignado COMMA_DOT\n    | VARIABLE ASSIGN varEnVar COMMA_DOTvarEnVar : VARIABLE POINT VARIABLEdefinicion : creacion\n    | creacion COMMA_DOT\n    | creacion tipoDatocreacion : LET MUT VARIABLE\n    | LET VARIABLE\n    | CONST VARIABLEtipoDato : TWO_POINTS dato\n    | TWO_POINTS dato tipoDato\n    | LESS_THAN dato MORE_THAN\n    dato : STRING\n    | CHAR\n    | DECIMAL\n    | HEXADECIMAL\n    | OCTAL\n    | BINARIO\n    | BOOL\n    | FLOAT\n    | VEC\n    | GENERIC\n    valorAsignado : dato\n    | llamadaAfuncion\n    | llamadaAfuncionPorAlias\n    | vector\n    | hashMapllamadaAfuncionPorAlias : VARIABLE POINT llamadaAfuncionllamadaAfuncion : VARIABLE argumentos\n    | VARIABLE argumentos POINT llamadaAfuncion\n    | VARIABLE TWO_POINTS TWO_POINTS argumentosargumentos : LPAREN argumento RPAREN\n    | LPAREN RPARENargumento : VARIABLE\n    | dato\n    | VARIABLE COMA argumento\n    | dato COMA argumento\n    | llamadaAfuncion\n    | llamadaAfuncionPorAlias\n    | llamadaAfuncion COMA argumento\n    | llamadaAfuncionPorAlias COMA argumento definirFuncion : FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY\n    | FN VARIABLE parametros LKEY cuerpoFuncion RKEY\n    trait : LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN  datoARetornar : MINUS MORE_THAN dato\n    | MINUS MORE_THAN NOT\n    parametros : LPAREN RPAREN datoARetornar\n    | LPAREN parametro RPAREN datoARetornar\n    | LPAREN RPAREN\n    | LPAREN parametro RPARENparametro : VARIABLE TWO_POINTS dato \n    | VARIABLE TWO_POINTS dato COMA parametro\n     cuerpoFuncion : cuerpo\n    struct : STRUCT VARIABLE LKEY atributos RKEYatributos : VARIABLE TWO_POINTS dato\n    | VARIABLE TWO_POINTS dato COMA atributosvector : VEC NOT LBRACKET datos RBRACKET datos : dato\n    | dato COMA datoshashMap : HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN'
    
_lr_action_items = {'VARIABLE':([0,11,12,15,16,17,18,19,28,55,59,65,67,68,76,84,97,100,111,112,113,114,128,133,],[9,24,25,29,30,47,48,51,62,73,80,85,90,94,9,85,9,118,90,90,90,90,73,80,]),'STRUCT':([0,76,97,],[11,11,11,]),'FN':([0,76,97,],[12,12,12,]),'HASHMAP':([0,17,18,76,97,],[13,13,13,13,13,]),'VEC':([0,17,18,22,23,61,67,76,95,97,104,107,111,112,113,114,119,],[14,45,45,53,53,53,53,14,53,14,53,53,53,53,53,53,53,]),'LET':([0,76,97,],[15,15,15,]),'CONST':([0,76,97,],[16,16,16,]),'$end':([1,2,3,4,5,6,7,8,10,20,21,29,30,37,38,39,40,41,42,43,44,46,51,52,53,62,63,69,70,71,72,96,106,117,122,129,],[0,-1,-2,-3,-4,-5,-6,-7,-12,-13,-14,-16,-17,-21,-22,-23,-24,-25,-26,-27,-28,-30,-11,-18,-29,-15,-8,-9,-10,-19,-20,-62,-65,-51,-68,-50,]),'RKEY':([2,3,4,5,6,7,8,10,20,21,29,30,37,38,39,40,41,42,43,44,46,51,52,53,62,63,69,70,71,72,74,96,98,99,106,115,116,117,122,129,134,],[-1,-2,-3,-4,-5,-6,-7,-12,-13,-14,-16,-17,-21,-22,-23,-24,-25,-26,-27,-28,-30,-11,-18,-29,-15,-8,-9,-10,-19,-20,96,-62,117,-61,-65,-63,129,-51,-68,-50,-64,]),'ASSIGN':([3,9,10,20,21,29,30,37,38,39,40,41,42,43,44,46,52,53,62,71,72,],[17,18,-12,-13,-14,-16,-17,-21,-22,-23,-24,-25,-26,-27,-28,-30,-18,-29,-15,-19,-20,]),'POINT':([9,47,48,64,89,90,110,],[19,65,68,84,-41,65,-40,]),'COMMA_DOT':([10,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,62,64,86,89,94,106,108,109,110,122,],[20,-16,-17,63,-31,-32,-33,-34,-35,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,69,70,-15,-37,-36,-41,-11,-65,-38,-39,-40,-68,]),'TWO_POINTS':([10,13,26,29,30,37,38,39,40,41,42,43,44,46,47,48,52,53,62,66,73,77,80,85,90,94,],[22,26,60,-16,-17,-21,-22,-23,-24,-25,-26,-27,-28,-30,66,66,22,-29,-15,87,95,100,104,66,66,66,]),'LESS_THAN':([10,25,29,30,37,38,39,40,41,42,43,44,46,52,53,62,],[23,58,-16,-17,-21,-22,-23,-24,-25,-26,-27,-28,-30,23,-29,-15,]),'NOT':([14,45,119,],[27,27,132,]),'MUT':([15,],[28,]),'STRING':([17,18,22,23,61,67,95,104,107,111,112,113,114,119,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'CHAR':([17,18,22,23,61,67,95,104,107,111,112,113,114,119,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'DECIMAL':([17,18,22,23,61,67,95,104,107,111,112,113,114,119,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'HEXADECIMAL':([17,18,22,23,61,67,95,104,107,111,112,113,114,119,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'OCTAL':([17,18,22,23,61,67,95,104,107,111,112,113,114,119,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'BINARIO':([17,18,22,23,61,67,95,104,107,111,112,113,114,119,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'BOOL':([17,18,22,23,61,67,95,104,107,111,112,113,114,119,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'FLOAT':([17,18,22,23,61,67,95,104,107,111,112,113,114,119,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'GENERIC':([17,18,22,23,58,61,67,95,104,107,111,112,113,114,119,],[46,46,46,46,77,46,46,46,46,46,46,46,46,46,46,]),'LKEY':([24,37,38,39,40,41,42,43,44,46,53,57,75,78,101,103,120,131,132,],[55,-21,-22,-23,-24,-25,-26,-27,-28,-30,-29,76,97,-57,-55,-58,-56,-53,-54,]),'LPAREN':([25,47,48,56,81,85,87,90,94,130,],[59,67,67,59,105,67,67,67,67,-52,]),'LBRACKET':([27,],[61,]),'MORE_THAN':([37,38,39,40,41,42,43,44,46,53,54,102,118,],[-21,-22,-23,-24,-25,-26,-27,-28,-30,-29,72,119,130,]),'COMA':([37,38,39,40,41,42,43,44,46,53,64,83,86,89,90,91,92,93,108,109,110,115,121,],[-21,-22,-23,-24,-25,-26,-27,-28,-30,-29,-37,107,-36,-41,111,112,113,114,-38,-39,-40,128,133,]),'RBRACKET':([37,38,39,40,41,42,43,44,46,53,82,83,123,],[-21,-22,-23,-24,-25,-26,-27,-28,-30,-29,106,-66,-67,]),'RPAREN':([37,38,39,40,41,42,43,44,46,53,59,64,67,79,86,88,89,90,91,92,93,105,108,109,110,121,124,125,126,127,135,],[-21,-22,-23,-24,-25,-26,-27,-28,-30,-29,78,-37,89,103,-36,110,-41,-42,-43,-46,-47,122,-38,-39,-40,-59,-44,-45,-48,-49,-60,]),'NEW':([60,],[81,]),'MINUS':([78,103,],[102,102,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,76,97,],[1,99,99,]),'asignacion':([0,76,97,],[2,2,2,]),'definicion':([0,76,97,],[3,3,3,]),'struct':([0,76,97,],[4,4,4,]),'varEnVar':([0,18,76,97,],[5,50,5,5,]),'definirFuncion':([0,76,97,],[6,6,6,]),'hashMap':([0,17,18,76,97,],[7,36,36,7,7,]),'vector':([0,17,18,76,97,],[8,35,35,8,8,]),'creacion':([0,76,97,],[10,10,10,]),'tipoDato':([10,52,],[21,71,]),'valorAsignado':([17,18,],[31,49,]),'dato':([17,18,22,23,61,67,95,104,107,111,112,113,114,119,],[32,32,52,54,83,91,115,121,83,91,91,91,91,131,]),'llamadaAfuncion':([17,18,65,67,68,84,111,112,113,114,],[33,33,86,92,86,108,92,92,92,92,]),'llamadaAfuncionPorAlias':([17,18,67,111,112,113,114,],[34,34,93,93,93,93,93,]),'trait':([25,],[56,]),'parametros':([25,56,],[57,75,]),'argumentos':([47,48,85,87,90,94,],[64,64,64,109,64,64,]),'atributos':([55,128,],[74,134,]),'parametro':([59,133,],[79,135,]),'datos':([61,107,],[82,123,]),'argumento':([67,111,112,113,114,],[88,124,125,126,127,]),'cuerpoFuncion':([76,97,],[98,116,]),'datoARetornar':([78,103,],[101,120,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',174),
  ('cuerpo -> definicion','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',175),
  ('cuerpo -> struct','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',176),
  ('cuerpo -> varEnVar','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',177),
  ('cuerpo -> definirFuncion','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',178),
  ('cuerpo -> hashMap','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',179),
  ('cuerpo -> vector','cuerpo',1,'p_cuerpo','AnalizadorSintactico.py',180),
  ('asignacion -> definicion ASSIGN valorAsignado COMMA_DOT','asignacion',4,'p_asignacion','AnalizadorSintactico.py',184),
  ('asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT','asignacion',4,'p_asignacion','AnalizadorSintactico.py',185),
  ('asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT','asignacion',4,'p_asignacion','AnalizadorSintactico.py',186),
  ('varEnVar -> VARIABLE POINT VARIABLE','varEnVar',3,'p_varEnVar','AnalizadorSintactico.py',189),
  ('definicion -> creacion','definicion',1,'p_definicion','AnalizadorSintactico.py',192),
  ('definicion -> creacion COMMA_DOT','definicion',2,'p_definicion','AnalizadorSintactico.py',193),
  ('definicion -> creacion tipoDato','definicion',2,'p_definicion','AnalizadorSintactico.py',194),
  ('creacion -> LET MUT VARIABLE','creacion',3,'p_creacion','AnalizadorSintactico.py',197),
  ('creacion -> LET VARIABLE','creacion',2,'p_creacion','AnalizadorSintactico.py',198),
  ('creacion -> CONST VARIABLE','creacion',2,'p_creacion','AnalizadorSintactico.py',199),
  ('tipoDato -> TWO_POINTS dato','tipoDato',2,'p_tipoDato','AnalizadorSintactico.py',202),
  ('tipoDato -> TWO_POINTS dato tipoDato','tipoDato',3,'p_tipoDato','AnalizadorSintactico.py',203),
  ('tipoDato -> LESS_THAN dato MORE_THAN','tipoDato',3,'p_tipoDato','AnalizadorSintactico.py',204),
  ('dato -> STRING','dato',1,'p_dato','AnalizadorSintactico.py',208),
  ('dato -> CHAR','dato',1,'p_dato','AnalizadorSintactico.py',209),
  ('dato -> DECIMAL','dato',1,'p_dato','AnalizadorSintactico.py',210),
  ('dato -> HEXADECIMAL','dato',1,'p_dato','AnalizadorSintactico.py',211),
  ('dato -> OCTAL','dato',1,'p_dato','AnalizadorSintactico.py',212),
  ('dato -> BINARIO','dato',1,'p_dato','AnalizadorSintactico.py',213),
  ('dato -> BOOL','dato',1,'p_dato','AnalizadorSintactico.py',214),
  ('dato -> FLOAT','dato',1,'p_dato','AnalizadorSintactico.py',215),
  ('dato -> VEC','dato',1,'p_dato','AnalizadorSintactico.py',216),
  ('dato -> GENERIC','dato',1,'p_dato','AnalizadorSintactico.py',217),
  ('valorAsignado -> dato','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',221),
  ('valorAsignado -> llamadaAfuncion','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',222),
  ('valorAsignado -> llamadaAfuncionPorAlias','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',223),
  ('valorAsignado -> vector','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',224),
  ('valorAsignado -> hashMap','valorAsignado',1,'p_valorAsignado','AnalizadorSintactico.py',225),
  ('llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion','llamadaAfuncionPorAlias',3,'p_llamadaAfuncionPorAlias','AnalizadorSintactico.py',228),
  ('llamadaAfuncion -> VARIABLE argumentos','llamadaAfuncion',2,'p_llamadaAfuncion','AnalizadorSintactico.py',231),
  ('llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion','llamadaAfuncion',4,'p_llamadaAfuncion','AnalizadorSintactico.py',232),
  ('llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos','llamadaAfuncion',4,'p_llamadaAfuncion','AnalizadorSintactico.py',233),
  ('argumentos -> LPAREN argumento RPAREN','argumentos',3,'p_argumentos','AnalizadorSintactico.py',236),
  ('argumentos -> LPAREN RPAREN','argumentos',2,'p_argumentos','AnalizadorSintactico.py',237),
  ('argumento -> VARIABLE','argumento',1,'p_argumento','AnalizadorSintactico.py',240),
  ('argumento -> dato','argumento',1,'p_argumento','AnalizadorSintactico.py',241),
  ('argumento -> VARIABLE COMA argumento','argumento',3,'p_argumento','AnalizadorSintactico.py',242),
  ('argumento -> dato COMA argumento','argumento',3,'p_argumento','AnalizadorSintactico.py',243),
  ('argumento -> llamadaAfuncion','argumento',1,'p_argumento','AnalizadorSintactico.py',244),
  ('argumento -> llamadaAfuncionPorAlias','argumento',1,'p_argumento','AnalizadorSintactico.py',245),
  ('argumento -> llamadaAfuncion COMA argumento','argumento',3,'p_argumento','AnalizadorSintactico.py',246),
  ('argumento -> llamadaAfuncionPorAlias COMA argumento','argumento',3,'p_argumento','AnalizadorSintactico.py',247),
  ('definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY','definirFuncion',7,'p_definirFuncion','AnalizadorSintactico.py',250),
  ('definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY','definirFuncion',6,'p_definirFuncion','AnalizadorSintactico.py',251),
  ('trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN','trait',5,'p_trait','AnalizadorSintactico.py',255),
  ('datoARetornar -> MINUS MORE_THAN dato','datoARetornar',3,'p_datoAretornar','AnalizadorSintactico.py',258),
  ('datoARetornar -> MINUS MORE_THAN NOT','datoARetornar',3,'p_datoAretornar','AnalizadorSintactico.py',259),
  ('parametros -> LPAREN RPAREN datoARetornar','parametros',3,'p_parametros','AnalizadorSintactico.py',263),
  ('parametros -> LPAREN parametro RPAREN datoARetornar','parametros',4,'p_parametros','AnalizadorSintactico.py',264),
  ('parametros -> LPAREN RPAREN','parametros',2,'p_parametros','AnalizadorSintactico.py',265),
  ('parametros -> LPAREN parametro RPAREN','parametros',3,'p_parametros','AnalizadorSintactico.py',266),
  ('parametro -> VARIABLE TWO_POINTS dato','parametro',3,'p_parametro','AnalizadorSintactico.py',270),
  ('parametro -> VARIABLE TWO_POINTS dato COMA parametro','parametro',5,'p_parametro','AnalizadorSintactico.py',271),
  ('cuerpoFuncion -> cuerpo','cuerpoFuncion',1,'p_cuerpoFuncion','AnalizadorSintactico.py',275),
  ('struct -> STRUCT VARIABLE LKEY atributos RKEY','struct',5,'p_struct','AnalizadorSintactico.py',280),
  ('atributos -> VARIABLE TWO_POINTS dato','atributos',3,'p_atributos','AnalizadorSintactico.py',283),
  ('atributos -> VARIABLE TWO_POINTS dato COMA atributos','atributos',5,'p_atributos','AnalizadorSintactico.py',284),
  ('vector -> VEC NOT LBRACKET datos RBRACKET','vector',5,'p_vector','AnalizadorSintactico.py',288),
  ('datos -> dato','datos',1,'p_datos','AnalizadorSintactico.py',291),
  ('datos -> dato COMA datos','datos',3,'p_datos','AnalizadorSintactico.py',292),
  ('hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN','hashMap',6,'p_hashMap','AnalizadorSintactico.py',296),
]
