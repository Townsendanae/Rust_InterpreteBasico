Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ALIGNOF
    AND
    AND_BIT
    BECOME
    BOX
    BREAK
    BYTE
    CONTINUE
    CRATE
    DIVIDE
    DO
    ELSE
    ENUM
    EQUALS
    EXTERN
    FINAL
    IF
    IMPL
    INTEGER
    LEFT_MAYUS
    LESSEQUAL_THAN
    MACRO
    MATH_REMINDER
    MOD
    MOV
    NOT_EQUALS
    OFFSETOF
    OR
    OR_BIT
    OVERRIDE
    PLUS
    PRINTLN
    PRIV
    PROC
    PUB
    PURE
    QUO_MARKS
    REF
    RETURN
    RIGHT_MAYUS
    SELF
    SIZEOF
    STATIC
    SUPER
    TIMES
    TRAIT
    TYPEOF
    UNSAFE
    UNSIZED
    USE
    VIRTUAL
    WHERE
    WHILE
    XOR_BIT
    YIELD

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> linea
Rule 2     cuerpo -> linea cuerpo
Rule 3     linea -> asignacion
Rule 4     linea -> struct
Rule 5     linea -> varEnVar
Rule 6     linea -> definirFuncion
Rule 7     linea -> hashMap
Rule 8     linea -> vector
Rule 9     linea -> for
Rule 10    linea -> loop
Rule 11    linea -> eMatch
Rule 12    linea -> casting
Rule 13    linea -> alias
Rule 14    asignacion -> definicion ASSIGN valorAsignado COMMA_DOT
Rule 15    asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT
Rule 16    asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT
Rule 17    asignacion -> definicion
Rule 18    varEnVar -> VARIABLE POINT VARIABLE
Rule 19    definicion -> creacion
Rule 20    definicion -> creacion COMMA_DOT
Rule 21    definicion -> creacion tipoDato
Rule 22    creacion -> LET MUT variables
Rule 23    creacion -> LET variables
Rule 24    creacion -> CONST variables
Rule 25    creacion -> LET MUT VARIABLE
Rule 26    creacion -> LET VARIABLE
Rule 27    creacion -> CONST VARIABLE
Rule 28    variables -> LPAREN conjuntoVariables RPAREN
Rule 29    conjuntoVariables -> VARIABLE COMA VARIABLE
Rule 30    conjuntoVariables -> VARIABLE COMA conjuntoVariables
Rule 31    tipoDato -> TWO_POINTS dato
Rule 32    tipoDato -> TWO_POINTS tipoDato
Rule 33    tipoDato -> dato LESS_THAN dato MORE_THAN
Rule 34    tipoDato -> TWO_POINTS apuntador
Rule 35    dato -> STRING
Rule 36    dato -> CHAR
Rule 37    dato -> DECIMAL
Rule 38    dato -> HEXADECIMAL
Rule 39    dato -> OCTAL
Rule 40    dato -> BINARIO
Rule 41    dato -> BOOL
Rule 42    dato -> FLOAT
Rule 43    dato -> VEC
Rule 44    dato -> GENERIC
Rule 45    valorAsignado -> dato
Rule 46    valorAsignado -> llamadaAfuncion
Rule 47    valorAsignado -> llamadaAfuncionPorAlias
Rule 48    valorAsignado -> vector
Rule 49    valorAsignado -> hashMap
Rule 50    valorAsignado -> LPAREN conjuntoDatos RPAREN
Rule 51    valorAsignado -> VARIABLE
Rule 52    conjuntoDatos -> dato COMA dato
Rule 53    conjuntoDatos -> dato COMA conjuntoDatos
Rule 54    llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion
Rule 55    llamadaAfuncion -> VARIABLE argumentos
Rule 56    llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion
Rule 57    llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos
Rule 58    llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS
Rule 59    llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion
Rule 60    argumentos -> LPAREN argumento RPAREN
Rule 61    argumentos -> LPAREN RPAREN
Rule 62    argumento -> VARIABLE
Rule 63    argumento -> dato
Rule 64    argumento -> VARIABLE COMA argumento
Rule 65    argumento -> dato COMA argumento
Rule 66    argumento -> llamadaAfuncion
Rule 67    argumento -> llamadaAfuncionPorAlias
Rule 68    argumento -> llamadaAfuncion COMA argumento
Rule 69    argumento -> llamadaAfuncionPorAlias COMA argumento
Rule 70    definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY
Rule 71    definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY
Rule 72    trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN
Rule 73    datoARetornar -> MINUS MORE_THAN dato
Rule 74    datoARetornar -> MINUS MORE_THAN NOT
Rule 75    datoARetornar -> MINUS MORE_THAN tipoDato
Rule 76    parametros -> LPAREN RPAREN datoARetornar
Rule 77    parametros -> LPAREN parametro RPAREN datoARetornar
Rule 78    parametros -> LPAREN RPAREN
Rule 79    parametros -> LPAREN parametro RPAREN
Rule 80    parametro -> VARIABLE TWO_POINTS dato
Rule 81    parametro -> VARIABLE TWO_POINTS dato COMA parametro
Rule 82    parametro -> dato COMA parametro
Rule 83    parametro -> dato
Rule 84    cuerpoFuncion -> cuerpo
Rule 85    struct -> STRUCT VARIABLE LKEY atributos RKEY
Rule 86    atributos -> VARIABLE TWO_POINTS dato
Rule 87    atributos -> VARIABLE TWO_POINTS dato COMA atributos
Rule 88    vector -> VEC NOT LBRACKET datos RBRACKET
Rule 89    vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
Rule 90    vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN
Rule 91    datos -> dato
Rule 92    datos -> dato COMA datos
Rule 93    hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
Rule 94    for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY
Rule 95    rango -> DECIMAL POINT POINT DECIMAL
Rule 96    rango -> DECIMAL POINT POINT ASSIGN DECIMAL
Rule 97    eMatch -> MATCH VARIABLE LKEY content RKEY
Rule 98    content -> dato MOREEQUAL_THAN cuerpoFuncion
Rule 99    content -> dato MOREEQUAL_THAN cuerpoFuncion COMA content
Rule 100   loop -> LOOP LKEY cuerpoFuncion RKEY
Rule 101   apuntador -> FN parametros
Rule 102   casting -> dato AS dato
Rule 103   casting -> dato AS casting
Rule 104   casting -> VARIABLE AS dato
Rule 105   casting -> VARIABLE AS casting
Rule 106   alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT

Terminals, with rules where they appear

ABSTRACT             : 
ALIGNOF              : 
AND                  : 
AND_BIT              : 
AS                   : 102 103 104 105
ASSIGN               : 14 15 16 96 106
BECOME               : 
BINARIO              : 40
BOOL                 : 41
BOX                  : 
BREAK                : 
BYTE                 : 
CHAR                 : 36
COMA                 : 29 30 52 53 64 65 68 69 81 82 87 92 99
COMMA_DOT            : 14 15 16 20 106
CONST                : 24 27
CONTINUE             : 
CRATE                : 
DECIMAL              : 37 95 95 96 96
DIVIDE               : 
DO                   : 
ELSE                 : 
ENUM                 : 
EQUALS               : 
EXTERN               : 
FINAL                : 
FLOAT                : 42
FN                   : 70 71 101
FOR                  : 94
GENERIC              : 44 72
HASHMAP              : 93
HEXADECIMAL          : 38
IF                   : 
IMPL                 : 
IN                   : 94
INTEGER              : 
LBRACKET             : 88
LEFT_MAYUS           : 
LESSEQUAL_THAN       : 
LESS_THAN            : 33 72
LET                  : 22 23 25 26
LKEY                 : 70 71 85 94 97 100
LOOP                 : 100
LPAREN               : 28 50 60 61 76 77 78 79 89 90 93
MACRO                : 
MATCH                : 97
MATH_REMINDER        : 
MINUS                : 73 74 75
MOD                  : 
MOREEQUAL_THAN       : 98 99
MORE_THAN            : 33 72 73 74 75
MOV                  : 
MUT                  : 22 25
NEW                  : 89 90 93
NOT                  : 74 88
NOT_EQUALS           : 
OCTAL                : 39
OFFSETOF             : 
OR                   : 
OR_BIT               : 
OVERRIDE             : 
PLUS                 : 
POINT                : 18 54 56 95 95 96 96
PRINTLN              : 
PRIV                 : 
PROC                 : 
PUB                  : 
PURE                 : 
QUO_MARKS            : 
RBRACKET             : 88
REF                  : 
RETURN               : 
RIGHT_MAYUS          : 
RKEY                 : 70 71 85 94 97 100
RPAREN               : 28 50 60 61 76 77 78 79 89 90 93
SELF                 : 
SIZEOF               : 
STATIC               : 
STRING               : 35
STRUCT               : 85
SUPER                : 
TIMES                : 
TRAIT                : 
TWO_POINTS           : 31 32 34 57 57 58 58 59 59 72 80 81 86 87 89 89 90 90 93 93
TYPE                 : 106
TYPEOF               : 
UNSAFE               : 
UNSIZED              : 
USE                  : 
VARIABLE             : 15 16 18 18 25 26 27 29 29 30 51 54 55 56 57 58 59 62 64 70 71 72 80 81 85 86 87 94 97 104 105 106
VEC                  : 43 88 89 90
VIRTUAL              : 
WHERE                : 
WHILE                : 
XOR_BIT              : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

alias                : 13
apuntador            : 34
argumento            : 60 64 65 68 69
argumentos           : 55 56 57
asignacion           : 3
atributos            : 85 87
casting              : 12 103 105
conjuntoDatos        : 50 53
conjuntoVariables    : 28 30
content              : 97 99
creacion             : 19 20 21
cuerpo               : 2 84 0
cuerpoFuncion        : 70 71 94 98 99 100
dato                 : 31 33 33 45 52 52 53 63 65 73 80 81 82 83 86 87 91 92 98 99 102 102 103 104 106
datoARetornar        : 76 77
datos                : 88 90 92
definicion           : 14 17
definirFuncion       : 6
eMatch               : 11
for                  : 9
hashMap              : 7 49
linea                : 1 2
llamadaAfuncion      : 46 54 56 59 66 68
llamadaAfuncionPorAlias : 47 67 69
loop                 : 10
parametro            : 77 79 81 82
parametros           : 70 71 101
rango                : 94
struct               : 4
tipoDato             : 21 32 75
trait                : 70
valorAsignado        : 14 15
varEnVar             : 5 16
variables            : 22 23 24
vector               : 8 48

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . linea
    (2) cuerpo -> . linea cuerpo
    (3) linea -> . asignacion
    (4) linea -> . struct
    (5) linea -> . varEnVar
    (6) linea -> . definirFuncion
    (7) linea -> . hashMap
    (8) linea -> . vector
    (9) linea -> . for
    (10) linea -> . loop
    (11) linea -> . eMatch
    (12) linea -> . casting
    (13) linea -> . alias
    (14) asignacion -> . definicion ASSIGN valorAsignado COMMA_DOT
    (15) asignacion -> . VARIABLE ASSIGN valorAsignado COMMA_DOT
    (16) asignacion -> . VARIABLE ASSIGN varEnVar COMMA_DOT
    (17) asignacion -> . definicion
    (85) struct -> . STRUCT VARIABLE LKEY atributos RKEY
    (18) varEnVar -> . VARIABLE POINT VARIABLE
    (70) definirFuncion -> . FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY
    (71) definirFuncion -> . FN VARIABLE parametros LKEY cuerpoFuncion RKEY
    (93) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (88) vector -> . VEC NOT LBRACKET datos RBRACKET
    (89) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (90) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN
    (94) for -> . FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY
    (100) loop -> . LOOP LKEY cuerpoFuncion RKEY
    (97) eMatch -> . MATCH VARIABLE LKEY content RKEY
    (102) casting -> . dato AS dato
    (103) casting -> . dato AS casting
    (104) casting -> . VARIABLE AS dato
    (105) casting -> . VARIABLE AS casting
    (106) alias -> . TYPE VARIABLE ASSIGN dato COMMA_DOT
    (19) definicion -> . creacion
    (20) definicion -> . creacion COMMA_DOT
    (21) definicion -> . creacion tipoDato
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (22) creacion -> . LET MUT variables
    (23) creacion -> . LET variables
    (24) creacion -> . CONST variables
    (25) creacion -> . LET MUT VARIABLE
    (26) creacion -> . LET VARIABLE
    (27) creacion -> . CONST VARIABLE

    VARIABLE        shift and go to state 15
    STRUCT          shift and go to state 16
    FN              shift and go to state 17
    HASHMAP         shift and go to state 18
    VEC             shift and go to state 19
    FOR             shift and go to state 20
    LOOP            shift and go to state 21
    MATCH           shift and go to state 22
    TYPE            shift and go to state 24
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    GENERIC         shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36

    cuerpo                         shift and go to state 1
    linea                          shift and go to state 2
    asignacion                     shift and go to state 3
    struct                         shift and go to state 4
    varEnVar                       shift and go to state 5
    definirFuncion                 shift and go to state 6
    hashMap                        shift and go to state 7
    vector                         shift and go to state 8
    for                            shift and go to state 9
    loop                           shift and go to state 10
    eMatch                         shift and go to state 11
    casting                        shift and go to state 12
    alias                          shift and go to state 13
    definicion                     shift and go to state 14
    dato                           shift and go to state 23
    creacion                       shift and go to state 25

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> linea .
    (2) cuerpo -> linea . cuerpo
    (1) cuerpo -> . linea
    (2) cuerpo -> . linea cuerpo
    (3) linea -> . asignacion
    (4) linea -> . struct
    (5) linea -> . varEnVar
    (6) linea -> . definirFuncion
    (7) linea -> . hashMap
    (8) linea -> . vector
    (9) linea -> . for
    (10) linea -> . loop
    (11) linea -> . eMatch
    (12) linea -> . casting
    (13) linea -> . alias
    (14) asignacion -> . definicion ASSIGN valorAsignado COMMA_DOT
    (15) asignacion -> . VARIABLE ASSIGN valorAsignado COMMA_DOT
    (16) asignacion -> . VARIABLE ASSIGN varEnVar COMMA_DOT
    (17) asignacion -> . definicion
    (85) struct -> . STRUCT VARIABLE LKEY atributos RKEY
    (18) varEnVar -> . VARIABLE POINT VARIABLE
    (70) definirFuncion -> . FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY
    (71) definirFuncion -> . FN VARIABLE parametros LKEY cuerpoFuncion RKEY
    (93) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (88) vector -> . VEC NOT LBRACKET datos RBRACKET
    (89) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (90) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN
    (94) for -> . FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY
    (100) loop -> . LOOP LKEY cuerpoFuncion RKEY
    (97) eMatch -> . MATCH VARIABLE LKEY content RKEY
    (102) casting -> . dato AS dato
    (103) casting -> . dato AS casting
    (104) casting -> . VARIABLE AS dato
    (105) casting -> . VARIABLE AS casting
    (106) alias -> . TYPE VARIABLE ASSIGN dato COMMA_DOT
    (19) definicion -> . creacion
    (20) definicion -> . creacion COMMA_DOT
    (21) definicion -> . creacion tipoDato
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (22) creacion -> . LET MUT variables
    (23) creacion -> . LET variables
    (24) creacion -> . CONST variables
    (25) creacion -> . LET MUT VARIABLE
    (26) creacion -> . LET VARIABLE
    (27) creacion -> . CONST VARIABLE

    $end            reduce using rule 1 (cuerpo -> linea .)
    RKEY            reduce using rule 1 (cuerpo -> linea .)
    COMA            reduce using rule 1 (cuerpo -> linea .)
    VARIABLE        shift and go to state 15
    STRUCT          shift and go to state 16
    FN              shift and go to state 17
    HASHMAP         shift and go to state 18
    VEC             shift and go to state 19
    FOR             shift and go to state 20
    LOOP            shift and go to state 21
    MATCH           shift and go to state 22
    TYPE            shift and go to state 24
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    GENERIC         shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36

    linea                          shift and go to state 2
    cuerpo                         shift and go to state 37
    asignacion                     shift and go to state 3
    struct                         shift and go to state 4
    varEnVar                       shift and go to state 5
    definirFuncion                 shift and go to state 6
    hashMap                        shift and go to state 7
    vector                         shift and go to state 8
    for                            shift and go to state 9
    loop                           shift and go to state 10
    eMatch                         shift and go to state 11
    casting                        shift and go to state 12
    alias                          shift and go to state 13
    definicion                     shift and go to state 14
    dato                           shift and go to state 23
    creacion                       shift and go to state 25

state 3

    (3) linea -> asignacion .

    VARIABLE        reduce using rule 3 (linea -> asignacion .)
    STRUCT          reduce using rule 3 (linea -> asignacion .)
    FN              reduce using rule 3 (linea -> asignacion .)
    HASHMAP         reduce using rule 3 (linea -> asignacion .)
    VEC             reduce using rule 3 (linea -> asignacion .)
    FOR             reduce using rule 3 (linea -> asignacion .)
    LOOP            reduce using rule 3 (linea -> asignacion .)
    MATCH           reduce using rule 3 (linea -> asignacion .)
    TYPE            reduce using rule 3 (linea -> asignacion .)
    STRING          reduce using rule 3 (linea -> asignacion .)
    CHAR            reduce using rule 3 (linea -> asignacion .)
    DECIMAL         reduce using rule 3 (linea -> asignacion .)
    HEXADECIMAL     reduce using rule 3 (linea -> asignacion .)
    OCTAL           reduce using rule 3 (linea -> asignacion .)
    BINARIO         reduce using rule 3 (linea -> asignacion .)
    BOOL            reduce using rule 3 (linea -> asignacion .)
    FLOAT           reduce using rule 3 (linea -> asignacion .)
    GENERIC         reduce using rule 3 (linea -> asignacion .)
    LET             reduce using rule 3 (linea -> asignacion .)
    CONST           reduce using rule 3 (linea -> asignacion .)
    $end            reduce using rule 3 (linea -> asignacion .)
    RKEY            reduce using rule 3 (linea -> asignacion .)
    COMA            reduce using rule 3 (linea -> asignacion .)


state 4

    (4) linea -> struct .

    VARIABLE        reduce using rule 4 (linea -> struct .)
    STRUCT          reduce using rule 4 (linea -> struct .)
    FN              reduce using rule 4 (linea -> struct .)
    HASHMAP         reduce using rule 4 (linea -> struct .)
    VEC             reduce using rule 4 (linea -> struct .)
    FOR             reduce using rule 4 (linea -> struct .)
    LOOP            reduce using rule 4 (linea -> struct .)
    MATCH           reduce using rule 4 (linea -> struct .)
    TYPE            reduce using rule 4 (linea -> struct .)
    STRING          reduce using rule 4 (linea -> struct .)
    CHAR            reduce using rule 4 (linea -> struct .)
    DECIMAL         reduce using rule 4 (linea -> struct .)
    HEXADECIMAL     reduce using rule 4 (linea -> struct .)
    OCTAL           reduce using rule 4 (linea -> struct .)
    BINARIO         reduce using rule 4 (linea -> struct .)
    BOOL            reduce using rule 4 (linea -> struct .)
    FLOAT           reduce using rule 4 (linea -> struct .)
    GENERIC         reduce using rule 4 (linea -> struct .)
    LET             reduce using rule 4 (linea -> struct .)
    CONST           reduce using rule 4 (linea -> struct .)
    $end            reduce using rule 4 (linea -> struct .)
    RKEY            reduce using rule 4 (linea -> struct .)
    COMA            reduce using rule 4 (linea -> struct .)


state 5

    (5) linea -> varEnVar .

    VARIABLE        reduce using rule 5 (linea -> varEnVar .)
    STRUCT          reduce using rule 5 (linea -> varEnVar .)
    FN              reduce using rule 5 (linea -> varEnVar .)
    HASHMAP         reduce using rule 5 (linea -> varEnVar .)
    VEC             reduce using rule 5 (linea -> varEnVar .)
    FOR             reduce using rule 5 (linea -> varEnVar .)
    LOOP            reduce using rule 5 (linea -> varEnVar .)
    MATCH           reduce using rule 5 (linea -> varEnVar .)
    TYPE            reduce using rule 5 (linea -> varEnVar .)
    STRING          reduce using rule 5 (linea -> varEnVar .)
    CHAR            reduce using rule 5 (linea -> varEnVar .)
    DECIMAL         reduce using rule 5 (linea -> varEnVar .)
    HEXADECIMAL     reduce using rule 5 (linea -> varEnVar .)
    OCTAL           reduce using rule 5 (linea -> varEnVar .)
    BINARIO         reduce using rule 5 (linea -> varEnVar .)
    BOOL            reduce using rule 5 (linea -> varEnVar .)
    FLOAT           reduce using rule 5 (linea -> varEnVar .)
    GENERIC         reduce using rule 5 (linea -> varEnVar .)
    LET             reduce using rule 5 (linea -> varEnVar .)
    CONST           reduce using rule 5 (linea -> varEnVar .)
    $end            reduce using rule 5 (linea -> varEnVar .)
    RKEY            reduce using rule 5 (linea -> varEnVar .)
    COMA            reduce using rule 5 (linea -> varEnVar .)


state 6

    (6) linea -> definirFuncion .

    VARIABLE        reduce using rule 6 (linea -> definirFuncion .)
    STRUCT          reduce using rule 6 (linea -> definirFuncion .)
    FN              reduce using rule 6 (linea -> definirFuncion .)
    HASHMAP         reduce using rule 6 (linea -> definirFuncion .)
    VEC             reduce using rule 6 (linea -> definirFuncion .)
    FOR             reduce using rule 6 (linea -> definirFuncion .)
    LOOP            reduce using rule 6 (linea -> definirFuncion .)
    MATCH           reduce using rule 6 (linea -> definirFuncion .)
    TYPE            reduce using rule 6 (linea -> definirFuncion .)
    STRING          reduce using rule 6 (linea -> definirFuncion .)
    CHAR            reduce using rule 6 (linea -> definirFuncion .)
    DECIMAL         reduce using rule 6 (linea -> definirFuncion .)
    HEXADECIMAL     reduce using rule 6 (linea -> definirFuncion .)
    OCTAL           reduce using rule 6 (linea -> definirFuncion .)
    BINARIO         reduce using rule 6 (linea -> definirFuncion .)
    BOOL            reduce using rule 6 (linea -> definirFuncion .)
    FLOAT           reduce using rule 6 (linea -> definirFuncion .)
    GENERIC         reduce using rule 6 (linea -> definirFuncion .)
    LET             reduce using rule 6 (linea -> definirFuncion .)
    CONST           reduce using rule 6 (linea -> definirFuncion .)
    $end            reduce using rule 6 (linea -> definirFuncion .)
    RKEY            reduce using rule 6 (linea -> definirFuncion .)
    COMA            reduce using rule 6 (linea -> definirFuncion .)


state 7

    (7) linea -> hashMap .

    VARIABLE        reduce using rule 7 (linea -> hashMap .)
    STRUCT          reduce using rule 7 (linea -> hashMap .)
    FN              reduce using rule 7 (linea -> hashMap .)
    HASHMAP         reduce using rule 7 (linea -> hashMap .)
    VEC             reduce using rule 7 (linea -> hashMap .)
    FOR             reduce using rule 7 (linea -> hashMap .)
    LOOP            reduce using rule 7 (linea -> hashMap .)
    MATCH           reduce using rule 7 (linea -> hashMap .)
    TYPE            reduce using rule 7 (linea -> hashMap .)
    STRING          reduce using rule 7 (linea -> hashMap .)
    CHAR            reduce using rule 7 (linea -> hashMap .)
    DECIMAL         reduce using rule 7 (linea -> hashMap .)
    HEXADECIMAL     reduce using rule 7 (linea -> hashMap .)
    OCTAL           reduce using rule 7 (linea -> hashMap .)
    BINARIO         reduce using rule 7 (linea -> hashMap .)
    BOOL            reduce using rule 7 (linea -> hashMap .)
    FLOAT           reduce using rule 7 (linea -> hashMap .)
    GENERIC         reduce using rule 7 (linea -> hashMap .)
    LET             reduce using rule 7 (linea -> hashMap .)
    CONST           reduce using rule 7 (linea -> hashMap .)
    $end            reduce using rule 7 (linea -> hashMap .)
    RKEY            reduce using rule 7 (linea -> hashMap .)
    COMA            reduce using rule 7 (linea -> hashMap .)


state 8

    (8) linea -> vector .

    VARIABLE        reduce using rule 8 (linea -> vector .)
    STRUCT          reduce using rule 8 (linea -> vector .)
    FN              reduce using rule 8 (linea -> vector .)
    HASHMAP         reduce using rule 8 (linea -> vector .)
    VEC             reduce using rule 8 (linea -> vector .)
    FOR             reduce using rule 8 (linea -> vector .)
    LOOP            reduce using rule 8 (linea -> vector .)
    MATCH           reduce using rule 8 (linea -> vector .)
    TYPE            reduce using rule 8 (linea -> vector .)
    STRING          reduce using rule 8 (linea -> vector .)
    CHAR            reduce using rule 8 (linea -> vector .)
    DECIMAL         reduce using rule 8 (linea -> vector .)
    HEXADECIMAL     reduce using rule 8 (linea -> vector .)
    OCTAL           reduce using rule 8 (linea -> vector .)
    BINARIO         reduce using rule 8 (linea -> vector .)
    BOOL            reduce using rule 8 (linea -> vector .)
    FLOAT           reduce using rule 8 (linea -> vector .)
    GENERIC         reduce using rule 8 (linea -> vector .)
    LET             reduce using rule 8 (linea -> vector .)
    CONST           reduce using rule 8 (linea -> vector .)
    $end            reduce using rule 8 (linea -> vector .)
    RKEY            reduce using rule 8 (linea -> vector .)
    COMA            reduce using rule 8 (linea -> vector .)


state 9

    (9) linea -> for .

    VARIABLE        reduce using rule 9 (linea -> for .)
    STRUCT          reduce using rule 9 (linea -> for .)
    FN              reduce using rule 9 (linea -> for .)
    HASHMAP         reduce using rule 9 (linea -> for .)
    VEC             reduce using rule 9 (linea -> for .)
    FOR             reduce using rule 9 (linea -> for .)
    LOOP            reduce using rule 9 (linea -> for .)
    MATCH           reduce using rule 9 (linea -> for .)
    TYPE            reduce using rule 9 (linea -> for .)
    STRING          reduce using rule 9 (linea -> for .)
    CHAR            reduce using rule 9 (linea -> for .)
    DECIMAL         reduce using rule 9 (linea -> for .)
    HEXADECIMAL     reduce using rule 9 (linea -> for .)
    OCTAL           reduce using rule 9 (linea -> for .)
    BINARIO         reduce using rule 9 (linea -> for .)
    BOOL            reduce using rule 9 (linea -> for .)
    FLOAT           reduce using rule 9 (linea -> for .)
    GENERIC         reduce using rule 9 (linea -> for .)
    LET             reduce using rule 9 (linea -> for .)
    CONST           reduce using rule 9 (linea -> for .)
    $end            reduce using rule 9 (linea -> for .)
    RKEY            reduce using rule 9 (linea -> for .)
    COMA            reduce using rule 9 (linea -> for .)


state 10

    (10) linea -> loop .

    VARIABLE        reduce using rule 10 (linea -> loop .)
    STRUCT          reduce using rule 10 (linea -> loop .)
    FN              reduce using rule 10 (linea -> loop .)
    HASHMAP         reduce using rule 10 (linea -> loop .)
    VEC             reduce using rule 10 (linea -> loop .)
    FOR             reduce using rule 10 (linea -> loop .)
    LOOP            reduce using rule 10 (linea -> loop .)
    MATCH           reduce using rule 10 (linea -> loop .)
    TYPE            reduce using rule 10 (linea -> loop .)
    STRING          reduce using rule 10 (linea -> loop .)
    CHAR            reduce using rule 10 (linea -> loop .)
    DECIMAL         reduce using rule 10 (linea -> loop .)
    HEXADECIMAL     reduce using rule 10 (linea -> loop .)
    OCTAL           reduce using rule 10 (linea -> loop .)
    BINARIO         reduce using rule 10 (linea -> loop .)
    BOOL            reduce using rule 10 (linea -> loop .)
    FLOAT           reduce using rule 10 (linea -> loop .)
    GENERIC         reduce using rule 10 (linea -> loop .)
    LET             reduce using rule 10 (linea -> loop .)
    CONST           reduce using rule 10 (linea -> loop .)
    $end            reduce using rule 10 (linea -> loop .)
    RKEY            reduce using rule 10 (linea -> loop .)
    COMA            reduce using rule 10 (linea -> loop .)


state 11

    (11) linea -> eMatch .

    VARIABLE        reduce using rule 11 (linea -> eMatch .)
    STRUCT          reduce using rule 11 (linea -> eMatch .)
    FN              reduce using rule 11 (linea -> eMatch .)
    HASHMAP         reduce using rule 11 (linea -> eMatch .)
    VEC             reduce using rule 11 (linea -> eMatch .)
    FOR             reduce using rule 11 (linea -> eMatch .)
    LOOP            reduce using rule 11 (linea -> eMatch .)
    MATCH           reduce using rule 11 (linea -> eMatch .)
    TYPE            reduce using rule 11 (linea -> eMatch .)
    STRING          reduce using rule 11 (linea -> eMatch .)
    CHAR            reduce using rule 11 (linea -> eMatch .)
    DECIMAL         reduce using rule 11 (linea -> eMatch .)
    HEXADECIMAL     reduce using rule 11 (linea -> eMatch .)
    OCTAL           reduce using rule 11 (linea -> eMatch .)
    BINARIO         reduce using rule 11 (linea -> eMatch .)
    BOOL            reduce using rule 11 (linea -> eMatch .)
    FLOAT           reduce using rule 11 (linea -> eMatch .)
    GENERIC         reduce using rule 11 (linea -> eMatch .)
    LET             reduce using rule 11 (linea -> eMatch .)
    CONST           reduce using rule 11 (linea -> eMatch .)
    $end            reduce using rule 11 (linea -> eMatch .)
    RKEY            reduce using rule 11 (linea -> eMatch .)
    COMA            reduce using rule 11 (linea -> eMatch .)


state 12

    (12) linea -> casting .

    VARIABLE        reduce using rule 12 (linea -> casting .)
    STRUCT          reduce using rule 12 (linea -> casting .)
    FN              reduce using rule 12 (linea -> casting .)
    HASHMAP         reduce using rule 12 (linea -> casting .)
    VEC             reduce using rule 12 (linea -> casting .)
    FOR             reduce using rule 12 (linea -> casting .)
    LOOP            reduce using rule 12 (linea -> casting .)
    MATCH           reduce using rule 12 (linea -> casting .)
    TYPE            reduce using rule 12 (linea -> casting .)
    STRING          reduce using rule 12 (linea -> casting .)
    CHAR            reduce using rule 12 (linea -> casting .)
    DECIMAL         reduce using rule 12 (linea -> casting .)
    HEXADECIMAL     reduce using rule 12 (linea -> casting .)
    OCTAL           reduce using rule 12 (linea -> casting .)
    BINARIO         reduce using rule 12 (linea -> casting .)
    BOOL            reduce using rule 12 (linea -> casting .)
    FLOAT           reduce using rule 12 (linea -> casting .)
    GENERIC         reduce using rule 12 (linea -> casting .)
    LET             reduce using rule 12 (linea -> casting .)
    CONST           reduce using rule 12 (linea -> casting .)
    $end            reduce using rule 12 (linea -> casting .)
    RKEY            reduce using rule 12 (linea -> casting .)
    COMA            reduce using rule 12 (linea -> casting .)


state 13

    (13) linea -> alias .

    VARIABLE        reduce using rule 13 (linea -> alias .)
    STRUCT          reduce using rule 13 (linea -> alias .)
    FN              reduce using rule 13 (linea -> alias .)
    HASHMAP         reduce using rule 13 (linea -> alias .)
    VEC             reduce using rule 13 (linea -> alias .)
    FOR             reduce using rule 13 (linea -> alias .)
    LOOP            reduce using rule 13 (linea -> alias .)
    MATCH           reduce using rule 13 (linea -> alias .)
    TYPE            reduce using rule 13 (linea -> alias .)
    STRING          reduce using rule 13 (linea -> alias .)
    CHAR            reduce using rule 13 (linea -> alias .)
    DECIMAL         reduce using rule 13 (linea -> alias .)
    HEXADECIMAL     reduce using rule 13 (linea -> alias .)
    OCTAL           reduce using rule 13 (linea -> alias .)
    BINARIO         reduce using rule 13 (linea -> alias .)
    BOOL            reduce using rule 13 (linea -> alias .)
    FLOAT           reduce using rule 13 (linea -> alias .)
    GENERIC         reduce using rule 13 (linea -> alias .)
    LET             reduce using rule 13 (linea -> alias .)
    CONST           reduce using rule 13 (linea -> alias .)
    $end            reduce using rule 13 (linea -> alias .)
    RKEY            reduce using rule 13 (linea -> alias .)
    COMA            reduce using rule 13 (linea -> alias .)


state 14

    (14) asignacion -> definicion . ASSIGN valorAsignado COMMA_DOT
    (17) asignacion -> definicion .

    ASSIGN          shift and go to state 38
    VARIABLE        reduce using rule 17 (asignacion -> definicion .)
    STRUCT          reduce using rule 17 (asignacion -> definicion .)
    FN              reduce using rule 17 (asignacion -> definicion .)
    HASHMAP         reduce using rule 17 (asignacion -> definicion .)
    VEC             reduce using rule 17 (asignacion -> definicion .)
    FOR             reduce using rule 17 (asignacion -> definicion .)
    LOOP            reduce using rule 17 (asignacion -> definicion .)
    MATCH           reduce using rule 17 (asignacion -> definicion .)
    TYPE            reduce using rule 17 (asignacion -> definicion .)
    STRING          reduce using rule 17 (asignacion -> definicion .)
    CHAR            reduce using rule 17 (asignacion -> definicion .)
    DECIMAL         reduce using rule 17 (asignacion -> definicion .)
    HEXADECIMAL     reduce using rule 17 (asignacion -> definicion .)
    OCTAL           reduce using rule 17 (asignacion -> definicion .)
    BINARIO         reduce using rule 17 (asignacion -> definicion .)
    BOOL            reduce using rule 17 (asignacion -> definicion .)
    FLOAT           reduce using rule 17 (asignacion -> definicion .)
    GENERIC         reduce using rule 17 (asignacion -> definicion .)
    LET             reduce using rule 17 (asignacion -> definicion .)
    CONST           reduce using rule 17 (asignacion -> definicion .)
    $end            reduce using rule 17 (asignacion -> definicion .)
    RKEY            reduce using rule 17 (asignacion -> definicion .)
    COMA            reduce using rule 17 (asignacion -> definicion .)


state 15

    (15) asignacion -> VARIABLE . ASSIGN valorAsignado COMMA_DOT
    (16) asignacion -> VARIABLE . ASSIGN varEnVar COMMA_DOT
    (18) varEnVar -> VARIABLE . POINT VARIABLE
    (104) casting -> VARIABLE . AS dato
    (105) casting -> VARIABLE . AS casting

    ASSIGN          shift and go to state 39
    POINT           shift and go to state 40
    AS              shift and go to state 41


state 16

    (85) struct -> STRUCT . VARIABLE LKEY atributos RKEY

    VARIABLE        shift and go to state 42


state 17

    (70) definirFuncion -> FN . VARIABLE trait parametros LKEY cuerpoFuncion RKEY
    (71) definirFuncion -> FN . VARIABLE parametros LKEY cuerpoFuncion RKEY

    VARIABLE        shift and go to state 43


state 18

    (93) hashMap -> HASHMAP . TWO_POINTS TWO_POINTS NEW LPAREN RPAREN

    TWO_POINTS      shift and go to state 44


state 19

    (88) vector -> VEC . NOT LBRACKET datos RBRACKET
    (89) vector -> VEC . TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (90) vector -> VEC . TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN
    (43) dato -> VEC .

    NOT             shift and go to state 45
    TWO_POINTS      shift and go to state 46
    AS              reduce using rule 43 (dato -> VEC .)


state 20

    (94) for -> FOR . VARIABLE IN rango LKEY cuerpoFuncion RKEY

    VARIABLE        shift and go to state 47


state 21

    (100) loop -> LOOP . LKEY cuerpoFuncion RKEY

    LKEY            shift and go to state 48


state 22

    (97) eMatch -> MATCH . VARIABLE LKEY content RKEY

    VARIABLE        shift and go to state 49


state 23

    (102) casting -> dato . AS dato
    (103) casting -> dato . AS casting

    AS              shift and go to state 50


state 24

    (106) alias -> TYPE . VARIABLE ASSIGN dato COMMA_DOT

    VARIABLE        shift and go to state 51


state 25

    (19) definicion -> creacion .
    (20) definicion -> creacion . COMMA_DOT
    (21) definicion -> creacion . tipoDato
    (31) tipoDato -> . TWO_POINTS dato
    (32) tipoDato -> . TWO_POINTS tipoDato
    (33) tipoDato -> . dato LESS_THAN dato MORE_THAN
    (34) tipoDato -> . TWO_POINTS apuntador
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC

  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for HEXADECIMAL resolved as shift
  ! shift/reduce conflict for OCTAL resolved as shift
  ! shift/reduce conflict for BINARIO resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VEC resolved as shift
  ! shift/reduce conflict for GENERIC resolved as shift
    ASSIGN          reduce using rule 19 (definicion -> creacion .)
    VARIABLE        reduce using rule 19 (definicion -> creacion .)
    STRUCT          reduce using rule 19 (definicion -> creacion .)
    FN              reduce using rule 19 (definicion -> creacion .)
    HASHMAP         reduce using rule 19 (definicion -> creacion .)
    FOR             reduce using rule 19 (definicion -> creacion .)
    LOOP            reduce using rule 19 (definicion -> creacion .)
    MATCH           reduce using rule 19 (definicion -> creacion .)
    TYPE            reduce using rule 19 (definicion -> creacion .)
    LET             reduce using rule 19 (definicion -> creacion .)
    CONST           reduce using rule 19 (definicion -> creacion .)
    $end            reduce using rule 19 (definicion -> creacion .)
    RKEY            reduce using rule 19 (definicion -> creacion .)
    COMA            reduce using rule 19 (definicion -> creacion .)
    COMMA_DOT       shift and go to state 52
    TWO_POINTS      shift and go to state 54
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

  ! VEC             [ reduce using rule 19 (definicion -> creacion .) ]
  ! STRING          [ reduce using rule 19 (definicion -> creacion .) ]
  ! CHAR            [ reduce using rule 19 (definicion -> creacion .) ]
  ! DECIMAL         [ reduce using rule 19 (definicion -> creacion .) ]
  ! HEXADECIMAL     [ reduce using rule 19 (definicion -> creacion .) ]
  ! OCTAL           [ reduce using rule 19 (definicion -> creacion .) ]
  ! BINARIO         [ reduce using rule 19 (definicion -> creacion .) ]
  ! BOOL            [ reduce using rule 19 (definicion -> creacion .) ]
  ! FLOAT           [ reduce using rule 19 (definicion -> creacion .) ]
  ! GENERIC         [ reduce using rule 19 (definicion -> creacion .) ]

    tipoDato                       shift and go to state 53
    dato                           shift and go to state 55

state 26

    (35) dato -> STRING .

    AS              reduce using rule 35 (dato -> STRING .)
    LESS_THAN       reduce using rule 35 (dato -> STRING .)
    COMMA_DOT       reduce using rule 35 (dato -> STRING .)
    VARIABLE        reduce using rule 35 (dato -> STRING .)
    STRUCT          reduce using rule 35 (dato -> STRING .)
    FN              reduce using rule 35 (dato -> STRING .)
    HASHMAP         reduce using rule 35 (dato -> STRING .)
    VEC             reduce using rule 35 (dato -> STRING .)
    FOR             reduce using rule 35 (dato -> STRING .)
    LOOP            reduce using rule 35 (dato -> STRING .)
    MATCH           reduce using rule 35 (dato -> STRING .)
    TYPE            reduce using rule 35 (dato -> STRING .)
    STRING          reduce using rule 35 (dato -> STRING .)
    CHAR            reduce using rule 35 (dato -> STRING .)
    DECIMAL         reduce using rule 35 (dato -> STRING .)
    HEXADECIMAL     reduce using rule 35 (dato -> STRING .)
    OCTAL           reduce using rule 35 (dato -> STRING .)
    BINARIO         reduce using rule 35 (dato -> STRING .)
    BOOL            reduce using rule 35 (dato -> STRING .)
    FLOAT           reduce using rule 35 (dato -> STRING .)
    GENERIC         reduce using rule 35 (dato -> STRING .)
    LET             reduce using rule 35 (dato -> STRING .)
    CONST           reduce using rule 35 (dato -> STRING .)
    $end            reduce using rule 35 (dato -> STRING .)
    RKEY            reduce using rule 35 (dato -> STRING .)
    COMA            reduce using rule 35 (dato -> STRING .)
    ASSIGN          reduce using rule 35 (dato -> STRING .)
    LKEY            reduce using rule 35 (dato -> STRING .)
    RPAREN          reduce using rule 35 (dato -> STRING .)
    RBRACKET        reduce using rule 35 (dato -> STRING .)
    MOREEQUAL_THAN  reduce using rule 35 (dato -> STRING .)
    MORE_THAN       reduce using rule 35 (dato -> STRING .)


state 27

    (36) dato -> CHAR .

    AS              reduce using rule 36 (dato -> CHAR .)
    LESS_THAN       reduce using rule 36 (dato -> CHAR .)
    COMMA_DOT       reduce using rule 36 (dato -> CHAR .)
    VARIABLE        reduce using rule 36 (dato -> CHAR .)
    STRUCT          reduce using rule 36 (dato -> CHAR .)
    FN              reduce using rule 36 (dato -> CHAR .)
    HASHMAP         reduce using rule 36 (dato -> CHAR .)
    VEC             reduce using rule 36 (dato -> CHAR .)
    FOR             reduce using rule 36 (dato -> CHAR .)
    LOOP            reduce using rule 36 (dato -> CHAR .)
    MATCH           reduce using rule 36 (dato -> CHAR .)
    TYPE            reduce using rule 36 (dato -> CHAR .)
    STRING          reduce using rule 36 (dato -> CHAR .)
    CHAR            reduce using rule 36 (dato -> CHAR .)
    DECIMAL         reduce using rule 36 (dato -> CHAR .)
    HEXADECIMAL     reduce using rule 36 (dato -> CHAR .)
    OCTAL           reduce using rule 36 (dato -> CHAR .)
    BINARIO         reduce using rule 36 (dato -> CHAR .)
    BOOL            reduce using rule 36 (dato -> CHAR .)
    FLOAT           reduce using rule 36 (dato -> CHAR .)
    GENERIC         reduce using rule 36 (dato -> CHAR .)
    LET             reduce using rule 36 (dato -> CHAR .)
    CONST           reduce using rule 36 (dato -> CHAR .)
    $end            reduce using rule 36 (dato -> CHAR .)
    RKEY            reduce using rule 36 (dato -> CHAR .)
    COMA            reduce using rule 36 (dato -> CHAR .)
    ASSIGN          reduce using rule 36 (dato -> CHAR .)
    LKEY            reduce using rule 36 (dato -> CHAR .)
    RPAREN          reduce using rule 36 (dato -> CHAR .)
    RBRACKET        reduce using rule 36 (dato -> CHAR .)
    MOREEQUAL_THAN  reduce using rule 36 (dato -> CHAR .)
    MORE_THAN       reduce using rule 36 (dato -> CHAR .)


state 28

    (37) dato -> DECIMAL .

    AS              reduce using rule 37 (dato -> DECIMAL .)
    LESS_THAN       reduce using rule 37 (dato -> DECIMAL .)
    COMMA_DOT       reduce using rule 37 (dato -> DECIMAL .)
    VARIABLE        reduce using rule 37 (dato -> DECIMAL .)
    STRUCT          reduce using rule 37 (dato -> DECIMAL .)
    FN              reduce using rule 37 (dato -> DECIMAL .)
    HASHMAP         reduce using rule 37 (dato -> DECIMAL .)
    VEC             reduce using rule 37 (dato -> DECIMAL .)
    FOR             reduce using rule 37 (dato -> DECIMAL .)
    LOOP            reduce using rule 37 (dato -> DECIMAL .)
    MATCH           reduce using rule 37 (dato -> DECIMAL .)
    TYPE            reduce using rule 37 (dato -> DECIMAL .)
    STRING          reduce using rule 37 (dato -> DECIMAL .)
    CHAR            reduce using rule 37 (dato -> DECIMAL .)
    DECIMAL         reduce using rule 37 (dato -> DECIMAL .)
    HEXADECIMAL     reduce using rule 37 (dato -> DECIMAL .)
    OCTAL           reduce using rule 37 (dato -> DECIMAL .)
    BINARIO         reduce using rule 37 (dato -> DECIMAL .)
    BOOL            reduce using rule 37 (dato -> DECIMAL .)
    FLOAT           reduce using rule 37 (dato -> DECIMAL .)
    GENERIC         reduce using rule 37 (dato -> DECIMAL .)
    LET             reduce using rule 37 (dato -> DECIMAL .)
    CONST           reduce using rule 37 (dato -> DECIMAL .)
    $end            reduce using rule 37 (dato -> DECIMAL .)
    RKEY            reduce using rule 37 (dato -> DECIMAL .)
    COMA            reduce using rule 37 (dato -> DECIMAL .)
    ASSIGN          reduce using rule 37 (dato -> DECIMAL .)
    LKEY            reduce using rule 37 (dato -> DECIMAL .)
    RPAREN          reduce using rule 37 (dato -> DECIMAL .)
    RBRACKET        reduce using rule 37 (dato -> DECIMAL .)
    MOREEQUAL_THAN  reduce using rule 37 (dato -> DECIMAL .)
    MORE_THAN       reduce using rule 37 (dato -> DECIMAL .)


state 29

    (38) dato -> HEXADECIMAL .

    AS              reduce using rule 38 (dato -> HEXADECIMAL .)
    LESS_THAN       reduce using rule 38 (dato -> HEXADECIMAL .)
    COMMA_DOT       reduce using rule 38 (dato -> HEXADECIMAL .)
    VARIABLE        reduce using rule 38 (dato -> HEXADECIMAL .)
    STRUCT          reduce using rule 38 (dato -> HEXADECIMAL .)
    FN              reduce using rule 38 (dato -> HEXADECIMAL .)
    HASHMAP         reduce using rule 38 (dato -> HEXADECIMAL .)
    VEC             reduce using rule 38 (dato -> HEXADECIMAL .)
    FOR             reduce using rule 38 (dato -> HEXADECIMAL .)
    LOOP            reduce using rule 38 (dato -> HEXADECIMAL .)
    MATCH           reduce using rule 38 (dato -> HEXADECIMAL .)
    TYPE            reduce using rule 38 (dato -> HEXADECIMAL .)
    STRING          reduce using rule 38 (dato -> HEXADECIMAL .)
    CHAR            reduce using rule 38 (dato -> HEXADECIMAL .)
    DECIMAL         reduce using rule 38 (dato -> HEXADECIMAL .)
    HEXADECIMAL     reduce using rule 38 (dato -> HEXADECIMAL .)
    OCTAL           reduce using rule 38 (dato -> HEXADECIMAL .)
    BINARIO         reduce using rule 38 (dato -> HEXADECIMAL .)
    BOOL            reduce using rule 38 (dato -> HEXADECIMAL .)
    FLOAT           reduce using rule 38 (dato -> HEXADECIMAL .)
    GENERIC         reduce using rule 38 (dato -> HEXADECIMAL .)
    LET             reduce using rule 38 (dato -> HEXADECIMAL .)
    CONST           reduce using rule 38 (dato -> HEXADECIMAL .)
    $end            reduce using rule 38 (dato -> HEXADECIMAL .)
    RKEY            reduce using rule 38 (dato -> HEXADECIMAL .)
    COMA            reduce using rule 38 (dato -> HEXADECIMAL .)
    ASSIGN          reduce using rule 38 (dato -> HEXADECIMAL .)
    LKEY            reduce using rule 38 (dato -> HEXADECIMAL .)
    RPAREN          reduce using rule 38 (dato -> HEXADECIMAL .)
    RBRACKET        reduce using rule 38 (dato -> HEXADECIMAL .)
    MOREEQUAL_THAN  reduce using rule 38 (dato -> HEXADECIMAL .)
    MORE_THAN       reduce using rule 38 (dato -> HEXADECIMAL .)


state 30

    (39) dato -> OCTAL .

    AS              reduce using rule 39 (dato -> OCTAL .)
    LESS_THAN       reduce using rule 39 (dato -> OCTAL .)
    COMMA_DOT       reduce using rule 39 (dato -> OCTAL .)
    VARIABLE        reduce using rule 39 (dato -> OCTAL .)
    STRUCT          reduce using rule 39 (dato -> OCTAL .)
    FN              reduce using rule 39 (dato -> OCTAL .)
    HASHMAP         reduce using rule 39 (dato -> OCTAL .)
    VEC             reduce using rule 39 (dato -> OCTAL .)
    FOR             reduce using rule 39 (dato -> OCTAL .)
    LOOP            reduce using rule 39 (dato -> OCTAL .)
    MATCH           reduce using rule 39 (dato -> OCTAL .)
    TYPE            reduce using rule 39 (dato -> OCTAL .)
    STRING          reduce using rule 39 (dato -> OCTAL .)
    CHAR            reduce using rule 39 (dato -> OCTAL .)
    DECIMAL         reduce using rule 39 (dato -> OCTAL .)
    HEXADECIMAL     reduce using rule 39 (dato -> OCTAL .)
    OCTAL           reduce using rule 39 (dato -> OCTAL .)
    BINARIO         reduce using rule 39 (dato -> OCTAL .)
    BOOL            reduce using rule 39 (dato -> OCTAL .)
    FLOAT           reduce using rule 39 (dato -> OCTAL .)
    GENERIC         reduce using rule 39 (dato -> OCTAL .)
    LET             reduce using rule 39 (dato -> OCTAL .)
    CONST           reduce using rule 39 (dato -> OCTAL .)
    $end            reduce using rule 39 (dato -> OCTAL .)
    RKEY            reduce using rule 39 (dato -> OCTAL .)
    COMA            reduce using rule 39 (dato -> OCTAL .)
    ASSIGN          reduce using rule 39 (dato -> OCTAL .)
    LKEY            reduce using rule 39 (dato -> OCTAL .)
    RPAREN          reduce using rule 39 (dato -> OCTAL .)
    RBRACKET        reduce using rule 39 (dato -> OCTAL .)
    MOREEQUAL_THAN  reduce using rule 39 (dato -> OCTAL .)
    MORE_THAN       reduce using rule 39 (dato -> OCTAL .)


state 31

    (40) dato -> BINARIO .

    AS              reduce using rule 40 (dato -> BINARIO .)
    LESS_THAN       reduce using rule 40 (dato -> BINARIO .)
    COMMA_DOT       reduce using rule 40 (dato -> BINARIO .)
    VARIABLE        reduce using rule 40 (dato -> BINARIO .)
    STRUCT          reduce using rule 40 (dato -> BINARIO .)
    FN              reduce using rule 40 (dato -> BINARIO .)
    HASHMAP         reduce using rule 40 (dato -> BINARIO .)
    VEC             reduce using rule 40 (dato -> BINARIO .)
    FOR             reduce using rule 40 (dato -> BINARIO .)
    LOOP            reduce using rule 40 (dato -> BINARIO .)
    MATCH           reduce using rule 40 (dato -> BINARIO .)
    TYPE            reduce using rule 40 (dato -> BINARIO .)
    STRING          reduce using rule 40 (dato -> BINARIO .)
    CHAR            reduce using rule 40 (dato -> BINARIO .)
    DECIMAL         reduce using rule 40 (dato -> BINARIO .)
    HEXADECIMAL     reduce using rule 40 (dato -> BINARIO .)
    OCTAL           reduce using rule 40 (dato -> BINARIO .)
    BINARIO         reduce using rule 40 (dato -> BINARIO .)
    BOOL            reduce using rule 40 (dato -> BINARIO .)
    FLOAT           reduce using rule 40 (dato -> BINARIO .)
    GENERIC         reduce using rule 40 (dato -> BINARIO .)
    LET             reduce using rule 40 (dato -> BINARIO .)
    CONST           reduce using rule 40 (dato -> BINARIO .)
    $end            reduce using rule 40 (dato -> BINARIO .)
    RKEY            reduce using rule 40 (dato -> BINARIO .)
    COMA            reduce using rule 40 (dato -> BINARIO .)
    ASSIGN          reduce using rule 40 (dato -> BINARIO .)
    LKEY            reduce using rule 40 (dato -> BINARIO .)
    RPAREN          reduce using rule 40 (dato -> BINARIO .)
    RBRACKET        reduce using rule 40 (dato -> BINARIO .)
    MOREEQUAL_THAN  reduce using rule 40 (dato -> BINARIO .)
    MORE_THAN       reduce using rule 40 (dato -> BINARIO .)


state 32

    (41) dato -> BOOL .

    AS              reduce using rule 41 (dato -> BOOL .)
    LESS_THAN       reduce using rule 41 (dato -> BOOL .)
    COMMA_DOT       reduce using rule 41 (dato -> BOOL .)
    VARIABLE        reduce using rule 41 (dato -> BOOL .)
    STRUCT          reduce using rule 41 (dato -> BOOL .)
    FN              reduce using rule 41 (dato -> BOOL .)
    HASHMAP         reduce using rule 41 (dato -> BOOL .)
    VEC             reduce using rule 41 (dato -> BOOL .)
    FOR             reduce using rule 41 (dato -> BOOL .)
    LOOP            reduce using rule 41 (dato -> BOOL .)
    MATCH           reduce using rule 41 (dato -> BOOL .)
    TYPE            reduce using rule 41 (dato -> BOOL .)
    STRING          reduce using rule 41 (dato -> BOOL .)
    CHAR            reduce using rule 41 (dato -> BOOL .)
    DECIMAL         reduce using rule 41 (dato -> BOOL .)
    HEXADECIMAL     reduce using rule 41 (dato -> BOOL .)
    OCTAL           reduce using rule 41 (dato -> BOOL .)
    BINARIO         reduce using rule 41 (dato -> BOOL .)
    BOOL            reduce using rule 41 (dato -> BOOL .)
    FLOAT           reduce using rule 41 (dato -> BOOL .)
    GENERIC         reduce using rule 41 (dato -> BOOL .)
    LET             reduce using rule 41 (dato -> BOOL .)
    CONST           reduce using rule 41 (dato -> BOOL .)
    $end            reduce using rule 41 (dato -> BOOL .)
    RKEY            reduce using rule 41 (dato -> BOOL .)
    COMA            reduce using rule 41 (dato -> BOOL .)
    ASSIGN          reduce using rule 41 (dato -> BOOL .)
    LKEY            reduce using rule 41 (dato -> BOOL .)
    RPAREN          reduce using rule 41 (dato -> BOOL .)
    RBRACKET        reduce using rule 41 (dato -> BOOL .)
    MOREEQUAL_THAN  reduce using rule 41 (dato -> BOOL .)
    MORE_THAN       reduce using rule 41 (dato -> BOOL .)


state 33

    (42) dato -> FLOAT .

    AS              reduce using rule 42 (dato -> FLOAT .)
    LESS_THAN       reduce using rule 42 (dato -> FLOAT .)
    COMMA_DOT       reduce using rule 42 (dato -> FLOAT .)
    VARIABLE        reduce using rule 42 (dato -> FLOAT .)
    STRUCT          reduce using rule 42 (dato -> FLOAT .)
    FN              reduce using rule 42 (dato -> FLOAT .)
    HASHMAP         reduce using rule 42 (dato -> FLOAT .)
    VEC             reduce using rule 42 (dato -> FLOAT .)
    FOR             reduce using rule 42 (dato -> FLOAT .)
    LOOP            reduce using rule 42 (dato -> FLOAT .)
    MATCH           reduce using rule 42 (dato -> FLOAT .)
    TYPE            reduce using rule 42 (dato -> FLOAT .)
    STRING          reduce using rule 42 (dato -> FLOAT .)
    CHAR            reduce using rule 42 (dato -> FLOAT .)
    DECIMAL         reduce using rule 42 (dato -> FLOAT .)
    HEXADECIMAL     reduce using rule 42 (dato -> FLOAT .)
    OCTAL           reduce using rule 42 (dato -> FLOAT .)
    BINARIO         reduce using rule 42 (dato -> FLOAT .)
    BOOL            reduce using rule 42 (dato -> FLOAT .)
    FLOAT           reduce using rule 42 (dato -> FLOAT .)
    GENERIC         reduce using rule 42 (dato -> FLOAT .)
    LET             reduce using rule 42 (dato -> FLOAT .)
    CONST           reduce using rule 42 (dato -> FLOAT .)
    $end            reduce using rule 42 (dato -> FLOAT .)
    RKEY            reduce using rule 42 (dato -> FLOAT .)
    COMA            reduce using rule 42 (dato -> FLOAT .)
    ASSIGN          reduce using rule 42 (dato -> FLOAT .)
    LKEY            reduce using rule 42 (dato -> FLOAT .)
    RPAREN          reduce using rule 42 (dato -> FLOAT .)
    RBRACKET        reduce using rule 42 (dato -> FLOAT .)
    MOREEQUAL_THAN  reduce using rule 42 (dato -> FLOAT .)
    MORE_THAN       reduce using rule 42 (dato -> FLOAT .)


state 34

    (44) dato -> GENERIC .

    AS              reduce using rule 44 (dato -> GENERIC .)
    LESS_THAN       reduce using rule 44 (dato -> GENERIC .)
    COMMA_DOT       reduce using rule 44 (dato -> GENERIC .)
    VARIABLE        reduce using rule 44 (dato -> GENERIC .)
    STRUCT          reduce using rule 44 (dato -> GENERIC .)
    FN              reduce using rule 44 (dato -> GENERIC .)
    HASHMAP         reduce using rule 44 (dato -> GENERIC .)
    VEC             reduce using rule 44 (dato -> GENERIC .)
    FOR             reduce using rule 44 (dato -> GENERIC .)
    LOOP            reduce using rule 44 (dato -> GENERIC .)
    MATCH           reduce using rule 44 (dato -> GENERIC .)
    TYPE            reduce using rule 44 (dato -> GENERIC .)
    STRING          reduce using rule 44 (dato -> GENERIC .)
    CHAR            reduce using rule 44 (dato -> GENERIC .)
    DECIMAL         reduce using rule 44 (dato -> GENERIC .)
    HEXADECIMAL     reduce using rule 44 (dato -> GENERIC .)
    OCTAL           reduce using rule 44 (dato -> GENERIC .)
    BINARIO         reduce using rule 44 (dato -> GENERIC .)
    BOOL            reduce using rule 44 (dato -> GENERIC .)
    FLOAT           reduce using rule 44 (dato -> GENERIC .)
    GENERIC         reduce using rule 44 (dato -> GENERIC .)
    LET             reduce using rule 44 (dato -> GENERIC .)
    CONST           reduce using rule 44 (dato -> GENERIC .)
    $end            reduce using rule 44 (dato -> GENERIC .)
    RKEY            reduce using rule 44 (dato -> GENERIC .)
    COMA            reduce using rule 44 (dato -> GENERIC .)
    ASSIGN          reduce using rule 44 (dato -> GENERIC .)
    LKEY            reduce using rule 44 (dato -> GENERIC .)
    RPAREN          reduce using rule 44 (dato -> GENERIC .)
    RBRACKET        reduce using rule 44 (dato -> GENERIC .)
    MOREEQUAL_THAN  reduce using rule 44 (dato -> GENERIC .)
    MORE_THAN       reduce using rule 44 (dato -> GENERIC .)


state 35

    (22) creacion -> LET . MUT variables
    (23) creacion -> LET . variables
    (25) creacion -> LET . MUT VARIABLE
    (26) creacion -> LET . VARIABLE
    (28) variables -> . LPAREN conjuntoVariables RPAREN

    MUT             shift and go to state 57
    VARIABLE        shift and go to state 59
    LPAREN          shift and go to state 60

    variables                      shift and go to state 58

state 36

    (24) creacion -> CONST . variables
    (27) creacion -> CONST . VARIABLE
    (28) variables -> . LPAREN conjuntoVariables RPAREN

    VARIABLE        shift and go to state 62
    LPAREN          shift and go to state 60

    variables                      shift and go to state 61

state 37

    (2) cuerpo -> linea cuerpo .

    $end            reduce using rule 2 (cuerpo -> linea cuerpo .)
    RKEY            reduce using rule 2 (cuerpo -> linea cuerpo .)
    COMA            reduce using rule 2 (cuerpo -> linea cuerpo .)


state 38

    (14) asignacion -> definicion ASSIGN . valorAsignado COMMA_DOT
    (45) valorAsignado -> . dato
    (46) valorAsignado -> . llamadaAfuncion
    (47) valorAsignado -> . llamadaAfuncionPorAlias
    (48) valorAsignado -> . vector
    (49) valorAsignado -> . hashMap
    (50) valorAsignado -> . LPAREN conjuntoDatos RPAREN
    (51) valorAsignado -> . VARIABLE
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (55) llamadaAfuncion -> . VARIABLE argumentos
    (56) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (57) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (58) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (59) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion
    (54) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion
    (88) vector -> . VEC NOT LBRACKET datos RBRACKET
    (89) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (90) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN
    (93) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN

    LPAREN          shift and go to state 69
    VARIABLE        shift and go to state 70
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 71
    GENERIC         shift and go to state 34
    HASHMAP         shift and go to state 18

    valorAsignado                  shift and go to state 63
    dato                           shift and go to state 64
    llamadaAfuncion                shift and go to state 65
    llamadaAfuncionPorAlias        shift and go to state 66
    vector                         shift and go to state 67
    hashMap                        shift and go to state 68

state 39

    (15) asignacion -> VARIABLE ASSIGN . valorAsignado COMMA_DOT
    (16) asignacion -> VARIABLE ASSIGN . varEnVar COMMA_DOT
    (45) valorAsignado -> . dato
    (46) valorAsignado -> . llamadaAfuncion
    (47) valorAsignado -> . llamadaAfuncionPorAlias
    (48) valorAsignado -> . vector
    (49) valorAsignado -> . hashMap
    (50) valorAsignado -> . LPAREN conjuntoDatos RPAREN
    (51) valorAsignado -> . VARIABLE
    (18) varEnVar -> . VARIABLE POINT VARIABLE
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (55) llamadaAfuncion -> . VARIABLE argumentos
    (56) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (57) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (58) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (59) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion
    (54) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion
    (88) vector -> . VEC NOT LBRACKET datos RBRACKET
    (89) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (90) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN
    (93) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN

    LPAREN          shift and go to state 69
    VARIABLE        shift and go to state 72
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 71
    GENERIC         shift and go to state 34
    HASHMAP         shift and go to state 18

    valorAsignado                  shift and go to state 73
    varEnVar                       shift and go to state 74
    dato                           shift and go to state 64
    llamadaAfuncion                shift and go to state 65
    llamadaAfuncionPorAlias        shift and go to state 66
    vector                         shift and go to state 67
    hashMap                        shift and go to state 68

state 40

    (18) varEnVar -> VARIABLE POINT . VARIABLE

    VARIABLE        shift and go to state 75


state 41

    (104) casting -> VARIABLE AS . dato
    (105) casting -> VARIABLE AS . casting
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (102) casting -> . dato AS dato
    (103) casting -> . dato AS casting
    (104) casting -> . VARIABLE AS dato
    (105) casting -> . VARIABLE AS casting

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 77
    casting                        shift and go to state 78

state 42

    (85) struct -> STRUCT VARIABLE . LKEY atributos RKEY

    LKEY            shift and go to state 79


state 43

    (70) definirFuncion -> FN VARIABLE . trait parametros LKEY cuerpoFuncion RKEY
    (71) definirFuncion -> FN VARIABLE . parametros LKEY cuerpoFuncion RKEY
    (72) trait -> . LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN
    (76) parametros -> . LPAREN RPAREN datoARetornar
    (77) parametros -> . LPAREN parametro RPAREN datoARetornar
    (78) parametros -> . LPAREN RPAREN
    (79) parametros -> . LPAREN parametro RPAREN

    LESS_THAN       shift and go to state 82
    LPAREN          shift and go to state 83

    trait                          shift and go to state 80
    parametros                     shift and go to state 81

state 44

    (93) hashMap -> HASHMAP TWO_POINTS . TWO_POINTS NEW LPAREN RPAREN

    TWO_POINTS      shift and go to state 84


state 45

    (88) vector -> VEC NOT . LBRACKET datos RBRACKET

    LBRACKET        shift and go to state 85


state 46

    (89) vector -> VEC TWO_POINTS . TWO_POINTS NEW LPAREN RPAREN
    (90) vector -> VEC TWO_POINTS . TWO_POINTS NEW LPAREN datos RPAREN

    TWO_POINTS      shift and go to state 86


state 47

    (94) for -> FOR VARIABLE . IN rango LKEY cuerpoFuncion RKEY

    IN              shift and go to state 87


state 48

    (100) loop -> LOOP LKEY . cuerpoFuncion RKEY
    (84) cuerpoFuncion -> . cuerpo
    (1) cuerpo -> . linea
    (2) cuerpo -> . linea cuerpo
    (3) linea -> . asignacion
    (4) linea -> . struct
    (5) linea -> . varEnVar
    (6) linea -> . definirFuncion
    (7) linea -> . hashMap
    (8) linea -> . vector
    (9) linea -> . for
    (10) linea -> . loop
    (11) linea -> . eMatch
    (12) linea -> . casting
    (13) linea -> . alias
    (14) asignacion -> . definicion ASSIGN valorAsignado COMMA_DOT
    (15) asignacion -> . VARIABLE ASSIGN valorAsignado COMMA_DOT
    (16) asignacion -> . VARIABLE ASSIGN varEnVar COMMA_DOT
    (17) asignacion -> . definicion
    (85) struct -> . STRUCT VARIABLE LKEY atributos RKEY
    (18) varEnVar -> . VARIABLE POINT VARIABLE
    (70) definirFuncion -> . FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY
    (71) definirFuncion -> . FN VARIABLE parametros LKEY cuerpoFuncion RKEY
    (93) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (88) vector -> . VEC NOT LBRACKET datos RBRACKET
    (89) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (90) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN
    (94) for -> . FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY
    (100) loop -> . LOOP LKEY cuerpoFuncion RKEY
    (97) eMatch -> . MATCH VARIABLE LKEY content RKEY
    (102) casting -> . dato AS dato
    (103) casting -> . dato AS casting
    (104) casting -> . VARIABLE AS dato
    (105) casting -> . VARIABLE AS casting
    (106) alias -> . TYPE VARIABLE ASSIGN dato COMMA_DOT
    (19) definicion -> . creacion
    (20) definicion -> . creacion COMMA_DOT
    (21) definicion -> . creacion tipoDato
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (22) creacion -> . LET MUT variables
    (23) creacion -> . LET variables
    (24) creacion -> . CONST variables
    (25) creacion -> . LET MUT VARIABLE
    (26) creacion -> . LET VARIABLE
    (27) creacion -> . CONST VARIABLE

    VARIABLE        shift and go to state 15
    STRUCT          shift and go to state 16
    FN              shift and go to state 17
    HASHMAP         shift and go to state 18
    VEC             shift and go to state 19
    FOR             shift and go to state 20
    LOOP            shift and go to state 21
    MATCH           shift and go to state 22
    TYPE            shift and go to state 24
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    GENERIC         shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36

    cuerpoFuncion                  shift and go to state 88
    cuerpo                         shift and go to state 89
    linea                          shift and go to state 2
    asignacion                     shift and go to state 3
    struct                         shift and go to state 4
    varEnVar                       shift and go to state 5
    definirFuncion                 shift and go to state 6
    hashMap                        shift and go to state 7
    vector                         shift and go to state 8
    for                            shift and go to state 9
    loop                           shift and go to state 10
    eMatch                         shift and go to state 11
    casting                        shift and go to state 12
    alias                          shift and go to state 13
    definicion                     shift and go to state 14
    dato                           shift and go to state 23
    creacion                       shift and go to state 25

state 49

    (97) eMatch -> MATCH VARIABLE . LKEY content RKEY

    LKEY            shift and go to state 90


state 50

    (102) casting -> dato AS . dato
    (103) casting -> dato AS . casting
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (102) casting -> . dato AS dato
    (103) casting -> . dato AS casting
    (104) casting -> . VARIABLE AS dato
    (105) casting -> . VARIABLE AS casting

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 91
    casting                        shift and go to state 92

state 51

    (106) alias -> TYPE VARIABLE . ASSIGN dato COMMA_DOT

    ASSIGN          shift and go to state 93


state 52

    (20) definicion -> creacion COMMA_DOT .

    ASSIGN          reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    VARIABLE        reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    STRUCT          reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    FN              reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    HASHMAP         reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    VEC             reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    FOR             reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    LOOP            reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    MATCH           reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    TYPE            reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    STRING          reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    CHAR            reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    DECIMAL         reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    HEXADECIMAL     reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    OCTAL           reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    BINARIO         reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    BOOL            reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    FLOAT           reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    GENERIC         reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    LET             reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    CONST           reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    $end            reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    RKEY            reduce using rule 20 (definicion -> creacion COMMA_DOT .)
    COMA            reduce using rule 20 (definicion -> creacion COMMA_DOT .)


state 53

    (21) definicion -> creacion tipoDato .

    ASSIGN          reduce using rule 21 (definicion -> creacion tipoDato .)
    VARIABLE        reduce using rule 21 (definicion -> creacion tipoDato .)
    STRUCT          reduce using rule 21 (definicion -> creacion tipoDato .)
    FN              reduce using rule 21 (definicion -> creacion tipoDato .)
    HASHMAP         reduce using rule 21 (definicion -> creacion tipoDato .)
    VEC             reduce using rule 21 (definicion -> creacion tipoDato .)
    FOR             reduce using rule 21 (definicion -> creacion tipoDato .)
    LOOP            reduce using rule 21 (definicion -> creacion tipoDato .)
    MATCH           reduce using rule 21 (definicion -> creacion tipoDato .)
    TYPE            reduce using rule 21 (definicion -> creacion tipoDato .)
    STRING          reduce using rule 21 (definicion -> creacion tipoDato .)
    CHAR            reduce using rule 21 (definicion -> creacion tipoDato .)
    DECIMAL         reduce using rule 21 (definicion -> creacion tipoDato .)
    HEXADECIMAL     reduce using rule 21 (definicion -> creacion tipoDato .)
    OCTAL           reduce using rule 21 (definicion -> creacion tipoDato .)
    BINARIO         reduce using rule 21 (definicion -> creacion tipoDato .)
    BOOL            reduce using rule 21 (definicion -> creacion tipoDato .)
    FLOAT           reduce using rule 21 (definicion -> creacion tipoDato .)
    GENERIC         reduce using rule 21 (definicion -> creacion tipoDato .)
    LET             reduce using rule 21 (definicion -> creacion tipoDato .)
    CONST           reduce using rule 21 (definicion -> creacion tipoDato .)
    $end            reduce using rule 21 (definicion -> creacion tipoDato .)
    RKEY            reduce using rule 21 (definicion -> creacion tipoDato .)
    COMA            reduce using rule 21 (definicion -> creacion tipoDato .)


state 54

    (31) tipoDato -> TWO_POINTS . dato
    (32) tipoDato -> TWO_POINTS . tipoDato
    (34) tipoDato -> TWO_POINTS . apuntador
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (31) tipoDato -> . TWO_POINTS dato
    (32) tipoDato -> . TWO_POINTS tipoDato
    (33) tipoDato -> . dato LESS_THAN dato MORE_THAN
    (34) tipoDato -> . TWO_POINTS apuntador
    (101) apuntador -> . FN parametros

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34
    TWO_POINTS      shift and go to state 54
    FN              shift and go to state 97

    dato                           shift and go to state 94
    tipoDato                       shift and go to state 95
    apuntador                      shift and go to state 96

state 55

    (33) tipoDato -> dato . LESS_THAN dato MORE_THAN

    LESS_THAN       shift and go to state 98


state 56

    (43) dato -> VEC .

    LESS_THAN       reduce using rule 43 (dato -> VEC .)
    AS              reduce using rule 43 (dato -> VEC .)
    VARIABLE        reduce using rule 43 (dato -> VEC .)
    STRUCT          reduce using rule 43 (dato -> VEC .)
    FN              reduce using rule 43 (dato -> VEC .)
    HASHMAP         reduce using rule 43 (dato -> VEC .)
    VEC             reduce using rule 43 (dato -> VEC .)
    FOR             reduce using rule 43 (dato -> VEC .)
    LOOP            reduce using rule 43 (dato -> VEC .)
    MATCH           reduce using rule 43 (dato -> VEC .)
    TYPE            reduce using rule 43 (dato -> VEC .)
    STRING          reduce using rule 43 (dato -> VEC .)
    CHAR            reduce using rule 43 (dato -> VEC .)
    DECIMAL         reduce using rule 43 (dato -> VEC .)
    HEXADECIMAL     reduce using rule 43 (dato -> VEC .)
    OCTAL           reduce using rule 43 (dato -> VEC .)
    BINARIO         reduce using rule 43 (dato -> VEC .)
    BOOL            reduce using rule 43 (dato -> VEC .)
    FLOAT           reduce using rule 43 (dato -> VEC .)
    GENERIC         reduce using rule 43 (dato -> VEC .)
    LET             reduce using rule 43 (dato -> VEC .)
    CONST           reduce using rule 43 (dato -> VEC .)
    $end            reduce using rule 43 (dato -> VEC .)
    RKEY            reduce using rule 43 (dato -> VEC .)
    COMA            reduce using rule 43 (dato -> VEC .)
    ASSIGN          reduce using rule 43 (dato -> VEC .)
    LKEY            reduce using rule 43 (dato -> VEC .)
    RPAREN          reduce using rule 43 (dato -> VEC .)
    RBRACKET        reduce using rule 43 (dato -> VEC .)
    MOREEQUAL_THAN  reduce using rule 43 (dato -> VEC .)
    COMMA_DOT       reduce using rule 43 (dato -> VEC .)
    MORE_THAN       reduce using rule 43 (dato -> VEC .)


state 57

    (22) creacion -> LET MUT . variables
    (25) creacion -> LET MUT . VARIABLE
    (28) variables -> . LPAREN conjuntoVariables RPAREN

    VARIABLE        shift and go to state 100
    LPAREN          shift and go to state 60

    variables                      shift and go to state 99

state 58

    (23) creacion -> LET variables .

    COMMA_DOT       reduce using rule 23 (creacion -> LET variables .)
    TWO_POINTS      reduce using rule 23 (creacion -> LET variables .)
    STRING          reduce using rule 23 (creacion -> LET variables .)
    CHAR            reduce using rule 23 (creacion -> LET variables .)
    DECIMAL         reduce using rule 23 (creacion -> LET variables .)
    HEXADECIMAL     reduce using rule 23 (creacion -> LET variables .)
    OCTAL           reduce using rule 23 (creacion -> LET variables .)
    BINARIO         reduce using rule 23 (creacion -> LET variables .)
    BOOL            reduce using rule 23 (creacion -> LET variables .)
    FLOAT           reduce using rule 23 (creacion -> LET variables .)
    VEC             reduce using rule 23 (creacion -> LET variables .)
    GENERIC         reduce using rule 23 (creacion -> LET variables .)
    ASSIGN          reduce using rule 23 (creacion -> LET variables .)
    VARIABLE        reduce using rule 23 (creacion -> LET variables .)
    STRUCT          reduce using rule 23 (creacion -> LET variables .)
    FN              reduce using rule 23 (creacion -> LET variables .)
    HASHMAP         reduce using rule 23 (creacion -> LET variables .)
    FOR             reduce using rule 23 (creacion -> LET variables .)
    LOOP            reduce using rule 23 (creacion -> LET variables .)
    MATCH           reduce using rule 23 (creacion -> LET variables .)
    TYPE            reduce using rule 23 (creacion -> LET variables .)
    LET             reduce using rule 23 (creacion -> LET variables .)
    CONST           reduce using rule 23 (creacion -> LET variables .)
    $end            reduce using rule 23 (creacion -> LET variables .)
    RKEY            reduce using rule 23 (creacion -> LET variables .)
    COMA            reduce using rule 23 (creacion -> LET variables .)


state 59

    (26) creacion -> LET VARIABLE .

    COMMA_DOT       reduce using rule 26 (creacion -> LET VARIABLE .)
    TWO_POINTS      reduce using rule 26 (creacion -> LET VARIABLE .)
    STRING          reduce using rule 26 (creacion -> LET VARIABLE .)
    CHAR            reduce using rule 26 (creacion -> LET VARIABLE .)
    DECIMAL         reduce using rule 26 (creacion -> LET VARIABLE .)
    HEXADECIMAL     reduce using rule 26 (creacion -> LET VARIABLE .)
    OCTAL           reduce using rule 26 (creacion -> LET VARIABLE .)
    BINARIO         reduce using rule 26 (creacion -> LET VARIABLE .)
    BOOL            reduce using rule 26 (creacion -> LET VARIABLE .)
    FLOAT           reduce using rule 26 (creacion -> LET VARIABLE .)
    VEC             reduce using rule 26 (creacion -> LET VARIABLE .)
    GENERIC         reduce using rule 26 (creacion -> LET VARIABLE .)
    ASSIGN          reduce using rule 26 (creacion -> LET VARIABLE .)
    VARIABLE        reduce using rule 26 (creacion -> LET VARIABLE .)
    STRUCT          reduce using rule 26 (creacion -> LET VARIABLE .)
    FN              reduce using rule 26 (creacion -> LET VARIABLE .)
    HASHMAP         reduce using rule 26 (creacion -> LET VARIABLE .)
    FOR             reduce using rule 26 (creacion -> LET VARIABLE .)
    LOOP            reduce using rule 26 (creacion -> LET VARIABLE .)
    MATCH           reduce using rule 26 (creacion -> LET VARIABLE .)
    TYPE            reduce using rule 26 (creacion -> LET VARIABLE .)
    LET             reduce using rule 26 (creacion -> LET VARIABLE .)
    CONST           reduce using rule 26 (creacion -> LET VARIABLE .)
    $end            reduce using rule 26 (creacion -> LET VARIABLE .)
    RKEY            reduce using rule 26 (creacion -> LET VARIABLE .)
    COMA            reduce using rule 26 (creacion -> LET VARIABLE .)


state 60

    (28) variables -> LPAREN . conjuntoVariables RPAREN
    (29) conjuntoVariables -> . VARIABLE COMA VARIABLE
    (30) conjuntoVariables -> . VARIABLE COMA conjuntoVariables

    VARIABLE        shift and go to state 102

    conjuntoVariables              shift and go to state 101

state 61

    (24) creacion -> CONST variables .

    COMMA_DOT       reduce using rule 24 (creacion -> CONST variables .)
    TWO_POINTS      reduce using rule 24 (creacion -> CONST variables .)
    STRING          reduce using rule 24 (creacion -> CONST variables .)
    CHAR            reduce using rule 24 (creacion -> CONST variables .)
    DECIMAL         reduce using rule 24 (creacion -> CONST variables .)
    HEXADECIMAL     reduce using rule 24 (creacion -> CONST variables .)
    OCTAL           reduce using rule 24 (creacion -> CONST variables .)
    BINARIO         reduce using rule 24 (creacion -> CONST variables .)
    BOOL            reduce using rule 24 (creacion -> CONST variables .)
    FLOAT           reduce using rule 24 (creacion -> CONST variables .)
    VEC             reduce using rule 24 (creacion -> CONST variables .)
    GENERIC         reduce using rule 24 (creacion -> CONST variables .)
    ASSIGN          reduce using rule 24 (creacion -> CONST variables .)
    VARIABLE        reduce using rule 24 (creacion -> CONST variables .)
    STRUCT          reduce using rule 24 (creacion -> CONST variables .)
    FN              reduce using rule 24 (creacion -> CONST variables .)
    HASHMAP         reduce using rule 24 (creacion -> CONST variables .)
    FOR             reduce using rule 24 (creacion -> CONST variables .)
    LOOP            reduce using rule 24 (creacion -> CONST variables .)
    MATCH           reduce using rule 24 (creacion -> CONST variables .)
    TYPE            reduce using rule 24 (creacion -> CONST variables .)
    LET             reduce using rule 24 (creacion -> CONST variables .)
    CONST           reduce using rule 24 (creacion -> CONST variables .)
    $end            reduce using rule 24 (creacion -> CONST variables .)
    RKEY            reduce using rule 24 (creacion -> CONST variables .)
    COMA            reduce using rule 24 (creacion -> CONST variables .)


state 62

    (27) creacion -> CONST VARIABLE .

    COMMA_DOT       reduce using rule 27 (creacion -> CONST VARIABLE .)
    TWO_POINTS      reduce using rule 27 (creacion -> CONST VARIABLE .)
    STRING          reduce using rule 27 (creacion -> CONST VARIABLE .)
    CHAR            reduce using rule 27 (creacion -> CONST VARIABLE .)
    DECIMAL         reduce using rule 27 (creacion -> CONST VARIABLE .)
    HEXADECIMAL     reduce using rule 27 (creacion -> CONST VARIABLE .)
    OCTAL           reduce using rule 27 (creacion -> CONST VARIABLE .)
    BINARIO         reduce using rule 27 (creacion -> CONST VARIABLE .)
    BOOL            reduce using rule 27 (creacion -> CONST VARIABLE .)
    FLOAT           reduce using rule 27 (creacion -> CONST VARIABLE .)
    VEC             reduce using rule 27 (creacion -> CONST VARIABLE .)
    GENERIC         reduce using rule 27 (creacion -> CONST VARIABLE .)
    ASSIGN          reduce using rule 27 (creacion -> CONST VARIABLE .)
    VARIABLE        reduce using rule 27 (creacion -> CONST VARIABLE .)
    STRUCT          reduce using rule 27 (creacion -> CONST VARIABLE .)
    FN              reduce using rule 27 (creacion -> CONST VARIABLE .)
    HASHMAP         reduce using rule 27 (creacion -> CONST VARIABLE .)
    FOR             reduce using rule 27 (creacion -> CONST VARIABLE .)
    LOOP            reduce using rule 27 (creacion -> CONST VARIABLE .)
    MATCH           reduce using rule 27 (creacion -> CONST VARIABLE .)
    TYPE            reduce using rule 27 (creacion -> CONST VARIABLE .)
    LET             reduce using rule 27 (creacion -> CONST VARIABLE .)
    CONST           reduce using rule 27 (creacion -> CONST VARIABLE .)
    $end            reduce using rule 27 (creacion -> CONST VARIABLE .)
    RKEY            reduce using rule 27 (creacion -> CONST VARIABLE .)
    COMA            reduce using rule 27 (creacion -> CONST VARIABLE .)


state 63

    (14) asignacion -> definicion ASSIGN valorAsignado . COMMA_DOT

    COMMA_DOT       shift and go to state 103


state 64

    (45) valorAsignado -> dato .

    COMMA_DOT       reduce using rule 45 (valorAsignado -> dato .)


state 65

    (46) valorAsignado -> llamadaAfuncion .

    COMMA_DOT       reduce using rule 46 (valorAsignado -> llamadaAfuncion .)


state 66

    (47) valorAsignado -> llamadaAfuncionPorAlias .

    COMMA_DOT       reduce using rule 47 (valorAsignado -> llamadaAfuncionPorAlias .)


state 67

    (48) valorAsignado -> vector .

    COMMA_DOT       reduce using rule 48 (valorAsignado -> vector .)


state 68

    (49) valorAsignado -> hashMap .

    COMMA_DOT       reduce using rule 49 (valorAsignado -> hashMap .)


state 69

    (50) valorAsignado -> LPAREN . conjuntoDatos RPAREN
    (52) conjuntoDatos -> . dato COMA dato
    (53) conjuntoDatos -> . dato COMA conjuntoDatos
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    conjuntoDatos                  shift and go to state 104
    dato                           shift and go to state 105

state 70

    (51) valorAsignado -> VARIABLE .
    (55) llamadaAfuncion -> VARIABLE . argumentos
    (56) llamadaAfuncion -> VARIABLE . argumentos POINT llamadaAfuncion
    (57) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS argumentos
    (58) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS
    (59) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS llamadaAfuncion
    (54) llamadaAfuncionPorAlias -> VARIABLE . POINT llamadaAfuncion
    (60) argumentos -> . LPAREN argumento RPAREN
    (61) argumentos -> . LPAREN RPAREN

    COMMA_DOT       reduce using rule 51 (valorAsignado -> VARIABLE .)
    TWO_POINTS      shift and go to state 108
    POINT           shift and go to state 107
    LPAREN          shift and go to state 109

    argumentos                     shift and go to state 106

state 71

    (43) dato -> VEC .
    (88) vector -> VEC . NOT LBRACKET datos RBRACKET
    (89) vector -> VEC . TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (90) vector -> VEC . TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN

    COMMA_DOT       reduce using rule 43 (dato -> VEC .)
    NOT             shift and go to state 45
    TWO_POINTS      shift and go to state 46


state 72

    (51) valorAsignado -> VARIABLE .
    (18) varEnVar -> VARIABLE . POINT VARIABLE
    (55) llamadaAfuncion -> VARIABLE . argumentos
    (56) llamadaAfuncion -> VARIABLE . argumentos POINT llamadaAfuncion
    (57) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS argumentos
    (58) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS
    (59) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS llamadaAfuncion
    (54) llamadaAfuncionPorAlias -> VARIABLE . POINT llamadaAfuncion
    (60) argumentos -> . LPAREN argumento RPAREN
    (61) argumentos -> . LPAREN RPAREN

    COMMA_DOT       reduce using rule 51 (valorAsignado -> VARIABLE .)
    POINT           shift and go to state 110
    TWO_POINTS      shift and go to state 108
    LPAREN          shift and go to state 109

    argumentos                     shift and go to state 106

state 73

    (15) asignacion -> VARIABLE ASSIGN valorAsignado . COMMA_DOT

    COMMA_DOT       shift and go to state 111


state 74

    (16) asignacion -> VARIABLE ASSIGN varEnVar . COMMA_DOT

    COMMA_DOT       shift and go to state 112


state 75

    (18) varEnVar -> VARIABLE POINT VARIABLE .

    VARIABLE        reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    STRUCT          reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    FN              reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    HASHMAP         reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    VEC             reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    FOR             reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    LOOP            reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    MATCH           reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    TYPE            reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    STRING          reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    CHAR            reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    DECIMAL         reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    HEXADECIMAL     reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    OCTAL           reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    BINARIO         reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    BOOL            reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    FLOAT           reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    GENERIC         reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    LET             reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    CONST           reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    $end            reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    RKEY            reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    COMA            reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)


state 76

    (104) casting -> VARIABLE . AS dato
    (105) casting -> VARIABLE . AS casting

    AS              shift and go to state 41


state 77

    (104) casting -> VARIABLE AS dato .
    (102) casting -> dato . AS dato
    (103) casting -> dato . AS casting

    VARIABLE        reduce using rule 104 (casting -> VARIABLE AS dato .)
    STRUCT          reduce using rule 104 (casting -> VARIABLE AS dato .)
    FN              reduce using rule 104 (casting -> VARIABLE AS dato .)
    HASHMAP         reduce using rule 104 (casting -> VARIABLE AS dato .)
    VEC             reduce using rule 104 (casting -> VARIABLE AS dato .)
    FOR             reduce using rule 104 (casting -> VARIABLE AS dato .)
    LOOP            reduce using rule 104 (casting -> VARIABLE AS dato .)
    MATCH           reduce using rule 104 (casting -> VARIABLE AS dato .)
    TYPE            reduce using rule 104 (casting -> VARIABLE AS dato .)
    STRING          reduce using rule 104 (casting -> VARIABLE AS dato .)
    CHAR            reduce using rule 104 (casting -> VARIABLE AS dato .)
    DECIMAL         reduce using rule 104 (casting -> VARIABLE AS dato .)
    HEXADECIMAL     reduce using rule 104 (casting -> VARIABLE AS dato .)
    OCTAL           reduce using rule 104 (casting -> VARIABLE AS dato .)
    BINARIO         reduce using rule 104 (casting -> VARIABLE AS dato .)
    BOOL            reduce using rule 104 (casting -> VARIABLE AS dato .)
    FLOAT           reduce using rule 104 (casting -> VARIABLE AS dato .)
    GENERIC         reduce using rule 104 (casting -> VARIABLE AS dato .)
    LET             reduce using rule 104 (casting -> VARIABLE AS dato .)
    CONST           reduce using rule 104 (casting -> VARIABLE AS dato .)
    $end            reduce using rule 104 (casting -> VARIABLE AS dato .)
    RKEY            reduce using rule 104 (casting -> VARIABLE AS dato .)
    COMA            reduce using rule 104 (casting -> VARIABLE AS dato .)
    AS              shift and go to state 50


state 78

    (105) casting -> VARIABLE AS casting .

    VARIABLE        reduce using rule 105 (casting -> VARIABLE AS casting .)
    STRUCT          reduce using rule 105 (casting -> VARIABLE AS casting .)
    FN              reduce using rule 105 (casting -> VARIABLE AS casting .)
    HASHMAP         reduce using rule 105 (casting -> VARIABLE AS casting .)
    VEC             reduce using rule 105 (casting -> VARIABLE AS casting .)
    FOR             reduce using rule 105 (casting -> VARIABLE AS casting .)
    LOOP            reduce using rule 105 (casting -> VARIABLE AS casting .)
    MATCH           reduce using rule 105 (casting -> VARIABLE AS casting .)
    TYPE            reduce using rule 105 (casting -> VARIABLE AS casting .)
    STRING          reduce using rule 105 (casting -> VARIABLE AS casting .)
    CHAR            reduce using rule 105 (casting -> VARIABLE AS casting .)
    DECIMAL         reduce using rule 105 (casting -> VARIABLE AS casting .)
    HEXADECIMAL     reduce using rule 105 (casting -> VARIABLE AS casting .)
    OCTAL           reduce using rule 105 (casting -> VARIABLE AS casting .)
    BINARIO         reduce using rule 105 (casting -> VARIABLE AS casting .)
    BOOL            reduce using rule 105 (casting -> VARIABLE AS casting .)
    FLOAT           reduce using rule 105 (casting -> VARIABLE AS casting .)
    GENERIC         reduce using rule 105 (casting -> VARIABLE AS casting .)
    LET             reduce using rule 105 (casting -> VARIABLE AS casting .)
    CONST           reduce using rule 105 (casting -> VARIABLE AS casting .)
    $end            reduce using rule 105 (casting -> VARIABLE AS casting .)
    RKEY            reduce using rule 105 (casting -> VARIABLE AS casting .)
    COMA            reduce using rule 105 (casting -> VARIABLE AS casting .)


state 79

    (85) struct -> STRUCT VARIABLE LKEY . atributos RKEY
    (86) atributos -> . VARIABLE TWO_POINTS dato
    (87) atributos -> . VARIABLE TWO_POINTS dato COMA atributos

    VARIABLE        shift and go to state 113

    atributos                      shift and go to state 114

state 80

    (70) definirFuncion -> FN VARIABLE trait . parametros LKEY cuerpoFuncion RKEY
    (76) parametros -> . LPAREN RPAREN datoARetornar
    (77) parametros -> . LPAREN parametro RPAREN datoARetornar
    (78) parametros -> . LPAREN RPAREN
    (79) parametros -> . LPAREN parametro RPAREN

    LPAREN          shift and go to state 83

    parametros                     shift and go to state 115

state 81

    (71) definirFuncion -> FN VARIABLE parametros . LKEY cuerpoFuncion RKEY

    LKEY            shift and go to state 116


state 82

    (72) trait -> LESS_THAN . GENERIC TWO_POINTS VARIABLE MORE_THAN

    GENERIC         shift and go to state 117


state 83

    (76) parametros -> LPAREN . RPAREN datoARetornar
    (77) parametros -> LPAREN . parametro RPAREN datoARetornar
    (78) parametros -> LPAREN . RPAREN
    (79) parametros -> LPAREN . parametro RPAREN
    (80) parametro -> . VARIABLE TWO_POINTS dato
    (81) parametro -> . VARIABLE TWO_POINTS dato COMA parametro
    (82) parametro -> . dato COMA parametro
    (83) parametro -> . dato
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC

    RPAREN          shift and go to state 118
    VARIABLE        shift and go to state 120
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    parametro                      shift and go to state 119
    dato                           shift and go to state 121

state 84

    (93) hashMap -> HASHMAP TWO_POINTS TWO_POINTS . NEW LPAREN RPAREN

    NEW             shift and go to state 122


state 85

    (88) vector -> VEC NOT LBRACKET . datos RBRACKET
    (91) datos -> . dato
    (92) datos -> . dato COMA datos
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    datos                          shift and go to state 123
    dato                           shift and go to state 124

state 86

    (89) vector -> VEC TWO_POINTS TWO_POINTS . NEW LPAREN RPAREN
    (90) vector -> VEC TWO_POINTS TWO_POINTS . NEW LPAREN datos RPAREN

    NEW             shift and go to state 125


state 87

    (94) for -> FOR VARIABLE IN . rango LKEY cuerpoFuncion RKEY
    (95) rango -> . DECIMAL POINT POINT DECIMAL
    (96) rango -> . DECIMAL POINT POINT ASSIGN DECIMAL

    DECIMAL         shift and go to state 127

    rango                          shift and go to state 126

state 88

    (100) loop -> LOOP LKEY cuerpoFuncion . RKEY

    RKEY            shift and go to state 128


state 89

    (84) cuerpoFuncion -> cuerpo .

    RKEY            reduce using rule 84 (cuerpoFuncion -> cuerpo .)
    COMA            reduce using rule 84 (cuerpoFuncion -> cuerpo .)


state 90

    (97) eMatch -> MATCH VARIABLE LKEY . content RKEY
    (98) content -> . dato MOREEQUAL_THAN cuerpoFuncion
    (99) content -> . dato MOREEQUAL_THAN cuerpoFuncion COMA content
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    content                        shift and go to state 129
    dato                           shift and go to state 130

state 91

    (102) casting -> dato AS dato .
    (102) casting -> dato . AS dato
    (103) casting -> dato . AS casting

    VARIABLE        reduce using rule 102 (casting -> dato AS dato .)
    STRUCT          reduce using rule 102 (casting -> dato AS dato .)
    FN              reduce using rule 102 (casting -> dato AS dato .)
    HASHMAP         reduce using rule 102 (casting -> dato AS dato .)
    VEC             reduce using rule 102 (casting -> dato AS dato .)
    FOR             reduce using rule 102 (casting -> dato AS dato .)
    LOOP            reduce using rule 102 (casting -> dato AS dato .)
    MATCH           reduce using rule 102 (casting -> dato AS dato .)
    TYPE            reduce using rule 102 (casting -> dato AS dato .)
    STRING          reduce using rule 102 (casting -> dato AS dato .)
    CHAR            reduce using rule 102 (casting -> dato AS dato .)
    DECIMAL         reduce using rule 102 (casting -> dato AS dato .)
    HEXADECIMAL     reduce using rule 102 (casting -> dato AS dato .)
    OCTAL           reduce using rule 102 (casting -> dato AS dato .)
    BINARIO         reduce using rule 102 (casting -> dato AS dato .)
    BOOL            reduce using rule 102 (casting -> dato AS dato .)
    FLOAT           reduce using rule 102 (casting -> dato AS dato .)
    GENERIC         reduce using rule 102 (casting -> dato AS dato .)
    LET             reduce using rule 102 (casting -> dato AS dato .)
    CONST           reduce using rule 102 (casting -> dato AS dato .)
    $end            reduce using rule 102 (casting -> dato AS dato .)
    RKEY            reduce using rule 102 (casting -> dato AS dato .)
    COMA            reduce using rule 102 (casting -> dato AS dato .)
    AS              shift and go to state 50


state 92

    (103) casting -> dato AS casting .

    VARIABLE        reduce using rule 103 (casting -> dato AS casting .)
    STRUCT          reduce using rule 103 (casting -> dato AS casting .)
    FN              reduce using rule 103 (casting -> dato AS casting .)
    HASHMAP         reduce using rule 103 (casting -> dato AS casting .)
    VEC             reduce using rule 103 (casting -> dato AS casting .)
    FOR             reduce using rule 103 (casting -> dato AS casting .)
    LOOP            reduce using rule 103 (casting -> dato AS casting .)
    MATCH           reduce using rule 103 (casting -> dato AS casting .)
    TYPE            reduce using rule 103 (casting -> dato AS casting .)
    STRING          reduce using rule 103 (casting -> dato AS casting .)
    CHAR            reduce using rule 103 (casting -> dato AS casting .)
    DECIMAL         reduce using rule 103 (casting -> dato AS casting .)
    HEXADECIMAL     reduce using rule 103 (casting -> dato AS casting .)
    OCTAL           reduce using rule 103 (casting -> dato AS casting .)
    BINARIO         reduce using rule 103 (casting -> dato AS casting .)
    BOOL            reduce using rule 103 (casting -> dato AS casting .)
    FLOAT           reduce using rule 103 (casting -> dato AS casting .)
    GENERIC         reduce using rule 103 (casting -> dato AS casting .)
    LET             reduce using rule 103 (casting -> dato AS casting .)
    CONST           reduce using rule 103 (casting -> dato AS casting .)
    $end            reduce using rule 103 (casting -> dato AS casting .)
    RKEY            reduce using rule 103 (casting -> dato AS casting .)
    COMA            reduce using rule 103 (casting -> dato AS casting .)


state 93

    (106) alias -> TYPE VARIABLE ASSIGN . dato COMMA_DOT
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    dato                           shift and go to state 131

state 94

    (31) tipoDato -> TWO_POINTS dato .
    (33) tipoDato -> dato . LESS_THAN dato MORE_THAN

    ASSIGN          reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    VARIABLE        reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    STRUCT          reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    FN              reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    HASHMAP         reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    VEC             reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    FOR             reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    LOOP            reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    MATCH           reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    TYPE            reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    STRING          reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    CHAR            reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    DECIMAL         reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    HEXADECIMAL     reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    OCTAL           reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    BINARIO         reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    BOOL            reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    FLOAT           reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    GENERIC         reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    LET             reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    CONST           reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    $end            reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    RKEY            reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    COMA            reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    LKEY            reduce using rule 31 (tipoDato -> TWO_POINTS dato .)
    LESS_THAN       shift and go to state 98


state 95

    (32) tipoDato -> TWO_POINTS tipoDato .

    ASSIGN          reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    VARIABLE        reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    STRUCT          reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    FN              reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    HASHMAP         reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    VEC             reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    FOR             reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    LOOP            reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    MATCH           reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    TYPE            reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    STRING          reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    CHAR            reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    DECIMAL         reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    HEXADECIMAL     reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    OCTAL           reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    BINARIO         reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    BOOL            reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    FLOAT           reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    GENERIC         reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    LET             reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    CONST           reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    $end            reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    RKEY            reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    COMA            reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)
    LKEY            reduce using rule 32 (tipoDato -> TWO_POINTS tipoDato .)


state 96

    (34) tipoDato -> TWO_POINTS apuntador .

    ASSIGN          reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    VARIABLE        reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    STRUCT          reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    FN              reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    HASHMAP         reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    VEC             reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    FOR             reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    LOOP            reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    MATCH           reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    TYPE            reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    STRING          reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    CHAR            reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    DECIMAL         reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    HEXADECIMAL     reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    OCTAL           reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    BINARIO         reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    BOOL            reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    FLOAT           reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    GENERIC         reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    LET             reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    CONST           reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    $end            reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    RKEY            reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    COMA            reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)
    LKEY            reduce using rule 34 (tipoDato -> TWO_POINTS apuntador .)


state 97

    (101) apuntador -> FN . parametros
    (76) parametros -> . LPAREN RPAREN datoARetornar
    (77) parametros -> . LPAREN parametro RPAREN datoARetornar
    (78) parametros -> . LPAREN RPAREN
    (79) parametros -> . LPAREN parametro RPAREN

    LPAREN          shift and go to state 83

    parametros                     shift and go to state 132

state 98

    (33) tipoDato -> dato LESS_THAN . dato MORE_THAN
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    dato                           shift and go to state 133

state 99

    (22) creacion -> LET MUT variables .

    COMMA_DOT       reduce using rule 22 (creacion -> LET MUT variables .)
    TWO_POINTS      reduce using rule 22 (creacion -> LET MUT variables .)
    STRING          reduce using rule 22 (creacion -> LET MUT variables .)
    CHAR            reduce using rule 22 (creacion -> LET MUT variables .)
    DECIMAL         reduce using rule 22 (creacion -> LET MUT variables .)
    HEXADECIMAL     reduce using rule 22 (creacion -> LET MUT variables .)
    OCTAL           reduce using rule 22 (creacion -> LET MUT variables .)
    BINARIO         reduce using rule 22 (creacion -> LET MUT variables .)
    BOOL            reduce using rule 22 (creacion -> LET MUT variables .)
    FLOAT           reduce using rule 22 (creacion -> LET MUT variables .)
    VEC             reduce using rule 22 (creacion -> LET MUT variables .)
    GENERIC         reduce using rule 22 (creacion -> LET MUT variables .)
    ASSIGN          reduce using rule 22 (creacion -> LET MUT variables .)
    VARIABLE        reduce using rule 22 (creacion -> LET MUT variables .)
    STRUCT          reduce using rule 22 (creacion -> LET MUT variables .)
    FN              reduce using rule 22 (creacion -> LET MUT variables .)
    HASHMAP         reduce using rule 22 (creacion -> LET MUT variables .)
    FOR             reduce using rule 22 (creacion -> LET MUT variables .)
    LOOP            reduce using rule 22 (creacion -> LET MUT variables .)
    MATCH           reduce using rule 22 (creacion -> LET MUT variables .)
    TYPE            reduce using rule 22 (creacion -> LET MUT variables .)
    LET             reduce using rule 22 (creacion -> LET MUT variables .)
    CONST           reduce using rule 22 (creacion -> LET MUT variables .)
    $end            reduce using rule 22 (creacion -> LET MUT variables .)
    RKEY            reduce using rule 22 (creacion -> LET MUT variables .)
    COMA            reduce using rule 22 (creacion -> LET MUT variables .)


state 100

    (25) creacion -> LET MUT VARIABLE .

    COMMA_DOT       reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    TWO_POINTS      reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    STRING          reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    CHAR            reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    DECIMAL         reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    HEXADECIMAL     reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    OCTAL           reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    BINARIO         reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    BOOL            reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    FLOAT           reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    VEC             reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    GENERIC         reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    ASSIGN          reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    VARIABLE        reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    STRUCT          reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    FN              reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    HASHMAP         reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    FOR             reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    LOOP            reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    MATCH           reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    TYPE            reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    LET             reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    CONST           reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    $end            reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    RKEY            reduce using rule 25 (creacion -> LET MUT VARIABLE .)
    COMA            reduce using rule 25 (creacion -> LET MUT VARIABLE .)


state 101

    (28) variables -> LPAREN conjuntoVariables . RPAREN

    RPAREN          shift and go to state 134


state 102

    (29) conjuntoVariables -> VARIABLE . COMA VARIABLE
    (30) conjuntoVariables -> VARIABLE . COMA conjuntoVariables

    COMA            shift and go to state 135


state 103

    (14) asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .

    VARIABLE        reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    STRUCT          reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    FN              reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    HASHMAP         reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    VEC             reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    FOR             reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    LOOP            reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    MATCH           reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    TYPE            reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    STRING          reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    CHAR            reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    DECIMAL         reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    HEXADECIMAL     reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    OCTAL           reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    BINARIO         reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    BOOL            reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    FLOAT           reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    GENERIC         reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    LET             reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    CONST           reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    $end            reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    RKEY            reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    COMA            reduce using rule 14 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)


state 104

    (50) valorAsignado -> LPAREN conjuntoDatos . RPAREN

    RPAREN          shift and go to state 136


state 105

    (52) conjuntoDatos -> dato . COMA dato
    (53) conjuntoDatos -> dato . COMA conjuntoDatos

    COMA            shift and go to state 137


state 106

    (55) llamadaAfuncion -> VARIABLE argumentos .
    (56) llamadaAfuncion -> VARIABLE argumentos . POINT llamadaAfuncion

    COMMA_DOT       reduce using rule 55 (llamadaAfuncion -> VARIABLE argumentos .)
    COMA            reduce using rule 55 (llamadaAfuncion -> VARIABLE argumentos .)
    RPAREN          reduce using rule 55 (llamadaAfuncion -> VARIABLE argumentos .)
    POINT           shift and go to state 138


state 107

    (54) llamadaAfuncionPorAlias -> VARIABLE POINT . llamadaAfuncion
    (55) llamadaAfuncion -> . VARIABLE argumentos
    (56) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (57) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (58) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (59) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion

    VARIABLE        shift and go to state 139

    llamadaAfuncion                shift and go to state 140

state 108

    (57) llamadaAfuncion -> VARIABLE TWO_POINTS . TWO_POINTS argumentos
    (58) llamadaAfuncion -> VARIABLE TWO_POINTS . TWO_POINTS
    (59) llamadaAfuncion -> VARIABLE TWO_POINTS . TWO_POINTS llamadaAfuncion

    TWO_POINTS      shift and go to state 141


state 109

    (60) argumentos -> LPAREN . argumento RPAREN
    (61) argumentos -> LPAREN . RPAREN
    (62) argumento -> . VARIABLE
    (63) argumento -> . dato
    (64) argumento -> . VARIABLE COMA argumento
    (65) argumento -> . dato COMA argumento
    (66) argumento -> . llamadaAfuncion
    (67) argumento -> . llamadaAfuncionPorAlias
    (68) argumento -> . llamadaAfuncion COMA argumento
    (69) argumento -> . llamadaAfuncionPorAlias COMA argumento
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (55) llamadaAfuncion -> . VARIABLE argumentos
    (56) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (57) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (58) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (59) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion
    (54) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    RPAREN          shift and go to state 143
    VARIABLE        shift and go to state 144
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    argumento                      shift and go to state 142
    dato                           shift and go to state 145
    llamadaAfuncion                shift and go to state 146
    llamadaAfuncionPorAlias        shift and go to state 147

state 110

    (18) varEnVar -> VARIABLE POINT . VARIABLE
    (54) llamadaAfuncionPorAlias -> VARIABLE POINT . llamadaAfuncion
    (55) llamadaAfuncion -> . VARIABLE argumentos
    (56) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (57) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (58) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (59) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion

    VARIABLE        shift and go to state 148

    llamadaAfuncion                shift and go to state 140

state 111

    (15) asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .

    VARIABLE        reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    STRUCT          reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    FN              reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    HASHMAP         reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    VEC             reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    FOR             reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    LOOP            reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    MATCH           reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    TYPE            reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    STRING          reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    CHAR            reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    DECIMAL         reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    HEXADECIMAL     reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    OCTAL           reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    BINARIO         reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    BOOL            reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    FLOAT           reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    GENERIC         reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    LET             reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    CONST           reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    $end            reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    RKEY            reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    COMA            reduce using rule 15 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)


state 112

    (16) asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .

    VARIABLE        reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    STRUCT          reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    FN              reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    HASHMAP         reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    VEC             reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    FOR             reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    LOOP            reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    MATCH           reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    TYPE            reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    STRING          reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    CHAR            reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    DECIMAL         reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    HEXADECIMAL     reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    OCTAL           reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    BINARIO         reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    BOOL            reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    FLOAT           reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    GENERIC         reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    LET             reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    CONST           reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    $end            reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    RKEY            reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    COMA            reduce using rule 16 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)


state 113

    (86) atributos -> VARIABLE . TWO_POINTS dato
    (87) atributos -> VARIABLE . TWO_POINTS dato COMA atributos

    TWO_POINTS      shift and go to state 149


state 114

    (85) struct -> STRUCT VARIABLE LKEY atributos . RKEY

    RKEY            shift and go to state 150


state 115

    (70) definirFuncion -> FN VARIABLE trait parametros . LKEY cuerpoFuncion RKEY

    LKEY            shift and go to state 151


state 116

    (71) definirFuncion -> FN VARIABLE parametros LKEY . cuerpoFuncion RKEY
    (84) cuerpoFuncion -> . cuerpo
    (1) cuerpo -> . linea
    (2) cuerpo -> . linea cuerpo
    (3) linea -> . asignacion
    (4) linea -> . struct
    (5) linea -> . varEnVar
    (6) linea -> . definirFuncion
    (7) linea -> . hashMap
    (8) linea -> . vector
    (9) linea -> . for
    (10) linea -> . loop
    (11) linea -> . eMatch
    (12) linea -> . casting
    (13) linea -> . alias
    (14) asignacion -> . definicion ASSIGN valorAsignado COMMA_DOT
    (15) asignacion -> . VARIABLE ASSIGN valorAsignado COMMA_DOT
    (16) asignacion -> . VARIABLE ASSIGN varEnVar COMMA_DOT
    (17) asignacion -> . definicion
    (85) struct -> . STRUCT VARIABLE LKEY atributos RKEY
    (18) varEnVar -> . VARIABLE POINT VARIABLE
    (70) definirFuncion -> . FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY
    (71) definirFuncion -> . FN VARIABLE parametros LKEY cuerpoFuncion RKEY
    (93) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (88) vector -> . VEC NOT LBRACKET datos RBRACKET
    (89) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (90) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN
    (94) for -> . FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY
    (100) loop -> . LOOP LKEY cuerpoFuncion RKEY
    (97) eMatch -> . MATCH VARIABLE LKEY content RKEY
    (102) casting -> . dato AS dato
    (103) casting -> . dato AS casting
    (104) casting -> . VARIABLE AS dato
    (105) casting -> . VARIABLE AS casting
    (106) alias -> . TYPE VARIABLE ASSIGN dato COMMA_DOT
    (19) definicion -> . creacion
    (20) definicion -> . creacion COMMA_DOT
    (21) definicion -> . creacion tipoDato
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (22) creacion -> . LET MUT variables
    (23) creacion -> . LET variables
    (24) creacion -> . CONST variables
    (25) creacion -> . LET MUT VARIABLE
    (26) creacion -> . LET VARIABLE
    (27) creacion -> . CONST VARIABLE

    VARIABLE        shift and go to state 15
    STRUCT          shift and go to state 16
    FN              shift and go to state 17
    HASHMAP         shift and go to state 18
    VEC             shift and go to state 19
    FOR             shift and go to state 20
    LOOP            shift and go to state 21
    MATCH           shift and go to state 22
    TYPE            shift and go to state 24
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    GENERIC         shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36

    cuerpoFuncion                  shift and go to state 152
    cuerpo                         shift and go to state 89
    linea                          shift and go to state 2
    asignacion                     shift and go to state 3
    struct                         shift and go to state 4
    varEnVar                       shift and go to state 5
    definirFuncion                 shift and go to state 6
    hashMap                        shift and go to state 7
    vector                         shift and go to state 8
    for                            shift and go to state 9
    loop                           shift and go to state 10
    eMatch                         shift and go to state 11
    casting                        shift and go to state 12
    alias                          shift and go to state 13
    definicion                     shift and go to state 14
    dato                           shift and go to state 23
    creacion                       shift and go to state 25

state 117

    (72) trait -> LESS_THAN GENERIC . TWO_POINTS VARIABLE MORE_THAN

    TWO_POINTS      shift and go to state 153


state 118

    (76) parametros -> LPAREN RPAREN . datoARetornar
    (78) parametros -> LPAREN RPAREN .
    (73) datoARetornar -> . MINUS MORE_THAN dato
    (74) datoARetornar -> . MINUS MORE_THAN NOT
    (75) datoARetornar -> . MINUS MORE_THAN tipoDato

    LKEY            reduce using rule 78 (parametros -> LPAREN RPAREN .)
    ASSIGN          reduce using rule 78 (parametros -> LPAREN RPAREN .)
    VARIABLE        reduce using rule 78 (parametros -> LPAREN RPAREN .)
    STRUCT          reduce using rule 78 (parametros -> LPAREN RPAREN .)
    FN              reduce using rule 78 (parametros -> LPAREN RPAREN .)
    HASHMAP         reduce using rule 78 (parametros -> LPAREN RPAREN .)
    VEC             reduce using rule 78 (parametros -> LPAREN RPAREN .)
    FOR             reduce using rule 78 (parametros -> LPAREN RPAREN .)
    LOOP            reduce using rule 78 (parametros -> LPAREN RPAREN .)
    MATCH           reduce using rule 78 (parametros -> LPAREN RPAREN .)
    TYPE            reduce using rule 78 (parametros -> LPAREN RPAREN .)
    STRING          reduce using rule 78 (parametros -> LPAREN RPAREN .)
    CHAR            reduce using rule 78 (parametros -> LPAREN RPAREN .)
    DECIMAL         reduce using rule 78 (parametros -> LPAREN RPAREN .)
    HEXADECIMAL     reduce using rule 78 (parametros -> LPAREN RPAREN .)
    OCTAL           reduce using rule 78 (parametros -> LPAREN RPAREN .)
    BINARIO         reduce using rule 78 (parametros -> LPAREN RPAREN .)
    BOOL            reduce using rule 78 (parametros -> LPAREN RPAREN .)
    FLOAT           reduce using rule 78 (parametros -> LPAREN RPAREN .)
    GENERIC         reduce using rule 78 (parametros -> LPAREN RPAREN .)
    LET             reduce using rule 78 (parametros -> LPAREN RPAREN .)
    CONST           reduce using rule 78 (parametros -> LPAREN RPAREN .)
    $end            reduce using rule 78 (parametros -> LPAREN RPAREN .)
    RKEY            reduce using rule 78 (parametros -> LPAREN RPAREN .)
    COMA            reduce using rule 78 (parametros -> LPAREN RPAREN .)
    MINUS           shift and go to state 155

    datoARetornar                  shift and go to state 154

state 119

    (77) parametros -> LPAREN parametro . RPAREN datoARetornar
    (79) parametros -> LPAREN parametro . RPAREN

    RPAREN          shift and go to state 156


state 120

    (80) parametro -> VARIABLE . TWO_POINTS dato
    (81) parametro -> VARIABLE . TWO_POINTS dato COMA parametro

    TWO_POINTS      shift and go to state 157


state 121

    (82) parametro -> dato . COMA parametro
    (83) parametro -> dato .

    COMA            shift and go to state 158
    RPAREN          reduce using rule 83 (parametro -> dato .)


state 122

    (93) hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW . LPAREN RPAREN

    LPAREN          shift and go to state 159


state 123

    (88) vector -> VEC NOT LBRACKET datos . RBRACKET

    RBRACKET        shift and go to state 160


state 124

    (91) datos -> dato .
    (92) datos -> dato . COMA datos

    RBRACKET        reduce using rule 91 (datos -> dato .)
    RPAREN          reduce using rule 91 (datos -> dato .)
    COMA            shift and go to state 161


state 125

    (89) vector -> VEC TWO_POINTS TWO_POINTS NEW . LPAREN RPAREN
    (90) vector -> VEC TWO_POINTS TWO_POINTS NEW . LPAREN datos RPAREN

    LPAREN          shift and go to state 162


state 126

    (94) for -> FOR VARIABLE IN rango . LKEY cuerpoFuncion RKEY

    LKEY            shift and go to state 163


state 127

    (95) rango -> DECIMAL . POINT POINT DECIMAL
    (96) rango -> DECIMAL . POINT POINT ASSIGN DECIMAL

    POINT           shift and go to state 164


state 128

    (100) loop -> LOOP LKEY cuerpoFuncion RKEY .

    VARIABLE        reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    STRUCT          reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    FN              reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    HASHMAP         reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    VEC             reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    FOR             reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    LOOP            reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    MATCH           reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    TYPE            reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    STRING          reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    CHAR            reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    DECIMAL         reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    HEXADECIMAL     reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    OCTAL           reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    BINARIO         reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    BOOL            reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    FLOAT           reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    GENERIC         reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    LET             reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    CONST           reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    $end            reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    RKEY            reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    COMA            reduce using rule 100 (loop -> LOOP LKEY cuerpoFuncion RKEY .)


state 129

    (97) eMatch -> MATCH VARIABLE LKEY content . RKEY

    RKEY            shift and go to state 165


state 130

    (98) content -> dato . MOREEQUAL_THAN cuerpoFuncion
    (99) content -> dato . MOREEQUAL_THAN cuerpoFuncion COMA content

    MOREEQUAL_THAN  shift and go to state 166


state 131

    (106) alias -> TYPE VARIABLE ASSIGN dato . COMMA_DOT

    COMMA_DOT       shift and go to state 167


state 132

    (101) apuntador -> FN parametros .

    ASSIGN          reduce using rule 101 (apuntador -> FN parametros .)
    VARIABLE        reduce using rule 101 (apuntador -> FN parametros .)
    STRUCT          reduce using rule 101 (apuntador -> FN parametros .)
    FN              reduce using rule 101 (apuntador -> FN parametros .)
    HASHMAP         reduce using rule 101 (apuntador -> FN parametros .)
    VEC             reduce using rule 101 (apuntador -> FN parametros .)
    FOR             reduce using rule 101 (apuntador -> FN parametros .)
    LOOP            reduce using rule 101 (apuntador -> FN parametros .)
    MATCH           reduce using rule 101 (apuntador -> FN parametros .)
    TYPE            reduce using rule 101 (apuntador -> FN parametros .)
    STRING          reduce using rule 101 (apuntador -> FN parametros .)
    CHAR            reduce using rule 101 (apuntador -> FN parametros .)
    DECIMAL         reduce using rule 101 (apuntador -> FN parametros .)
    HEXADECIMAL     reduce using rule 101 (apuntador -> FN parametros .)
    OCTAL           reduce using rule 101 (apuntador -> FN parametros .)
    BINARIO         reduce using rule 101 (apuntador -> FN parametros .)
    BOOL            reduce using rule 101 (apuntador -> FN parametros .)
    FLOAT           reduce using rule 101 (apuntador -> FN parametros .)
    GENERIC         reduce using rule 101 (apuntador -> FN parametros .)
    LET             reduce using rule 101 (apuntador -> FN parametros .)
    CONST           reduce using rule 101 (apuntador -> FN parametros .)
    $end            reduce using rule 101 (apuntador -> FN parametros .)
    RKEY            reduce using rule 101 (apuntador -> FN parametros .)
    COMA            reduce using rule 101 (apuntador -> FN parametros .)
    LKEY            reduce using rule 101 (apuntador -> FN parametros .)


state 133

    (33) tipoDato -> dato LESS_THAN dato . MORE_THAN

    MORE_THAN       shift and go to state 168


state 134

    (28) variables -> LPAREN conjuntoVariables RPAREN .

    COMMA_DOT       reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    TWO_POINTS      reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    STRING          reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    CHAR            reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    DECIMAL         reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    HEXADECIMAL     reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    OCTAL           reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    BINARIO         reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    BOOL            reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    FLOAT           reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    VEC             reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    GENERIC         reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    ASSIGN          reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    VARIABLE        reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    STRUCT          reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    FN              reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    HASHMAP         reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    FOR             reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    LOOP            reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    MATCH           reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    TYPE            reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    LET             reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    CONST           reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    $end            reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    RKEY            reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)
    COMA            reduce using rule 28 (variables -> LPAREN conjuntoVariables RPAREN .)


state 135

    (29) conjuntoVariables -> VARIABLE COMA . VARIABLE
    (30) conjuntoVariables -> VARIABLE COMA . conjuntoVariables
    (29) conjuntoVariables -> . VARIABLE COMA VARIABLE
    (30) conjuntoVariables -> . VARIABLE COMA conjuntoVariables

    VARIABLE        shift and go to state 169

    conjuntoVariables              shift and go to state 170

state 136

    (50) valorAsignado -> LPAREN conjuntoDatos RPAREN .

    COMMA_DOT       reduce using rule 50 (valorAsignado -> LPAREN conjuntoDatos RPAREN .)


state 137

    (52) conjuntoDatos -> dato COMA . dato
    (53) conjuntoDatos -> dato COMA . conjuntoDatos
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (52) conjuntoDatos -> . dato COMA dato
    (53) conjuntoDatos -> . dato COMA conjuntoDatos

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    dato                           shift and go to state 171
    conjuntoDatos                  shift and go to state 172

state 138

    (56) llamadaAfuncion -> VARIABLE argumentos POINT . llamadaAfuncion
    (55) llamadaAfuncion -> . VARIABLE argumentos
    (56) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (57) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (58) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (59) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion

    VARIABLE        shift and go to state 139

    llamadaAfuncion                shift and go to state 173

state 139

    (55) llamadaAfuncion -> VARIABLE . argumentos
    (56) llamadaAfuncion -> VARIABLE . argumentos POINT llamadaAfuncion
    (57) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS argumentos
    (58) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS
    (59) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS llamadaAfuncion
    (60) argumentos -> . LPAREN argumento RPAREN
    (61) argumentos -> . LPAREN RPAREN

    TWO_POINTS      shift and go to state 108
    LPAREN          shift and go to state 109

    argumentos                     shift and go to state 106

state 140

    (54) llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion .

    COMMA_DOT       reduce using rule 54 (llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion .)
    COMA            reduce using rule 54 (llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion .)
    RPAREN          reduce using rule 54 (llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion .)


state 141

    (57) llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS . argumentos
    (58) llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS .
    (59) llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS . llamadaAfuncion
    (60) argumentos -> . LPAREN argumento RPAREN
    (61) argumentos -> . LPAREN RPAREN
    (55) llamadaAfuncion -> . VARIABLE argumentos
    (56) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (57) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (58) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (59) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion

    COMMA_DOT       reduce using rule 58 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS .)
    COMA            reduce using rule 58 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS .)
    RPAREN          reduce using rule 58 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS .)
    LPAREN          shift and go to state 109
    VARIABLE        shift and go to state 139

    argumentos                     shift and go to state 174
    llamadaAfuncion                shift and go to state 175

state 142

    (60) argumentos -> LPAREN argumento . RPAREN

    RPAREN          shift and go to state 176


state 143

    (61) argumentos -> LPAREN RPAREN .

    POINT           reduce using rule 61 (argumentos -> LPAREN RPAREN .)
    COMMA_DOT       reduce using rule 61 (argumentos -> LPAREN RPAREN .)
    COMA            reduce using rule 61 (argumentos -> LPAREN RPAREN .)
    RPAREN          reduce using rule 61 (argumentos -> LPAREN RPAREN .)


state 144

    (62) argumento -> VARIABLE .
    (64) argumento -> VARIABLE . COMA argumento
    (55) llamadaAfuncion -> VARIABLE . argumentos
    (56) llamadaAfuncion -> VARIABLE . argumentos POINT llamadaAfuncion
    (57) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS argumentos
    (58) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS
    (59) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS llamadaAfuncion
    (54) llamadaAfuncionPorAlias -> VARIABLE . POINT llamadaAfuncion
    (60) argumentos -> . LPAREN argumento RPAREN
    (61) argumentos -> . LPAREN RPAREN

    RPAREN          reduce using rule 62 (argumento -> VARIABLE .)
    COMA            shift and go to state 177
    TWO_POINTS      shift and go to state 108
    POINT           shift and go to state 107
    LPAREN          shift and go to state 109

    argumentos                     shift and go to state 106

state 145

    (63) argumento -> dato .
    (65) argumento -> dato . COMA argumento

    RPAREN          reduce using rule 63 (argumento -> dato .)
    COMA            shift and go to state 178


state 146

    (66) argumento -> llamadaAfuncion .
    (68) argumento -> llamadaAfuncion . COMA argumento

    RPAREN          reduce using rule 66 (argumento -> llamadaAfuncion .)
    COMA            shift and go to state 179


state 147

    (67) argumento -> llamadaAfuncionPorAlias .
    (69) argumento -> llamadaAfuncionPorAlias . COMA argumento

    RPAREN          reduce using rule 67 (argumento -> llamadaAfuncionPorAlias .)
    COMA            shift and go to state 180


state 148

    (18) varEnVar -> VARIABLE POINT VARIABLE .
    (55) llamadaAfuncion -> VARIABLE . argumentos
    (56) llamadaAfuncion -> VARIABLE . argumentos POINT llamadaAfuncion
    (57) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS argumentos
    (58) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS
    (59) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS llamadaAfuncion
    (60) argumentos -> . LPAREN argumento RPAREN
    (61) argumentos -> . LPAREN RPAREN

    COMMA_DOT       reduce using rule 18 (varEnVar -> VARIABLE POINT VARIABLE .)
    TWO_POINTS      shift and go to state 108
    LPAREN          shift and go to state 109

    argumentos                     shift and go to state 106

state 149

    (86) atributos -> VARIABLE TWO_POINTS . dato
    (87) atributos -> VARIABLE TWO_POINTS . dato COMA atributos
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    dato                           shift and go to state 181

state 150

    (85) struct -> STRUCT VARIABLE LKEY atributos RKEY .

    VARIABLE        reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    STRUCT          reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    FN              reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    HASHMAP         reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    VEC             reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    FOR             reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    LOOP            reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    MATCH           reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    TYPE            reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    STRING          reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    CHAR            reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    DECIMAL         reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    HEXADECIMAL     reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    OCTAL           reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    BINARIO         reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    BOOL            reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    FLOAT           reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    GENERIC         reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    LET             reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    CONST           reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    $end            reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    RKEY            reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    COMA            reduce using rule 85 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)


state 151

    (70) definirFuncion -> FN VARIABLE trait parametros LKEY . cuerpoFuncion RKEY
    (84) cuerpoFuncion -> . cuerpo
    (1) cuerpo -> . linea
    (2) cuerpo -> . linea cuerpo
    (3) linea -> . asignacion
    (4) linea -> . struct
    (5) linea -> . varEnVar
    (6) linea -> . definirFuncion
    (7) linea -> . hashMap
    (8) linea -> . vector
    (9) linea -> . for
    (10) linea -> . loop
    (11) linea -> . eMatch
    (12) linea -> . casting
    (13) linea -> . alias
    (14) asignacion -> . definicion ASSIGN valorAsignado COMMA_DOT
    (15) asignacion -> . VARIABLE ASSIGN valorAsignado COMMA_DOT
    (16) asignacion -> . VARIABLE ASSIGN varEnVar COMMA_DOT
    (17) asignacion -> . definicion
    (85) struct -> . STRUCT VARIABLE LKEY atributos RKEY
    (18) varEnVar -> . VARIABLE POINT VARIABLE
    (70) definirFuncion -> . FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY
    (71) definirFuncion -> . FN VARIABLE parametros LKEY cuerpoFuncion RKEY
    (93) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (88) vector -> . VEC NOT LBRACKET datos RBRACKET
    (89) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (90) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN
    (94) for -> . FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY
    (100) loop -> . LOOP LKEY cuerpoFuncion RKEY
    (97) eMatch -> . MATCH VARIABLE LKEY content RKEY
    (102) casting -> . dato AS dato
    (103) casting -> . dato AS casting
    (104) casting -> . VARIABLE AS dato
    (105) casting -> . VARIABLE AS casting
    (106) alias -> . TYPE VARIABLE ASSIGN dato COMMA_DOT
    (19) definicion -> . creacion
    (20) definicion -> . creacion COMMA_DOT
    (21) definicion -> . creacion tipoDato
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (22) creacion -> . LET MUT variables
    (23) creacion -> . LET variables
    (24) creacion -> . CONST variables
    (25) creacion -> . LET MUT VARIABLE
    (26) creacion -> . LET VARIABLE
    (27) creacion -> . CONST VARIABLE

    VARIABLE        shift and go to state 15
    STRUCT          shift and go to state 16
    FN              shift and go to state 17
    HASHMAP         shift and go to state 18
    VEC             shift and go to state 19
    FOR             shift and go to state 20
    LOOP            shift and go to state 21
    MATCH           shift and go to state 22
    TYPE            shift and go to state 24
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    GENERIC         shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36

    cuerpoFuncion                  shift and go to state 182
    cuerpo                         shift and go to state 89
    linea                          shift and go to state 2
    asignacion                     shift and go to state 3
    struct                         shift and go to state 4
    varEnVar                       shift and go to state 5
    definirFuncion                 shift and go to state 6
    hashMap                        shift and go to state 7
    vector                         shift and go to state 8
    for                            shift and go to state 9
    loop                           shift and go to state 10
    eMatch                         shift and go to state 11
    casting                        shift and go to state 12
    alias                          shift and go to state 13
    definicion                     shift and go to state 14
    dato                           shift and go to state 23
    creacion                       shift and go to state 25

state 152

    (71) definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion . RKEY

    RKEY            shift and go to state 183


state 153

    (72) trait -> LESS_THAN GENERIC TWO_POINTS . VARIABLE MORE_THAN

    VARIABLE        shift and go to state 184


state 154

    (76) parametros -> LPAREN RPAREN datoARetornar .

    LKEY            reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    ASSIGN          reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    VARIABLE        reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    STRUCT          reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    FN              reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    HASHMAP         reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    VEC             reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    FOR             reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    LOOP            reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    MATCH           reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    TYPE            reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    STRING          reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    CHAR            reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    DECIMAL         reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    HEXADECIMAL     reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    OCTAL           reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    BINARIO         reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    BOOL            reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    FLOAT           reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    GENERIC         reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    LET             reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    CONST           reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    $end            reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    RKEY            reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)
    COMA            reduce using rule 76 (parametros -> LPAREN RPAREN datoARetornar .)


state 155

    (73) datoARetornar -> MINUS . MORE_THAN dato
    (74) datoARetornar -> MINUS . MORE_THAN NOT
    (75) datoARetornar -> MINUS . MORE_THAN tipoDato

    MORE_THAN       shift and go to state 185


state 156

    (77) parametros -> LPAREN parametro RPAREN . datoARetornar
    (79) parametros -> LPAREN parametro RPAREN .
    (73) datoARetornar -> . MINUS MORE_THAN dato
    (74) datoARetornar -> . MINUS MORE_THAN NOT
    (75) datoARetornar -> . MINUS MORE_THAN tipoDato

    LKEY            reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    ASSIGN          reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    VARIABLE        reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    STRUCT          reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    FN              reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    HASHMAP         reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    VEC             reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    FOR             reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    LOOP            reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    MATCH           reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    TYPE            reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    STRING          reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    CHAR            reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    DECIMAL         reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    HEXADECIMAL     reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    OCTAL           reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    BINARIO         reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    BOOL            reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    FLOAT           reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    GENERIC         reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    LET             reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    CONST           reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    $end            reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    RKEY            reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    COMA            reduce using rule 79 (parametros -> LPAREN parametro RPAREN .)
    MINUS           shift and go to state 155

    datoARetornar                  shift and go to state 186

state 157

    (80) parametro -> VARIABLE TWO_POINTS . dato
    (81) parametro -> VARIABLE TWO_POINTS . dato COMA parametro
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    dato                           shift and go to state 187

state 158

    (82) parametro -> dato COMA . parametro
    (80) parametro -> . VARIABLE TWO_POINTS dato
    (81) parametro -> . VARIABLE TWO_POINTS dato COMA parametro
    (82) parametro -> . dato COMA parametro
    (83) parametro -> . dato
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC

    VARIABLE        shift and go to state 120
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    dato                           shift and go to state 121
    parametro                      shift and go to state 188

state 159

    (93) hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN . RPAREN

    RPAREN          shift and go to state 189


state 160

    (88) vector -> VEC NOT LBRACKET datos RBRACKET .

    VARIABLE        reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    STRUCT          reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    FN              reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    HASHMAP         reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    VEC             reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    FOR             reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    LOOP            reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    MATCH           reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    TYPE            reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    STRING          reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    CHAR            reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    DECIMAL         reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    HEXADECIMAL     reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    OCTAL           reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    BINARIO         reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    BOOL            reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    FLOAT           reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    GENERIC         reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    LET             reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    CONST           reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    $end            reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    RKEY            reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    COMA            reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    COMMA_DOT       reduce using rule 88 (vector -> VEC NOT LBRACKET datos RBRACKET .)


state 161

    (92) datos -> dato COMA . datos
    (91) datos -> . dato
    (92) datos -> . dato COMA datos
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    dato                           shift and go to state 124
    datos                          shift and go to state 190

state 162

    (89) vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN . RPAREN
    (90) vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN . datos RPAREN
    (91) datos -> . dato
    (92) datos -> . dato COMA datos
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC

    RPAREN          shift and go to state 191
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    datos                          shift and go to state 192
    dato                           shift and go to state 124

state 163

    (94) for -> FOR VARIABLE IN rango LKEY . cuerpoFuncion RKEY
    (84) cuerpoFuncion -> . cuerpo
    (1) cuerpo -> . linea
    (2) cuerpo -> . linea cuerpo
    (3) linea -> . asignacion
    (4) linea -> . struct
    (5) linea -> . varEnVar
    (6) linea -> . definirFuncion
    (7) linea -> . hashMap
    (8) linea -> . vector
    (9) linea -> . for
    (10) linea -> . loop
    (11) linea -> . eMatch
    (12) linea -> . casting
    (13) linea -> . alias
    (14) asignacion -> . definicion ASSIGN valorAsignado COMMA_DOT
    (15) asignacion -> . VARIABLE ASSIGN valorAsignado COMMA_DOT
    (16) asignacion -> . VARIABLE ASSIGN varEnVar COMMA_DOT
    (17) asignacion -> . definicion
    (85) struct -> . STRUCT VARIABLE LKEY atributos RKEY
    (18) varEnVar -> . VARIABLE POINT VARIABLE
    (70) definirFuncion -> . FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY
    (71) definirFuncion -> . FN VARIABLE parametros LKEY cuerpoFuncion RKEY
    (93) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (88) vector -> . VEC NOT LBRACKET datos RBRACKET
    (89) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (90) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN
    (94) for -> . FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY
    (100) loop -> . LOOP LKEY cuerpoFuncion RKEY
    (97) eMatch -> . MATCH VARIABLE LKEY content RKEY
    (102) casting -> . dato AS dato
    (103) casting -> . dato AS casting
    (104) casting -> . VARIABLE AS dato
    (105) casting -> . VARIABLE AS casting
    (106) alias -> . TYPE VARIABLE ASSIGN dato COMMA_DOT
    (19) definicion -> . creacion
    (20) definicion -> . creacion COMMA_DOT
    (21) definicion -> . creacion tipoDato
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (22) creacion -> . LET MUT variables
    (23) creacion -> . LET variables
    (24) creacion -> . CONST variables
    (25) creacion -> . LET MUT VARIABLE
    (26) creacion -> . LET VARIABLE
    (27) creacion -> . CONST VARIABLE

    VARIABLE        shift and go to state 15
    STRUCT          shift and go to state 16
    FN              shift and go to state 17
    HASHMAP         shift and go to state 18
    VEC             shift and go to state 19
    FOR             shift and go to state 20
    LOOP            shift and go to state 21
    MATCH           shift and go to state 22
    TYPE            shift and go to state 24
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    GENERIC         shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36

    cuerpoFuncion                  shift and go to state 193
    cuerpo                         shift and go to state 89
    linea                          shift and go to state 2
    asignacion                     shift and go to state 3
    struct                         shift and go to state 4
    varEnVar                       shift and go to state 5
    definirFuncion                 shift and go to state 6
    hashMap                        shift and go to state 7
    vector                         shift and go to state 8
    for                            shift and go to state 9
    loop                           shift and go to state 10
    eMatch                         shift and go to state 11
    casting                        shift and go to state 12
    alias                          shift and go to state 13
    definicion                     shift and go to state 14
    dato                           shift and go to state 23
    creacion                       shift and go to state 25

state 164

    (95) rango -> DECIMAL POINT . POINT DECIMAL
    (96) rango -> DECIMAL POINT . POINT ASSIGN DECIMAL

    POINT           shift and go to state 194


state 165

    (97) eMatch -> MATCH VARIABLE LKEY content RKEY .

    VARIABLE        reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    STRUCT          reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    FN              reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    HASHMAP         reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    VEC             reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    FOR             reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    LOOP            reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    MATCH           reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    TYPE            reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    STRING          reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    CHAR            reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    DECIMAL         reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    HEXADECIMAL     reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    OCTAL           reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    BINARIO         reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    BOOL            reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    FLOAT           reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    GENERIC         reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    LET             reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    CONST           reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    $end            reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    RKEY            reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    COMA            reduce using rule 97 (eMatch -> MATCH VARIABLE LKEY content RKEY .)


state 166

    (98) content -> dato MOREEQUAL_THAN . cuerpoFuncion
    (99) content -> dato MOREEQUAL_THAN . cuerpoFuncion COMA content
    (84) cuerpoFuncion -> . cuerpo
    (1) cuerpo -> . linea
    (2) cuerpo -> . linea cuerpo
    (3) linea -> . asignacion
    (4) linea -> . struct
    (5) linea -> . varEnVar
    (6) linea -> . definirFuncion
    (7) linea -> . hashMap
    (8) linea -> . vector
    (9) linea -> . for
    (10) linea -> . loop
    (11) linea -> . eMatch
    (12) linea -> . casting
    (13) linea -> . alias
    (14) asignacion -> . definicion ASSIGN valorAsignado COMMA_DOT
    (15) asignacion -> . VARIABLE ASSIGN valorAsignado COMMA_DOT
    (16) asignacion -> . VARIABLE ASSIGN varEnVar COMMA_DOT
    (17) asignacion -> . definicion
    (85) struct -> . STRUCT VARIABLE LKEY atributos RKEY
    (18) varEnVar -> . VARIABLE POINT VARIABLE
    (70) definirFuncion -> . FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY
    (71) definirFuncion -> . FN VARIABLE parametros LKEY cuerpoFuncion RKEY
    (93) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (88) vector -> . VEC NOT LBRACKET datos RBRACKET
    (89) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (90) vector -> . VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN
    (94) for -> . FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY
    (100) loop -> . LOOP LKEY cuerpoFuncion RKEY
    (97) eMatch -> . MATCH VARIABLE LKEY content RKEY
    (102) casting -> . dato AS dato
    (103) casting -> . dato AS casting
    (104) casting -> . VARIABLE AS dato
    (105) casting -> . VARIABLE AS casting
    (106) alias -> . TYPE VARIABLE ASSIGN dato COMMA_DOT
    (19) definicion -> . creacion
    (20) definicion -> . creacion COMMA_DOT
    (21) definicion -> . creacion tipoDato
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (22) creacion -> . LET MUT variables
    (23) creacion -> . LET variables
    (24) creacion -> . CONST variables
    (25) creacion -> . LET MUT VARIABLE
    (26) creacion -> . LET VARIABLE
    (27) creacion -> . CONST VARIABLE

    VARIABLE        shift and go to state 15
    STRUCT          shift and go to state 16
    FN              shift and go to state 17
    HASHMAP         shift and go to state 18
    VEC             shift and go to state 19
    FOR             shift and go to state 20
    LOOP            shift and go to state 21
    MATCH           shift and go to state 22
    TYPE            shift and go to state 24
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    GENERIC         shift and go to state 34
    LET             shift and go to state 35
    CONST           shift and go to state 36

    dato                           shift and go to state 23
    cuerpoFuncion                  shift and go to state 195
    cuerpo                         shift and go to state 89
    linea                          shift and go to state 2
    asignacion                     shift and go to state 3
    struct                         shift and go to state 4
    varEnVar                       shift and go to state 5
    definirFuncion                 shift and go to state 6
    hashMap                        shift and go to state 7
    vector                         shift and go to state 8
    for                            shift and go to state 9
    loop                           shift and go to state 10
    eMatch                         shift and go to state 11
    casting                        shift and go to state 12
    alias                          shift and go to state 13
    definicion                     shift and go to state 14
    creacion                       shift and go to state 25

state 167

    (106) alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .

    VARIABLE        reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    STRUCT          reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    FN              reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    HASHMAP         reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    VEC             reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    FOR             reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    LOOP            reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    MATCH           reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    TYPE            reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    STRING          reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    CHAR            reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    DECIMAL         reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    HEXADECIMAL     reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    OCTAL           reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    BINARIO         reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    BOOL            reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    FLOAT           reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    GENERIC         reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    LET             reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    CONST           reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    $end            reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    RKEY            reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)
    COMA            reduce using rule 106 (alias -> TYPE VARIABLE ASSIGN dato COMMA_DOT .)


state 168

    (33) tipoDato -> dato LESS_THAN dato MORE_THAN .

    ASSIGN          reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    VARIABLE        reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    STRUCT          reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    FN              reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    HASHMAP         reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    VEC             reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    FOR             reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    LOOP            reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    MATCH           reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    TYPE            reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    STRING          reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    CHAR            reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    DECIMAL         reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    HEXADECIMAL     reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    OCTAL           reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    BINARIO         reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    BOOL            reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    FLOAT           reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    GENERIC         reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    LET             reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    CONST           reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    $end            reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    RKEY            reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    COMA            reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)
    LKEY            reduce using rule 33 (tipoDato -> dato LESS_THAN dato MORE_THAN .)


state 169

    (29) conjuntoVariables -> VARIABLE COMA VARIABLE .
    (29) conjuntoVariables -> VARIABLE . COMA VARIABLE
    (30) conjuntoVariables -> VARIABLE . COMA conjuntoVariables

    RPAREN          reduce using rule 29 (conjuntoVariables -> VARIABLE COMA VARIABLE .)
    COMA            shift and go to state 135


state 170

    (30) conjuntoVariables -> VARIABLE COMA conjuntoVariables .

    RPAREN          reduce using rule 30 (conjuntoVariables -> VARIABLE COMA conjuntoVariables .)


state 171

    (52) conjuntoDatos -> dato COMA dato .
    (52) conjuntoDatos -> dato . COMA dato
    (53) conjuntoDatos -> dato . COMA conjuntoDatos

    RPAREN          reduce using rule 52 (conjuntoDatos -> dato COMA dato .)
    COMA            shift and go to state 137


state 172

    (53) conjuntoDatos -> dato COMA conjuntoDatos .

    RPAREN          reduce using rule 53 (conjuntoDatos -> dato COMA conjuntoDatos .)


state 173

    (56) llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion .

    COMMA_DOT       reduce using rule 56 (llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion .)
    COMA            reduce using rule 56 (llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion .)
    RPAREN          reduce using rule 56 (llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion .)


state 174

    (57) llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos .

    COMMA_DOT       reduce using rule 57 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos .)
    COMA            reduce using rule 57 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos .)
    RPAREN          reduce using rule 57 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos .)


state 175

    (59) llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion .

    COMMA_DOT       reduce using rule 59 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion .)
    COMA            reduce using rule 59 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion .)
    RPAREN          reduce using rule 59 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion .)


state 176

    (60) argumentos -> LPAREN argumento RPAREN .

    POINT           reduce using rule 60 (argumentos -> LPAREN argumento RPAREN .)
    COMMA_DOT       reduce using rule 60 (argumentos -> LPAREN argumento RPAREN .)
    COMA            reduce using rule 60 (argumentos -> LPAREN argumento RPAREN .)
    RPAREN          reduce using rule 60 (argumentos -> LPAREN argumento RPAREN .)


state 177

    (64) argumento -> VARIABLE COMA . argumento
    (62) argumento -> . VARIABLE
    (63) argumento -> . dato
    (64) argumento -> . VARIABLE COMA argumento
    (65) argumento -> . dato COMA argumento
    (66) argumento -> . llamadaAfuncion
    (67) argumento -> . llamadaAfuncionPorAlias
    (68) argumento -> . llamadaAfuncion COMA argumento
    (69) argumento -> . llamadaAfuncionPorAlias COMA argumento
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (55) llamadaAfuncion -> . VARIABLE argumentos
    (56) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (57) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (58) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (59) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion
    (54) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    VARIABLE        shift and go to state 144
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    argumento                      shift and go to state 196
    dato                           shift and go to state 145
    llamadaAfuncion                shift and go to state 146
    llamadaAfuncionPorAlias        shift and go to state 147

state 178

    (65) argumento -> dato COMA . argumento
    (62) argumento -> . VARIABLE
    (63) argumento -> . dato
    (64) argumento -> . VARIABLE COMA argumento
    (65) argumento -> . dato COMA argumento
    (66) argumento -> . llamadaAfuncion
    (67) argumento -> . llamadaAfuncionPorAlias
    (68) argumento -> . llamadaAfuncion COMA argumento
    (69) argumento -> . llamadaAfuncionPorAlias COMA argumento
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (55) llamadaAfuncion -> . VARIABLE argumentos
    (56) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (57) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (58) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (59) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion
    (54) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    VARIABLE        shift and go to state 144
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    dato                           shift and go to state 145
    argumento                      shift and go to state 197
    llamadaAfuncion                shift and go to state 146
    llamadaAfuncionPorAlias        shift and go to state 147

state 179

    (68) argumento -> llamadaAfuncion COMA . argumento
    (62) argumento -> . VARIABLE
    (63) argumento -> . dato
    (64) argumento -> . VARIABLE COMA argumento
    (65) argumento -> . dato COMA argumento
    (66) argumento -> . llamadaAfuncion
    (67) argumento -> . llamadaAfuncionPorAlias
    (68) argumento -> . llamadaAfuncion COMA argumento
    (69) argumento -> . llamadaAfuncionPorAlias COMA argumento
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (55) llamadaAfuncion -> . VARIABLE argumentos
    (56) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (57) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (58) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (59) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion
    (54) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    VARIABLE        shift and go to state 144
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    llamadaAfuncion                shift and go to state 146
    argumento                      shift and go to state 198
    dato                           shift and go to state 145
    llamadaAfuncionPorAlias        shift and go to state 147

state 180

    (69) argumento -> llamadaAfuncionPorAlias COMA . argumento
    (62) argumento -> . VARIABLE
    (63) argumento -> . dato
    (64) argumento -> . VARIABLE COMA argumento
    (65) argumento -> . dato COMA argumento
    (66) argumento -> . llamadaAfuncion
    (67) argumento -> . llamadaAfuncionPorAlias
    (68) argumento -> . llamadaAfuncion COMA argumento
    (69) argumento -> . llamadaAfuncionPorAlias COMA argumento
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (55) llamadaAfuncion -> . VARIABLE argumentos
    (56) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (57) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (58) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (59) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion
    (54) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    VARIABLE        shift and go to state 144
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    llamadaAfuncionPorAlias        shift and go to state 147
    argumento                      shift and go to state 199
    dato                           shift and go to state 145
    llamadaAfuncion                shift and go to state 146

state 181

    (86) atributos -> VARIABLE TWO_POINTS dato .
    (87) atributos -> VARIABLE TWO_POINTS dato . COMA atributos

    RKEY            reduce using rule 86 (atributos -> VARIABLE TWO_POINTS dato .)
    COMA            shift and go to state 200


state 182

    (70) definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion . RKEY

    RKEY            shift and go to state 201


state 183

    (71) definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .

    VARIABLE        reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    STRUCT          reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    FN              reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    HASHMAP         reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    VEC             reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    FOR             reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    LOOP            reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    MATCH           reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    TYPE            reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    STRING          reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    CHAR            reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    DECIMAL         reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    HEXADECIMAL     reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    OCTAL           reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    BINARIO         reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    BOOL            reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    FLOAT           reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    GENERIC         reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    LET             reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    CONST           reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    $end            reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    RKEY            reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    COMA            reduce using rule 71 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)


state 184

    (72) trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE . MORE_THAN

    MORE_THAN       shift and go to state 202


state 185

    (73) datoARetornar -> MINUS MORE_THAN . dato
    (74) datoARetornar -> MINUS MORE_THAN . NOT
    (75) datoARetornar -> MINUS MORE_THAN . tipoDato
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC
    (31) tipoDato -> . TWO_POINTS dato
    (32) tipoDato -> . TWO_POINTS tipoDato
    (33) tipoDato -> . dato LESS_THAN dato MORE_THAN
    (34) tipoDato -> . TWO_POINTS apuntador

    NOT             shift and go to state 204
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34
    TWO_POINTS      shift and go to state 54

    dato                           shift and go to state 203
    tipoDato                       shift and go to state 205

state 186

    (77) parametros -> LPAREN parametro RPAREN datoARetornar .

    LKEY            reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    ASSIGN          reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    VARIABLE        reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    STRUCT          reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    FN              reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    HASHMAP         reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    VEC             reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    FOR             reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    LOOP            reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    MATCH           reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    TYPE            reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    STRING          reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    CHAR            reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    DECIMAL         reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    HEXADECIMAL     reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    OCTAL           reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    BINARIO         reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    BOOL            reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    FLOAT           reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    GENERIC         reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    LET             reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    CONST           reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    $end            reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    RKEY            reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    COMA            reduce using rule 77 (parametros -> LPAREN parametro RPAREN datoARetornar .)


state 187

    (80) parametro -> VARIABLE TWO_POINTS dato .
    (81) parametro -> VARIABLE TWO_POINTS dato . COMA parametro

    RPAREN          reduce using rule 80 (parametro -> VARIABLE TWO_POINTS dato .)
    COMA            shift and go to state 206


state 188

    (82) parametro -> dato COMA parametro .

    RPAREN          reduce using rule 82 (parametro -> dato COMA parametro .)


state 189

    (93) hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .

    VARIABLE        reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    STRUCT          reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    FN              reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    HASHMAP         reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    VEC             reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    FOR             reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    LOOP            reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    MATCH           reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    TYPE            reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    STRING          reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    CHAR            reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    DECIMAL         reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    HEXADECIMAL     reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    OCTAL           reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    BINARIO         reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    BOOL            reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    FLOAT           reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    GENERIC         reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    LET             reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    CONST           reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    $end            reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    RKEY            reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    COMA            reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    COMMA_DOT       reduce using rule 93 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)


state 190

    (92) datos -> dato COMA datos .

    RBRACKET        reduce using rule 92 (datos -> dato COMA datos .)
    RPAREN          reduce using rule 92 (datos -> dato COMA datos .)


state 191

    (89) vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .

    VARIABLE        reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    STRUCT          reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    FN              reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    HASHMAP         reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    VEC             reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    FOR             reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    LOOP            reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    MATCH           reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    TYPE            reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    STRING          reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    CHAR            reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    DECIMAL         reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    HEXADECIMAL     reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    OCTAL           reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    BINARIO         reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    BOOL            reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    FLOAT           reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    GENERIC         reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    LET             reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    CONST           reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    $end            reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    RKEY            reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    COMA            reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    COMMA_DOT       reduce using rule 89 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)


state 192

    (90) vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos . RPAREN

    RPAREN          shift and go to state 207


state 193

    (94) for -> FOR VARIABLE IN rango LKEY cuerpoFuncion . RKEY

    RKEY            shift and go to state 208


state 194

    (95) rango -> DECIMAL POINT POINT . DECIMAL
    (96) rango -> DECIMAL POINT POINT . ASSIGN DECIMAL

    DECIMAL         shift and go to state 209
    ASSIGN          shift and go to state 210


state 195

    (98) content -> dato MOREEQUAL_THAN cuerpoFuncion .
    (99) content -> dato MOREEQUAL_THAN cuerpoFuncion . COMA content

    RKEY            reduce using rule 98 (content -> dato MOREEQUAL_THAN cuerpoFuncion .)
    COMA            shift and go to state 211


state 196

    (64) argumento -> VARIABLE COMA argumento .

    RPAREN          reduce using rule 64 (argumento -> VARIABLE COMA argumento .)


state 197

    (65) argumento -> dato COMA argumento .

    RPAREN          reduce using rule 65 (argumento -> dato COMA argumento .)


state 198

    (68) argumento -> llamadaAfuncion COMA argumento .

    RPAREN          reduce using rule 68 (argumento -> llamadaAfuncion COMA argumento .)


state 199

    (69) argumento -> llamadaAfuncionPorAlias COMA argumento .

    RPAREN          reduce using rule 69 (argumento -> llamadaAfuncionPorAlias COMA argumento .)


state 200

    (87) atributos -> VARIABLE TWO_POINTS dato COMA . atributos
    (86) atributos -> . VARIABLE TWO_POINTS dato
    (87) atributos -> . VARIABLE TWO_POINTS dato COMA atributos

    VARIABLE        shift and go to state 113

    atributos                      shift and go to state 212

state 201

    (70) definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .

    VARIABLE        reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    STRUCT          reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    FN              reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    HASHMAP         reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    VEC             reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    FOR             reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    LOOP            reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    MATCH           reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    TYPE            reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    STRING          reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    CHAR            reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    DECIMAL         reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    HEXADECIMAL     reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    OCTAL           reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    BINARIO         reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    BOOL            reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    FLOAT           reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    GENERIC         reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    LET             reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    CONST           reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    $end            reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    RKEY            reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    COMA            reduce using rule 70 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)


state 202

    (72) trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN .

    LPAREN          reduce using rule 72 (trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN .)


state 203

    (73) datoARetornar -> MINUS MORE_THAN dato .
    (33) tipoDato -> dato . LESS_THAN dato MORE_THAN

    ASSIGN          reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    VARIABLE        reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    STRUCT          reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    FN              reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    HASHMAP         reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    VEC             reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    FOR             reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    LOOP            reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    MATCH           reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    TYPE            reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    STRING          reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    CHAR            reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    DECIMAL         reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    HEXADECIMAL     reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    OCTAL           reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    BINARIO         reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    BOOL            reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    FLOAT           reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    GENERIC         reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    LET             reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    CONST           reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    $end            reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    RKEY            reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    COMA            reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    LKEY            reduce using rule 73 (datoARetornar -> MINUS MORE_THAN dato .)
    LESS_THAN       shift and go to state 98


state 204

    (74) datoARetornar -> MINUS MORE_THAN NOT .

    ASSIGN          reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    VARIABLE        reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    STRUCT          reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    FN              reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    HASHMAP         reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    VEC             reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    FOR             reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    LOOP            reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    MATCH           reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    TYPE            reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    STRING          reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    CHAR            reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    DECIMAL         reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    HEXADECIMAL     reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    OCTAL           reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    BINARIO         reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    BOOL            reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    FLOAT           reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    GENERIC         reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    LET             reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    CONST           reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    $end            reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    RKEY            reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    COMA            reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)
    LKEY            reduce using rule 74 (datoARetornar -> MINUS MORE_THAN NOT .)


state 205

    (75) datoARetornar -> MINUS MORE_THAN tipoDato .

    ASSIGN          reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    VARIABLE        reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    STRUCT          reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    FN              reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    HASHMAP         reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    VEC             reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    FOR             reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    LOOP            reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    MATCH           reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    TYPE            reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    STRING          reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    CHAR            reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    DECIMAL         reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    HEXADECIMAL     reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    OCTAL           reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    BINARIO         reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    BOOL            reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    FLOAT           reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    GENERIC         reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    LET             reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    CONST           reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    $end            reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    RKEY            reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    COMA            reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)
    LKEY            reduce using rule 75 (datoARetornar -> MINUS MORE_THAN tipoDato .)


state 206

    (81) parametro -> VARIABLE TWO_POINTS dato COMA . parametro
    (80) parametro -> . VARIABLE TWO_POINTS dato
    (81) parametro -> . VARIABLE TWO_POINTS dato COMA parametro
    (82) parametro -> . dato COMA parametro
    (83) parametro -> . dato
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC

    VARIABLE        shift and go to state 120
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    dato                           shift and go to state 121
    parametro                      shift and go to state 213

state 207

    (90) vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .

    VARIABLE        reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    STRUCT          reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    FN              reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    HASHMAP         reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    VEC             reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    FOR             reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    LOOP            reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    MATCH           reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    TYPE            reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    STRING          reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    CHAR            reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    DECIMAL         reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    HEXADECIMAL     reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    OCTAL           reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    BINARIO         reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    BOOL            reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    FLOAT           reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    GENERIC         reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    LET             reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    CONST           reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    $end            reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    RKEY            reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    COMA            reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)
    COMMA_DOT       reduce using rule 90 (vector -> VEC TWO_POINTS TWO_POINTS NEW LPAREN datos RPAREN .)


state 208

    (94) for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .

    VARIABLE        reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    STRUCT          reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    FN              reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    HASHMAP         reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    VEC             reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    FOR             reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    LOOP            reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    MATCH           reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    TYPE            reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    STRING          reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    CHAR            reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    DECIMAL         reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    HEXADECIMAL     reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    OCTAL           reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    BINARIO         reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    BOOL            reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    FLOAT           reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    GENERIC         reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    LET             reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    CONST           reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    $end            reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    RKEY            reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    COMA            reduce using rule 94 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)


state 209

    (95) rango -> DECIMAL POINT POINT DECIMAL .

    LKEY            reduce using rule 95 (rango -> DECIMAL POINT POINT DECIMAL .)


state 210

    (96) rango -> DECIMAL POINT POINT ASSIGN . DECIMAL

    DECIMAL         shift and go to state 214


state 211

    (99) content -> dato MOREEQUAL_THAN cuerpoFuncion COMA . content
    (98) content -> . dato MOREEQUAL_THAN cuerpoFuncion
    (99) content -> . dato MOREEQUAL_THAN cuerpoFuncion COMA content
    (35) dato -> . STRING
    (36) dato -> . CHAR
    (37) dato -> . DECIMAL
    (38) dato -> . HEXADECIMAL
    (39) dato -> . OCTAL
    (40) dato -> . BINARIO
    (41) dato -> . BOOL
    (42) dato -> . FLOAT
    (43) dato -> . VEC
    (44) dato -> . GENERIC

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 56
    GENERIC         shift and go to state 34

    dato                           shift and go to state 130
    content                        shift and go to state 215

state 212

    (87) atributos -> VARIABLE TWO_POINTS dato COMA atributos .

    RKEY            reduce using rule 87 (atributos -> VARIABLE TWO_POINTS dato COMA atributos .)


state 213

    (81) parametro -> VARIABLE TWO_POINTS dato COMA parametro .

    RPAREN          reduce using rule 81 (parametro -> VARIABLE TWO_POINTS dato COMA parametro .)


state 214

    (96) rango -> DECIMAL POINT POINT ASSIGN DECIMAL .

    LKEY            reduce using rule 96 (rango -> DECIMAL POINT POINT ASSIGN DECIMAL .)


state 215

    (99) content -> dato MOREEQUAL_THAN cuerpoFuncion COMA content .

    RKEY            reduce using rule 99 (content -> dato MOREEQUAL_THAN cuerpoFuncion COMA content .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for STRING in state 25 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 25 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 25 resolved as shift
WARNING: shift/reduce conflict for HEXADECIMAL in state 25 resolved as shift
WARNING: shift/reduce conflict for OCTAL in state 25 resolved as shift
WARNING: shift/reduce conflict for BINARIO in state 25 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 25 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 25 resolved as shift
WARNING: shift/reduce conflict for VEC in state 25 resolved as shift
WARNING: shift/reduce conflict for GENERIC in state 25 resolved as shift
