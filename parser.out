Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ALIGNOF
    AND
    AND_BIT
    AS
    BECOME
    BOX
    BREAK
    BYTE
    CONTINUE
    CRATE
    DIVIDE
    DO
    ELSE
    ENUM
    EQUALS
    EXTERN
    FINAL
    FN
    FOR
    HASHMAP
    IF
    IMPL
    IN
    INTEGER
    LBRACKET
    LEFT_MAYUS
    LESSEQUAL_THAN
    LOOP
    MACRO
    MATCH
    MATH_REMINDER
    MINUS
    MOD
    MOREEQUAL_THAN
    MOV
    NEW
    NOT
    NOT_EQUALS
    OFFSETOF
    OR
    OR_BIT
    OVERRIDE
    PLUS
    PRINTLN
    PRIV
    PROC
    PUB
    PURE
    QUO_MARKS
    RBRACKET
    REF
    RETURN
    RIGHT_MAYUS
    SELF
    SIZEOF
    STATIC
    SUPER
    TIMES
    TRAIT
    TYPE
    TYPEOF
    UNSAFE
    UNSIZED
    USE
    VIRTUAL
    WHERE
    WHILE
    XOR_BIT
    YIELD

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> asignacion
Rule 2     cuerpo -> definicion
Rule 3     cuerpo -> struct
Rule 4     cuerpo -> varEnVar
Rule 5     asignacion -> definicion ASSIGN valorAsignado COMMA_DOT
Rule 6     asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT
Rule 7     asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT
Rule 8     varEnVar -> VARIABLE POINT VARIABLE
Rule 9     definicion -> creacion
Rule 10    definicion -> creacion COMMA_DOT
Rule 11    definicion -> creacion tipoDato
Rule 12    creacion -> LET MUT VARIABLE
Rule 13    creacion -> LET VARIABLE
Rule 14    creacion -> CONST VARIABLE
Rule 15    tipoDato -> TWO_POINTS dato
Rule 16    tipoDato -> TWO_POINTS dato tipoDato
Rule 17    tipoDato -> LESS_THAN dato MORE_THAN
Rule 18    dato -> STRING
Rule 19    dato -> CHAR
Rule 20    dato -> DECIMAL
Rule 21    dato -> HEXADECIMAL
Rule 22    dato -> OCTAL
Rule 23    dato -> BINARIO
Rule 24    dato -> BOOL
Rule 25    dato -> FLOAT
Rule 26    dato -> VEC
Rule 27    dato -> GENERIC
Rule 28    valorAsignado -> dato
Rule 29    valorAsignado -> llamadaAfuncion
Rule 30    valorAsignado -> llamadaAfuncionPorAlias
Rule 31    llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion
Rule 32    llamadaAfuncion -> VARIABLE argumentos
Rule 33    llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion
Rule 34    llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos
Rule 35    argumentos -> LPAREN argumento RPAREN
Rule 36    argumentos -> LPAREN RPAREN
Rule 37    argumento -> VARIABLE
Rule 38    argumento -> dato
Rule 39    argumento -> VARIABLE COMA argumento
Rule 40    argumento -> dato COMA argumento
Rule 41    argumento -> llamadaAfuncion
Rule 42    argumento -> llamadaAfuncionPorAlias
Rule 43    argumento -> llamadaAfuncion COMA argumento
Rule 44    argumento -> llamadaAfuncionPorAlias COMA argumento
Rule 45    struct -> STRUCT VARIABLE LKEY atributos RKEY
Rule 46    atributos -> VARIABLE TWO_POINTS dato
Rule 47    atributos -> VARIABLE TWO_POINTS dato COMA atributos

Terminals, with rules where they appear

ABSTRACT             : 
ALIGNOF              : 
AND                  : 
AND_BIT              : 
AS                   : 
ASSIGN               : 5 6 7
BECOME               : 
BINARIO              : 23
BOOL                 : 24
BOX                  : 
BREAK                : 
BYTE                 : 
CHAR                 : 19
COMA                 : 39 40 43 44 47
COMMA_DOT            : 5 6 7 10
CONST                : 14
CONTINUE             : 
CRATE                : 
DECIMAL              : 20
DIVIDE               : 
DO                   : 
ELSE                 : 
ENUM                 : 
EQUALS               : 
EXTERN               : 
FINAL                : 
FLOAT                : 25
FN                   : 
FOR                  : 
GENERIC              : 27
HASHMAP              : 
HEXADECIMAL          : 21
IF                   : 
IMPL                 : 
IN                   : 
INTEGER              : 
LBRACKET             : 
LEFT_MAYUS           : 
LESSEQUAL_THAN       : 
LESS_THAN            : 17
LET                  : 12 13
LKEY                 : 45
LOOP                 : 
LPAREN               : 35 36
MACRO                : 
MATCH                : 
MATH_REMINDER        : 
MINUS                : 
MOD                  : 
MOREEQUAL_THAN       : 
MORE_THAN            : 17
MOV                  : 
MUT                  : 12
NEW                  : 
NOT                  : 
NOT_EQUALS           : 
OCTAL                : 22
OFFSETOF             : 
OR                   : 
OR_BIT               : 
OVERRIDE             : 
PLUS                 : 
POINT                : 8 31 33
PRINTLN              : 
PRIV                 : 
PROC                 : 
PUB                  : 
PURE                 : 
QUO_MARKS            : 
RBRACKET             : 
REF                  : 
RETURN               : 
RIGHT_MAYUS          : 
RKEY                 : 45
RPAREN               : 35 36
SELF                 : 
SIZEOF               : 
STATIC               : 
STRING               : 18
STRUCT               : 45
SUPER                : 
TIMES                : 
TRAIT                : 
TWO_POINTS           : 15 16 34 34 46 47
TYPE                 : 
TYPEOF               : 
UNSAFE               : 
UNSIZED              : 
USE                  : 
VARIABLE             : 6 7 8 8 12 13 14 31 32 33 34 37 39 45 46 47
VEC                  : 26
VIRTUAL              : 
WHERE                : 
WHILE                : 
XOR_BIT              : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

argumento            : 35 39 40 43 44
argumentos           : 32 33 34
asignacion           : 1
atributos            : 45 47
creacion             : 9 10 11
cuerpo               : 0
dato                 : 15 16 17 28 38 40 46 47
definicion           : 2 5
llamadaAfuncion      : 29 31 33 41 43
llamadaAfuncionPorAlias : 30 42 44
struct               : 3
tipoDato             : 11 16
valorAsignado        : 5 6
varEnVar             : 4 7

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . asignacion
    (2) cuerpo -> . definicion
    (3) cuerpo -> . struct
    (4) cuerpo -> . varEnVar
    (5) asignacion -> . definicion ASSIGN valorAsignado COMMA_DOT
    (6) asignacion -> . VARIABLE ASSIGN valorAsignado COMMA_DOT
    (7) asignacion -> . VARIABLE ASSIGN varEnVar COMMA_DOT
    (9) definicion -> . creacion
    (10) definicion -> . creacion COMMA_DOT
    (11) definicion -> . creacion tipoDato
    (45) struct -> . STRUCT VARIABLE LKEY atributos RKEY
    (8) varEnVar -> . VARIABLE POINT VARIABLE
    (12) creacion -> . LET MUT VARIABLE
    (13) creacion -> . LET VARIABLE
    (14) creacion -> . CONST VARIABLE

    VARIABLE        shift and go to state 6
    STRUCT          shift and go to state 8
    LET             shift and go to state 9
    CONST           shift and go to state 10

    cuerpo                         shift and go to state 1
    asignacion                     shift and go to state 2
    definicion                     shift and go to state 3
    struct                         shift and go to state 4
    varEnVar                       shift and go to state 5
    creacion                       shift and go to state 7

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> asignacion .

    $end            reduce using rule 1 (cuerpo -> asignacion .)


state 3

    (2) cuerpo -> definicion .
    (5) asignacion -> definicion . ASSIGN valorAsignado COMMA_DOT

    $end            reduce using rule 2 (cuerpo -> definicion .)
    ASSIGN          shift and go to state 11


state 4

    (3) cuerpo -> struct .

    $end            reduce using rule 3 (cuerpo -> struct .)


state 5

    (4) cuerpo -> varEnVar .

    $end            reduce using rule 4 (cuerpo -> varEnVar .)


state 6

    (6) asignacion -> VARIABLE . ASSIGN valorAsignado COMMA_DOT
    (7) asignacion -> VARIABLE . ASSIGN varEnVar COMMA_DOT
    (8) varEnVar -> VARIABLE . POINT VARIABLE

    ASSIGN          shift and go to state 12
    POINT           shift and go to state 13


state 7

    (9) definicion -> creacion .
    (10) definicion -> creacion . COMMA_DOT
    (11) definicion -> creacion . tipoDato
    (15) tipoDato -> . TWO_POINTS dato
    (16) tipoDato -> . TWO_POINTS dato tipoDato
    (17) tipoDato -> . LESS_THAN dato MORE_THAN

    ASSIGN          reduce using rule 9 (definicion -> creacion .)
    $end            reduce using rule 9 (definicion -> creacion .)
    COMMA_DOT       shift and go to state 14
    TWO_POINTS      shift and go to state 16
    LESS_THAN       shift and go to state 17

    tipoDato                       shift and go to state 15

state 8

    (45) struct -> STRUCT . VARIABLE LKEY atributos RKEY

    VARIABLE        shift and go to state 18


state 9

    (12) creacion -> LET . MUT VARIABLE
    (13) creacion -> LET . VARIABLE

    MUT             shift and go to state 19
    VARIABLE        shift and go to state 20


state 10

    (14) creacion -> CONST . VARIABLE

    VARIABLE        shift and go to state 21


state 11

    (5) asignacion -> definicion ASSIGN . valorAsignado COMMA_DOT
    (28) valorAsignado -> . dato
    (29) valorAsignado -> . llamadaAfuncion
    (30) valorAsignado -> . llamadaAfuncionPorAlias
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . DECIMAL
    (21) dato -> . HEXADECIMAL
    (22) dato -> . OCTAL
    (23) dato -> . BINARIO
    (24) dato -> . BOOL
    (25) dato -> . FLOAT
    (26) dato -> . VEC
    (27) dato -> . GENERIC
    (32) llamadaAfuncion -> . VARIABLE argumentos
    (33) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (34) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (31) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 34
    GENERIC         shift and go to state 35
    VARIABLE        shift and go to state 36

    valorAsignado                  shift and go to state 22
    dato                           shift and go to state 23
    llamadaAfuncion                shift and go to state 24
    llamadaAfuncionPorAlias        shift and go to state 25

state 12

    (6) asignacion -> VARIABLE ASSIGN . valorAsignado COMMA_DOT
    (7) asignacion -> VARIABLE ASSIGN . varEnVar COMMA_DOT
    (28) valorAsignado -> . dato
    (29) valorAsignado -> . llamadaAfuncion
    (30) valorAsignado -> . llamadaAfuncionPorAlias
    (8) varEnVar -> . VARIABLE POINT VARIABLE
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . DECIMAL
    (21) dato -> . HEXADECIMAL
    (22) dato -> . OCTAL
    (23) dato -> . BINARIO
    (24) dato -> . BOOL
    (25) dato -> . FLOAT
    (26) dato -> . VEC
    (27) dato -> . GENERIC
    (32) llamadaAfuncion -> . VARIABLE argumentos
    (33) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (34) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (31) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    VARIABLE        shift and go to state 37
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 34
    GENERIC         shift and go to state 35

    valorAsignado                  shift and go to state 38
    varEnVar                       shift and go to state 39
    dato                           shift and go to state 23
    llamadaAfuncion                shift and go to state 24
    llamadaAfuncionPorAlias        shift and go to state 25

state 13

    (8) varEnVar -> VARIABLE POINT . VARIABLE

    VARIABLE        shift and go to state 40


state 14

    (10) definicion -> creacion COMMA_DOT .

    ASSIGN          reduce using rule 10 (definicion -> creacion COMMA_DOT .)
    $end            reduce using rule 10 (definicion -> creacion COMMA_DOT .)


state 15

    (11) definicion -> creacion tipoDato .

    ASSIGN          reduce using rule 11 (definicion -> creacion tipoDato .)
    $end            reduce using rule 11 (definicion -> creacion tipoDato .)


state 16

    (15) tipoDato -> TWO_POINTS . dato
    (16) tipoDato -> TWO_POINTS . dato tipoDato
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . DECIMAL
    (21) dato -> . HEXADECIMAL
    (22) dato -> . OCTAL
    (23) dato -> . BINARIO
    (24) dato -> . BOOL
    (25) dato -> . FLOAT
    (26) dato -> . VEC
    (27) dato -> . GENERIC

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 34
    GENERIC         shift and go to state 35

    dato                           shift and go to state 41

state 17

    (17) tipoDato -> LESS_THAN . dato MORE_THAN
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . DECIMAL
    (21) dato -> . HEXADECIMAL
    (22) dato -> . OCTAL
    (23) dato -> . BINARIO
    (24) dato -> . BOOL
    (25) dato -> . FLOAT
    (26) dato -> . VEC
    (27) dato -> . GENERIC

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 34
    GENERIC         shift and go to state 35

    dato                           shift and go to state 42

state 18

    (45) struct -> STRUCT VARIABLE . LKEY atributos RKEY

    LKEY            shift and go to state 43


state 19

    (12) creacion -> LET MUT . VARIABLE

    VARIABLE        shift and go to state 44


state 20

    (13) creacion -> LET VARIABLE .

    COMMA_DOT       reduce using rule 13 (creacion -> LET VARIABLE .)
    TWO_POINTS      reduce using rule 13 (creacion -> LET VARIABLE .)
    LESS_THAN       reduce using rule 13 (creacion -> LET VARIABLE .)
    ASSIGN          reduce using rule 13 (creacion -> LET VARIABLE .)
    $end            reduce using rule 13 (creacion -> LET VARIABLE .)


state 21

    (14) creacion -> CONST VARIABLE .

    COMMA_DOT       reduce using rule 14 (creacion -> CONST VARIABLE .)
    TWO_POINTS      reduce using rule 14 (creacion -> CONST VARIABLE .)
    LESS_THAN       reduce using rule 14 (creacion -> CONST VARIABLE .)
    ASSIGN          reduce using rule 14 (creacion -> CONST VARIABLE .)
    $end            reduce using rule 14 (creacion -> CONST VARIABLE .)


state 22

    (5) asignacion -> definicion ASSIGN valorAsignado . COMMA_DOT

    COMMA_DOT       shift and go to state 45


state 23

    (28) valorAsignado -> dato .

    COMMA_DOT       reduce using rule 28 (valorAsignado -> dato .)


state 24

    (29) valorAsignado -> llamadaAfuncion .

    COMMA_DOT       reduce using rule 29 (valorAsignado -> llamadaAfuncion .)


state 25

    (30) valorAsignado -> llamadaAfuncionPorAlias .

    COMMA_DOT       reduce using rule 30 (valorAsignado -> llamadaAfuncionPorAlias .)


state 26

    (18) dato -> STRING .

    COMMA_DOT       reduce using rule 18 (dato -> STRING .)
    TWO_POINTS      reduce using rule 18 (dato -> STRING .)
    LESS_THAN       reduce using rule 18 (dato -> STRING .)
    ASSIGN          reduce using rule 18 (dato -> STRING .)
    $end            reduce using rule 18 (dato -> STRING .)
    MORE_THAN       reduce using rule 18 (dato -> STRING .)
    COMA            reduce using rule 18 (dato -> STRING .)
    RPAREN          reduce using rule 18 (dato -> STRING .)
    RKEY            reduce using rule 18 (dato -> STRING .)


state 27

    (19) dato -> CHAR .

    COMMA_DOT       reduce using rule 19 (dato -> CHAR .)
    TWO_POINTS      reduce using rule 19 (dato -> CHAR .)
    LESS_THAN       reduce using rule 19 (dato -> CHAR .)
    ASSIGN          reduce using rule 19 (dato -> CHAR .)
    $end            reduce using rule 19 (dato -> CHAR .)
    MORE_THAN       reduce using rule 19 (dato -> CHAR .)
    COMA            reduce using rule 19 (dato -> CHAR .)
    RPAREN          reduce using rule 19 (dato -> CHAR .)
    RKEY            reduce using rule 19 (dato -> CHAR .)


state 28

    (20) dato -> DECIMAL .

    COMMA_DOT       reduce using rule 20 (dato -> DECIMAL .)
    TWO_POINTS      reduce using rule 20 (dato -> DECIMAL .)
    LESS_THAN       reduce using rule 20 (dato -> DECIMAL .)
    ASSIGN          reduce using rule 20 (dato -> DECIMAL .)
    $end            reduce using rule 20 (dato -> DECIMAL .)
    MORE_THAN       reduce using rule 20 (dato -> DECIMAL .)
    COMA            reduce using rule 20 (dato -> DECIMAL .)
    RPAREN          reduce using rule 20 (dato -> DECIMAL .)
    RKEY            reduce using rule 20 (dato -> DECIMAL .)


state 29

    (21) dato -> HEXADECIMAL .

    COMMA_DOT       reduce using rule 21 (dato -> HEXADECIMAL .)
    TWO_POINTS      reduce using rule 21 (dato -> HEXADECIMAL .)
    LESS_THAN       reduce using rule 21 (dato -> HEXADECIMAL .)
    ASSIGN          reduce using rule 21 (dato -> HEXADECIMAL .)
    $end            reduce using rule 21 (dato -> HEXADECIMAL .)
    MORE_THAN       reduce using rule 21 (dato -> HEXADECIMAL .)
    COMA            reduce using rule 21 (dato -> HEXADECIMAL .)
    RPAREN          reduce using rule 21 (dato -> HEXADECIMAL .)
    RKEY            reduce using rule 21 (dato -> HEXADECIMAL .)


state 30

    (22) dato -> OCTAL .

    COMMA_DOT       reduce using rule 22 (dato -> OCTAL .)
    TWO_POINTS      reduce using rule 22 (dato -> OCTAL .)
    LESS_THAN       reduce using rule 22 (dato -> OCTAL .)
    ASSIGN          reduce using rule 22 (dato -> OCTAL .)
    $end            reduce using rule 22 (dato -> OCTAL .)
    MORE_THAN       reduce using rule 22 (dato -> OCTAL .)
    COMA            reduce using rule 22 (dato -> OCTAL .)
    RPAREN          reduce using rule 22 (dato -> OCTAL .)
    RKEY            reduce using rule 22 (dato -> OCTAL .)


state 31

    (23) dato -> BINARIO .

    COMMA_DOT       reduce using rule 23 (dato -> BINARIO .)
    TWO_POINTS      reduce using rule 23 (dato -> BINARIO .)
    LESS_THAN       reduce using rule 23 (dato -> BINARIO .)
    ASSIGN          reduce using rule 23 (dato -> BINARIO .)
    $end            reduce using rule 23 (dato -> BINARIO .)
    MORE_THAN       reduce using rule 23 (dato -> BINARIO .)
    COMA            reduce using rule 23 (dato -> BINARIO .)
    RPAREN          reduce using rule 23 (dato -> BINARIO .)
    RKEY            reduce using rule 23 (dato -> BINARIO .)


state 32

    (24) dato -> BOOL .

    COMMA_DOT       reduce using rule 24 (dato -> BOOL .)
    TWO_POINTS      reduce using rule 24 (dato -> BOOL .)
    LESS_THAN       reduce using rule 24 (dato -> BOOL .)
    ASSIGN          reduce using rule 24 (dato -> BOOL .)
    $end            reduce using rule 24 (dato -> BOOL .)
    MORE_THAN       reduce using rule 24 (dato -> BOOL .)
    COMA            reduce using rule 24 (dato -> BOOL .)
    RPAREN          reduce using rule 24 (dato -> BOOL .)
    RKEY            reduce using rule 24 (dato -> BOOL .)


state 33

    (25) dato -> FLOAT .

    COMMA_DOT       reduce using rule 25 (dato -> FLOAT .)
    TWO_POINTS      reduce using rule 25 (dato -> FLOAT .)
    LESS_THAN       reduce using rule 25 (dato -> FLOAT .)
    ASSIGN          reduce using rule 25 (dato -> FLOAT .)
    $end            reduce using rule 25 (dato -> FLOAT .)
    MORE_THAN       reduce using rule 25 (dato -> FLOAT .)
    COMA            reduce using rule 25 (dato -> FLOAT .)
    RPAREN          reduce using rule 25 (dato -> FLOAT .)
    RKEY            reduce using rule 25 (dato -> FLOAT .)


state 34

    (26) dato -> VEC .

    COMMA_DOT       reduce using rule 26 (dato -> VEC .)
    TWO_POINTS      reduce using rule 26 (dato -> VEC .)
    LESS_THAN       reduce using rule 26 (dato -> VEC .)
    ASSIGN          reduce using rule 26 (dato -> VEC .)
    $end            reduce using rule 26 (dato -> VEC .)
    MORE_THAN       reduce using rule 26 (dato -> VEC .)
    COMA            reduce using rule 26 (dato -> VEC .)
    RPAREN          reduce using rule 26 (dato -> VEC .)
    RKEY            reduce using rule 26 (dato -> VEC .)


state 35

    (27) dato -> GENERIC .

    COMMA_DOT       reduce using rule 27 (dato -> GENERIC .)
    TWO_POINTS      reduce using rule 27 (dato -> GENERIC .)
    LESS_THAN       reduce using rule 27 (dato -> GENERIC .)
    ASSIGN          reduce using rule 27 (dato -> GENERIC .)
    $end            reduce using rule 27 (dato -> GENERIC .)
    MORE_THAN       reduce using rule 27 (dato -> GENERIC .)
    COMA            reduce using rule 27 (dato -> GENERIC .)
    RPAREN          reduce using rule 27 (dato -> GENERIC .)
    RKEY            reduce using rule 27 (dato -> GENERIC .)


state 36

    (32) llamadaAfuncion -> VARIABLE . argumentos
    (33) llamadaAfuncion -> VARIABLE . argumentos POINT llamadaAfuncion
    (34) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS argumentos
    (31) llamadaAfuncionPorAlias -> VARIABLE . POINT llamadaAfuncion
    (35) argumentos -> . LPAREN argumento RPAREN
    (36) argumentos -> . LPAREN RPAREN

    TWO_POINTS      shift and go to state 48
    POINT           shift and go to state 47
    LPAREN          shift and go to state 49

    argumentos                     shift and go to state 46

state 37

    (8) varEnVar -> VARIABLE . POINT VARIABLE
    (32) llamadaAfuncion -> VARIABLE . argumentos
    (33) llamadaAfuncion -> VARIABLE . argumentos POINT llamadaAfuncion
    (34) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS argumentos
    (31) llamadaAfuncionPorAlias -> VARIABLE . POINT llamadaAfuncion
    (35) argumentos -> . LPAREN argumento RPAREN
    (36) argumentos -> . LPAREN RPAREN

    POINT           shift and go to state 50
    TWO_POINTS      shift and go to state 48
    LPAREN          shift and go to state 49

    argumentos                     shift and go to state 46

state 38

    (6) asignacion -> VARIABLE ASSIGN valorAsignado . COMMA_DOT

    COMMA_DOT       shift and go to state 51


state 39

    (7) asignacion -> VARIABLE ASSIGN varEnVar . COMMA_DOT

    COMMA_DOT       shift and go to state 52


state 40

    (8) varEnVar -> VARIABLE POINT VARIABLE .

    $end            reduce using rule 8 (varEnVar -> VARIABLE POINT VARIABLE .)


state 41

    (15) tipoDato -> TWO_POINTS dato .
    (16) tipoDato -> TWO_POINTS dato . tipoDato
    (15) tipoDato -> . TWO_POINTS dato
    (16) tipoDato -> . TWO_POINTS dato tipoDato
    (17) tipoDato -> . LESS_THAN dato MORE_THAN

    ASSIGN          reduce using rule 15 (tipoDato -> TWO_POINTS dato .)
    $end            reduce using rule 15 (tipoDato -> TWO_POINTS dato .)
    TWO_POINTS      shift and go to state 16
    LESS_THAN       shift and go to state 17

    tipoDato                       shift and go to state 53

state 42

    (17) tipoDato -> LESS_THAN dato . MORE_THAN

    MORE_THAN       shift and go to state 54


state 43

    (45) struct -> STRUCT VARIABLE LKEY . atributos RKEY
    (46) atributos -> . VARIABLE TWO_POINTS dato
    (47) atributos -> . VARIABLE TWO_POINTS dato COMA atributos

    VARIABLE        shift and go to state 55

    atributos                      shift and go to state 56

state 44

    (12) creacion -> LET MUT VARIABLE .

    COMMA_DOT       reduce using rule 12 (creacion -> LET MUT VARIABLE .)
    TWO_POINTS      reduce using rule 12 (creacion -> LET MUT VARIABLE .)
    LESS_THAN       reduce using rule 12 (creacion -> LET MUT VARIABLE .)
    ASSIGN          reduce using rule 12 (creacion -> LET MUT VARIABLE .)
    $end            reduce using rule 12 (creacion -> LET MUT VARIABLE .)


state 45

    (5) asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .

    $end            reduce using rule 5 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)


state 46

    (32) llamadaAfuncion -> VARIABLE argumentos .
    (33) llamadaAfuncion -> VARIABLE argumentos . POINT llamadaAfuncion

    COMMA_DOT       reduce using rule 32 (llamadaAfuncion -> VARIABLE argumentos .)
    COMA            reduce using rule 32 (llamadaAfuncion -> VARIABLE argumentos .)
    RPAREN          reduce using rule 32 (llamadaAfuncion -> VARIABLE argumentos .)
    POINT           shift and go to state 57


state 47

    (31) llamadaAfuncionPorAlias -> VARIABLE POINT . llamadaAfuncion
    (32) llamadaAfuncion -> . VARIABLE argumentos
    (33) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (34) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos

    VARIABLE        shift and go to state 58

    llamadaAfuncion                shift and go to state 59

state 48

    (34) llamadaAfuncion -> VARIABLE TWO_POINTS . TWO_POINTS argumentos

    TWO_POINTS      shift and go to state 60


state 49

    (35) argumentos -> LPAREN . argumento RPAREN
    (36) argumentos -> LPAREN . RPAREN
    (37) argumento -> . VARIABLE
    (38) argumento -> . dato
    (39) argumento -> . VARIABLE COMA argumento
    (40) argumento -> . dato COMA argumento
    (41) argumento -> . llamadaAfuncion
    (42) argumento -> . llamadaAfuncionPorAlias
    (43) argumento -> . llamadaAfuncion COMA argumento
    (44) argumento -> . llamadaAfuncionPorAlias COMA argumento
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . DECIMAL
    (21) dato -> . HEXADECIMAL
    (22) dato -> . OCTAL
    (23) dato -> . BINARIO
    (24) dato -> . BOOL
    (25) dato -> . FLOAT
    (26) dato -> . VEC
    (27) dato -> . GENERIC
    (32) llamadaAfuncion -> . VARIABLE argumentos
    (33) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (34) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (31) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    RPAREN          shift and go to state 62
    VARIABLE        shift and go to state 63
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 34
    GENERIC         shift and go to state 35

    argumento                      shift and go to state 61
    dato                           shift and go to state 64
    llamadaAfuncion                shift and go to state 65
    llamadaAfuncionPorAlias        shift and go to state 66

state 50

    (8) varEnVar -> VARIABLE POINT . VARIABLE
    (31) llamadaAfuncionPorAlias -> VARIABLE POINT . llamadaAfuncion
    (32) llamadaAfuncion -> . VARIABLE argumentos
    (33) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (34) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos

    VARIABLE        shift and go to state 67

    llamadaAfuncion                shift and go to state 59

state 51

    (6) asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .

    $end            reduce using rule 6 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)


state 52

    (7) asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .

    $end            reduce using rule 7 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)


state 53

    (16) tipoDato -> TWO_POINTS dato tipoDato .

    ASSIGN          reduce using rule 16 (tipoDato -> TWO_POINTS dato tipoDato .)
    $end            reduce using rule 16 (tipoDato -> TWO_POINTS dato tipoDato .)


state 54

    (17) tipoDato -> LESS_THAN dato MORE_THAN .

    ASSIGN          reduce using rule 17 (tipoDato -> LESS_THAN dato MORE_THAN .)
    $end            reduce using rule 17 (tipoDato -> LESS_THAN dato MORE_THAN .)


state 55

    (46) atributos -> VARIABLE . TWO_POINTS dato
    (47) atributos -> VARIABLE . TWO_POINTS dato COMA atributos

    TWO_POINTS      shift and go to state 68


state 56

    (45) struct -> STRUCT VARIABLE LKEY atributos . RKEY

    RKEY            shift and go to state 69


state 57

    (33) llamadaAfuncion -> VARIABLE argumentos POINT . llamadaAfuncion
    (32) llamadaAfuncion -> . VARIABLE argumentos
    (33) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (34) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos

    VARIABLE        shift and go to state 58

    llamadaAfuncion                shift and go to state 70

state 58

    (32) llamadaAfuncion -> VARIABLE . argumentos
    (33) llamadaAfuncion -> VARIABLE . argumentos POINT llamadaAfuncion
    (34) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS argumentos
    (35) argumentos -> . LPAREN argumento RPAREN
    (36) argumentos -> . LPAREN RPAREN

    TWO_POINTS      shift and go to state 48
    LPAREN          shift and go to state 49

    argumentos                     shift and go to state 46

state 59

    (31) llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion .

    COMMA_DOT       reduce using rule 31 (llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion .)
    COMA            reduce using rule 31 (llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion .)
    RPAREN          reduce using rule 31 (llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion .)


state 60

    (34) llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS . argumentos
    (35) argumentos -> . LPAREN argumento RPAREN
    (36) argumentos -> . LPAREN RPAREN

    LPAREN          shift and go to state 49

    argumentos                     shift and go to state 71

state 61

    (35) argumentos -> LPAREN argumento . RPAREN

    RPAREN          shift and go to state 72


state 62

    (36) argumentos -> LPAREN RPAREN .

    POINT           reduce using rule 36 (argumentos -> LPAREN RPAREN .)
    COMMA_DOT       reduce using rule 36 (argumentos -> LPAREN RPAREN .)
    COMA            reduce using rule 36 (argumentos -> LPAREN RPAREN .)
    RPAREN          reduce using rule 36 (argumentos -> LPAREN RPAREN .)


state 63

    (37) argumento -> VARIABLE .
    (39) argumento -> VARIABLE . COMA argumento
    (32) llamadaAfuncion -> VARIABLE . argumentos
    (33) llamadaAfuncion -> VARIABLE . argumentos POINT llamadaAfuncion
    (34) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS argumentos
    (31) llamadaAfuncionPorAlias -> VARIABLE . POINT llamadaAfuncion
    (35) argumentos -> . LPAREN argumento RPAREN
    (36) argumentos -> . LPAREN RPAREN

    RPAREN          reduce using rule 37 (argumento -> VARIABLE .)
    COMA            shift and go to state 73
    TWO_POINTS      shift and go to state 48
    POINT           shift and go to state 47
    LPAREN          shift and go to state 49

    argumentos                     shift and go to state 46

state 64

    (38) argumento -> dato .
    (40) argumento -> dato . COMA argumento

    RPAREN          reduce using rule 38 (argumento -> dato .)
    COMA            shift and go to state 74


state 65

    (41) argumento -> llamadaAfuncion .
    (43) argumento -> llamadaAfuncion . COMA argumento

    RPAREN          reduce using rule 41 (argumento -> llamadaAfuncion .)
    COMA            shift and go to state 75


state 66

    (42) argumento -> llamadaAfuncionPorAlias .
    (44) argumento -> llamadaAfuncionPorAlias . COMA argumento

    RPAREN          reduce using rule 42 (argumento -> llamadaAfuncionPorAlias .)
    COMA            shift and go to state 76


state 67

    (8) varEnVar -> VARIABLE POINT VARIABLE .
    (32) llamadaAfuncion -> VARIABLE . argumentos
    (33) llamadaAfuncion -> VARIABLE . argumentos POINT llamadaAfuncion
    (34) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS argumentos
    (35) argumentos -> . LPAREN argumento RPAREN
    (36) argumentos -> . LPAREN RPAREN

    COMMA_DOT       reduce using rule 8 (varEnVar -> VARIABLE POINT VARIABLE .)
    TWO_POINTS      shift and go to state 48
    LPAREN          shift and go to state 49

    argumentos                     shift and go to state 46

state 68

    (46) atributos -> VARIABLE TWO_POINTS . dato
    (47) atributos -> VARIABLE TWO_POINTS . dato COMA atributos
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . DECIMAL
    (21) dato -> . HEXADECIMAL
    (22) dato -> . OCTAL
    (23) dato -> . BINARIO
    (24) dato -> . BOOL
    (25) dato -> . FLOAT
    (26) dato -> . VEC
    (27) dato -> . GENERIC

    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 34
    GENERIC         shift and go to state 35

    dato                           shift and go to state 77

state 69

    (45) struct -> STRUCT VARIABLE LKEY atributos RKEY .

    $end            reduce using rule 45 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)


state 70

    (33) llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion .

    COMMA_DOT       reduce using rule 33 (llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion .)
    COMA            reduce using rule 33 (llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion .)
    RPAREN          reduce using rule 33 (llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion .)


state 71

    (34) llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos .

    COMMA_DOT       reduce using rule 34 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos .)
    COMA            reduce using rule 34 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos .)
    RPAREN          reduce using rule 34 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos .)


state 72

    (35) argumentos -> LPAREN argumento RPAREN .

    POINT           reduce using rule 35 (argumentos -> LPAREN argumento RPAREN .)
    COMMA_DOT       reduce using rule 35 (argumentos -> LPAREN argumento RPAREN .)
    COMA            reduce using rule 35 (argumentos -> LPAREN argumento RPAREN .)
    RPAREN          reduce using rule 35 (argumentos -> LPAREN argumento RPAREN .)


state 73

    (39) argumento -> VARIABLE COMA . argumento
    (37) argumento -> . VARIABLE
    (38) argumento -> . dato
    (39) argumento -> . VARIABLE COMA argumento
    (40) argumento -> . dato COMA argumento
    (41) argumento -> . llamadaAfuncion
    (42) argumento -> . llamadaAfuncionPorAlias
    (43) argumento -> . llamadaAfuncion COMA argumento
    (44) argumento -> . llamadaAfuncionPorAlias COMA argumento
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . DECIMAL
    (21) dato -> . HEXADECIMAL
    (22) dato -> . OCTAL
    (23) dato -> . BINARIO
    (24) dato -> . BOOL
    (25) dato -> . FLOAT
    (26) dato -> . VEC
    (27) dato -> . GENERIC
    (32) llamadaAfuncion -> . VARIABLE argumentos
    (33) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (34) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (31) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    VARIABLE        shift and go to state 63
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 34
    GENERIC         shift and go to state 35

    argumento                      shift and go to state 78
    dato                           shift and go to state 64
    llamadaAfuncion                shift and go to state 65
    llamadaAfuncionPorAlias        shift and go to state 66

state 74

    (40) argumento -> dato COMA . argumento
    (37) argumento -> . VARIABLE
    (38) argumento -> . dato
    (39) argumento -> . VARIABLE COMA argumento
    (40) argumento -> . dato COMA argumento
    (41) argumento -> . llamadaAfuncion
    (42) argumento -> . llamadaAfuncionPorAlias
    (43) argumento -> . llamadaAfuncion COMA argumento
    (44) argumento -> . llamadaAfuncionPorAlias COMA argumento
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . DECIMAL
    (21) dato -> . HEXADECIMAL
    (22) dato -> . OCTAL
    (23) dato -> . BINARIO
    (24) dato -> . BOOL
    (25) dato -> . FLOAT
    (26) dato -> . VEC
    (27) dato -> . GENERIC
    (32) llamadaAfuncion -> . VARIABLE argumentos
    (33) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (34) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (31) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    VARIABLE        shift and go to state 63
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 34
    GENERIC         shift and go to state 35

    dato                           shift and go to state 64
    argumento                      shift and go to state 79
    llamadaAfuncion                shift and go to state 65
    llamadaAfuncionPorAlias        shift and go to state 66

state 75

    (43) argumento -> llamadaAfuncion COMA . argumento
    (37) argumento -> . VARIABLE
    (38) argumento -> . dato
    (39) argumento -> . VARIABLE COMA argumento
    (40) argumento -> . dato COMA argumento
    (41) argumento -> . llamadaAfuncion
    (42) argumento -> . llamadaAfuncionPorAlias
    (43) argumento -> . llamadaAfuncion COMA argumento
    (44) argumento -> . llamadaAfuncionPorAlias COMA argumento
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . DECIMAL
    (21) dato -> . HEXADECIMAL
    (22) dato -> . OCTAL
    (23) dato -> . BINARIO
    (24) dato -> . BOOL
    (25) dato -> . FLOAT
    (26) dato -> . VEC
    (27) dato -> . GENERIC
    (32) llamadaAfuncion -> . VARIABLE argumentos
    (33) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (34) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (31) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    VARIABLE        shift and go to state 63
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 34
    GENERIC         shift and go to state 35

    llamadaAfuncion                shift and go to state 65
    argumento                      shift and go to state 80
    dato                           shift and go to state 64
    llamadaAfuncionPorAlias        shift and go to state 66

state 76

    (44) argumento -> llamadaAfuncionPorAlias COMA . argumento
    (37) argumento -> . VARIABLE
    (38) argumento -> . dato
    (39) argumento -> . VARIABLE COMA argumento
    (40) argumento -> . dato COMA argumento
    (41) argumento -> . llamadaAfuncion
    (42) argumento -> . llamadaAfuncionPorAlias
    (43) argumento -> . llamadaAfuncion COMA argumento
    (44) argumento -> . llamadaAfuncionPorAlias COMA argumento
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . DECIMAL
    (21) dato -> . HEXADECIMAL
    (22) dato -> . OCTAL
    (23) dato -> . BINARIO
    (24) dato -> . BOOL
    (25) dato -> . FLOAT
    (26) dato -> . VEC
    (27) dato -> . GENERIC
    (32) llamadaAfuncion -> . VARIABLE argumentos
    (33) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (34) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (31) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    VARIABLE        shift and go to state 63
    STRING          shift and go to state 26
    CHAR            shift and go to state 27
    DECIMAL         shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARIO         shift and go to state 31
    BOOL            shift and go to state 32
    FLOAT           shift and go to state 33
    VEC             shift and go to state 34
    GENERIC         shift and go to state 35

    llamadaAfuncionPorAlias        shift and go to state 66
    argumento                      shift and go to state 81
    dato                           shift and go to state 64
    llamadaAfuncion                shift and go to state 65

state 77

    (46) atributos -> VARIABLE TWO_POINTS dato .
    (47) atributos -> VARIABLE TWO_POINTS dato . COMA atributos

    RKEY            reduce using rule 46 (atributos -> VARIABLE TWO_POINTS dato .)
    COMA            shift and go to state 82


state 78

    (39) argumento -> VARIABLE COMA argumento .

    RPAREN          reduce using rule 39 (argumento -> VARIABLE COMA argumento .)


state 79

    (40) argumento -> dato COMA argumento .

    RPAREN          reduce using rule 40 (argumento -> dato COMA argumento .)


state 80

    (43) argumento -> llamadaAfuncion COMA argumento .

    RPAREN          reduce using rule 43 (argumento -> llamadaAfuncion COMA argumento .)


state 81

    (44) argumento -> llamadaAfuncionPorAlias COMA argumento .

    RPAREN          reduce using rule 44 (argumento -> llamadaAfuncionPorAlias COMA argumento .)


state 82

    (47) atributos -> VARIABLE TWO_POINTS dato COMA . atributos
    (46) atributos -> . VARIABLE TWO_POINTS dato
    (47) atributos -> . VARIABLE TWO_POINTS dato COMA atributos

    VARIABLE        shift and go to state 55

    atributos                      shift and go to state 83

state 83

    (47) atributos -> VARIABLE TWO_POINTS dato COMA atributos .

    RKEY            reduce using rule 47 (atributos -> VARIABLE TWO_POINTS dato COMA atributos .)

