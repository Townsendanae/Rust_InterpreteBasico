Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ALIGNOF
    AND
    AND_BIT
    BECOME
    BOX
    BREAK
    BYTE
    CONST
    CONTINUE
    CRATE
    DIVIDE
    DO
    ELSE
    ENUM
    EQUALS
    EXTERN
    FINAL
    IF
    IMPL
    INTEGER
    LEFT_MAYUS
    LESSEQUAL_THAN
    MACRO
    MATH_REMINDER
    MOD
    MOV
    NOT_EQUALS
    OFFSETOF
    OR
    OR_BIT
    OVERRIDE
    PLUS
    PRIV
    PROC
    PUB
    PURE
    QUO_MARKS
    REF
    RETURN
    RIGHT_MAYUS
    SELF
    SIZEOF
    STATIC
    SUPER
    TIMES
    TRAIT
    TYPEOF
    UNSAFE
    UNSIZED
    USE
    VIRTUAL
    WHERE
    WHILE
    XOR_BIT
    YIELD

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> asignacion
Rule 2     cuerpo -> asignacionMutable
Rule 3     cuerpo -> eMatch
Rule 4     cuerpo -> instruccion
Rule 5     cuerpo -> funcion
Rule 6     cuerpo -> funcionDiv
Rule 7     cuerpo -> vector
Rule 8     cuerpo -> for
Rule 9     cuerpo -> apuntador
Rule 10    cuerpo -> trait
Rule 11    cuerpo -> loop
Rule 12    cuerpo -> struct
Rule 13    cuerpo -> casting
Rule 14    cuerpo -> alias
Rule 15    cuerpo -> link
Rule 16    asignacion -> LET VARIABLE ASSIGN valor COMMA_DOT
Rule 17    valor -> STRING
Rule 18    valor -> CHAR
Rule 19    valor -> DECIMAL
Rule 20    valor -> HEXADECIMAL
Rule 21    valor -> OCTAL
Rule 22    valor -> BINARIO
Rule 23    valor -> BOOL
Rule 24    valor -> FLOAT
Rule 25    eMatch -> MATCH VARIABLE LKEY content RKEY
Rule 26    content -> valor MOREEQUAL_THAN instruccion
Rule 27    content -> valor MOREEQUAL_THAN instruccion COMA content
Rule 28    instruccion -> imprimir
Rule 29    instruccion -> hashMap
Rule 30    imprimir -> PRINTLN NOT LPAREN valor RPAREN
Rule 31    loop -> LOOP LKEY instruccion RKEY
Rule 32    for -> FOR VARIABLE IN rango LKEY instruccion RKEY
Rule 33    rango -> DECIMAL POINT POINT DECIMAL
Rule 34    rango -> DECIMAL POINT POINT ASSIGN DECIMAL
Rule 35    vector -> LET VARIABLE ASSIGN VEC NOT LBRACKET valores RBRACKET
Rule 36    valores -> valor
Rule 37    valores -> valor COMA valores
Rule 38    hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT
Rule 39    struct -> STRUCT VARIABLE LKEY atributos RKEY
Rule 40    atributos -> VARIABLE TWO_POINTS valor
Rule 41    atributos -> VARIABLE TWO_POINTS valor COMA atributos
Rule 42    asignacionMutable -> LET MUT VARIABLE ASSIGN valor COMMA_DOT
Rule 43    funcion -> FN VARIABLE parametros LKEY instruccion RKEY
Rule 44    parametros -> LPAREN RPAREN
Rule 45    parametros -> LPAREN parametro RPAREN
Rule 46    parametro -> VARIABLE TWO_POINTS valor
Rule 47    parametro -> VARIABLE TWO_POINTS valor COMA parametro
Rule 48    funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY
Rule 49    casting -> valor AS valor
Rule 50    casting -> valor AS casting
Rule 51    casting -> VARIABLE AS valor
Rule 52    casting -> VARIABLE AS casting
Rule 53    alias -> TYPE VARIABLE ASSIGN valor COMMA_DOT
Rule 54    link -> LET LPAREN variables RPAREN ASSIGN LPAREN valores RPAREN COMMA_DOT
Rule 55    variables -> VARIABLE
Rule 56    variables -> VARIABLE COMA variables
Rule 57    trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN
Rule 58    apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT

Terminals, with rules where they appear

ABSTRACT             : 
ALIGNOF              : 
AND                  : 
AND_BIT              : 
AS                   : 49 50 51 52
ASSIGN               : 16 34 35 38 42 53 54 58
BECOME               : 
BINARIO              : 22
BOOL                 : 23
BOX                  : 
BREAK                : 
BYTE                 : 
CHAR                 : 18
COMA                 : 27 37 41 47 56
COMMA_DOT            : 16 38 42 53 54 58
CONST                : 
CONTINUE             : 
CRATE                : 
DECIMAL              : 19 33 33 34 34
DIVIDE               : 
DO                   : 
ELSE                 : 
ENUM                 : 
EQUALS               : 
EXTERN               : 
FINAL                : 
FLOAT                : 24
FN                   : 43 48 58
FOR                  : 32
GENERIC              : 57
HASHMAP              : 38
HEXADECIMAL          : 20
IF                   : 
IMPL                 : 
IN                   : 32
INTEGER              : 
LBRACKET             : 35
LEFT_MAYUS           : 
LESSEQUAL_THAN       : 
LESS_THAN            : 57
LET                  : 16 35 38 42 54 58
LKEY                 : 25 31 32 39 43 48
LOOP                 : 31
LPAREN               : 30 38 44 45 54 54
MACRO                : 
MATCH                : 25
MATH_REMINDER        : 
MINUS                : 48 58
MOD                  : 
MOREEQUAL_THAN       : 26 27
MORE_THAN            : 48 57 58
MOV                  : 
MUT                  : 38 42
NEW                  : 38
NOT                  : 30 35 48
NOT_EQUALS           : 
OCTAL                : 21
OFFSETOF             : 
OR                   : 
OR_BIT               : 
OVERRIDE             : 
PLUS                 : 
POINT                : 33 33 34 34
PRINTLN              : 30
PRIV                 : 
PROC                 : 
PUB                  : 
PURE                 : 
QUO_MARKS            : 
RBRACKET             : 35
REF                  : 
RETURN               : 
RIGHT_MAYUS          : 
RKEY                 : 25 31 32 39 43 48
RPAREN               : 30 38 44 45 54 54
SELF                 : 
SIZEOF               : 
STATIC               : 
STRING               : 17
STRUCT               : 39
SUPER                : 
TIMES                : 
TRAIT                : 
TWO_POINTS           : 38 38 40 41 46 47 57 58
TYPE                 : 53
TYPEOF               : 
UNSAFE               : 
UNSIZED              : 
USE                  : 
VARIABLE             : 16 25 32 35 38 39 40 41 42 43 46 47 48 51 52 53 55 56 57 58 58
VEC                  : 35
VIRTUAL              : 
WHERE                : 
WHILE                : 
XOR_BIT              : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

alias                : 14
apuntador            : 9
asignacion           : 1
asignacionMutable    : 2
atributos            : 39 41
casting              : 13 50 52
content              : 25 27
cuerpo               : 0
eMatch               : 3
for                  : 8
funcion              : 5
funcionDiv           : 6
hashMap              : 29
imprimir             : 28
instruccion          : 4 26 27 31 32 43 48
link                 : 15
loop                 : 11
parametro            : 45 47
parametros           : 43 48 58
rango                : 32
struct               : 12
trait                : 10
valor                : 16 26 27 30 36 37 40 41 42 46 47 49 49 50 51 53 58
valores              : 35 37 54
variables            : 54 56
vector               : 7

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . asignacion
    (2) cuerpo -> . asignacionMutable
    (3) cuerpo -> . eMatch
    (4) cuerpo -> . instruccion
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcionDiv
    (7) cuerpo -> . vector
    (8) cuerpo -> . for
    (9) cuerpo -> . apuntador
    (10) cuerpo -> . trait
    (11) cuerpo -> . loop
    (12) cuerpo -> . struct
    (13) cuerpo -> . casting
    (14) cuerpo -> . alias
    (15) cuerpo -> . link
    (16) asignacion -> . LET VARIABLE ASSIGN valor COMMA_DOT
    (42) asignacionMutable -> . LET MUT VARIABLE ASSIGN valor COMMA_DOT
    (25) eMatch -> . MATCH VARIABLE LKEY content RKEY
    (28) instruccion -> . imprimir
    (29) instruccion -> . hashMap
    (43) funcion -> . FN VARIABLE parametros LKEY instruccion RKEY
    (48) funcionDiv -> . FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY
    (35) vector -> . LET VARIABLE ASSIGN VEC NOT LBRACKET valores RBRACKET
    (32) for -> . FOR VARIABLE IN rango LKEY instruccion RKEY
    (58) apuntador -> . LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT
    (57) trait -> . LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN
    (31) loop -> . LOOP LKEY instruccion RKEY
    (39) struct -> . STRUCT VARIABLE LKEY atributos RKEY
    (49) casting -> . valor AS valor
    (50) casting -> . valor AS casting
    (51) casting -> . VARIABLE AS valor
    (52) casting -> . VARIABLE AS casting
    (53) alias -> . TYPE VARIABLE ASSIGN valor COMMA_DOT
    (54) link -> . LET LPAREN variables RPAREN ASSIGN LPAREN valores RPAREN COMMA_DOT
    (30) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (38) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT
    (17) valor -> . STRING
    (18) valor -> . CHAR
    (19) valor -> . DECIMAL
    (20) valor -> . HEXADECIMAL
    (21) valor -> . OCTAL
    (22) valor -> . BINARIO
    (23) valor -> . BOOL
    (24) valor -> . FLOAT

    LET             shift and go to state 17
    MATCH           shift and go to state 20
    FN              shift and go to state 23
    FOR             shift and go to state 24
    LESS_THAN       shift and go to state 25
    LOOP            shift and go to state 26
    STRUCT          shift and go to state 27
    VARIABLE        shift and go to state 18
    TYPE            shift and go to state 28
    PRINTLN         shift and go to state 29
    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    DECIMAL         shift and go to state 32
    HEXADECIMAL     shift and go to state 33
    OCTAL           shift and go to state 34
    BINARIO         shift and go to state 35
    BOOL            shift and go to state 36
    FLOAT           shift and go to state 37

    cuerpo                         shift and go to state 1
    asignacion                     shift and go to state 2
    asignacionMutable              shift and go to state 3
    eMatch                         shift and go to state 4
    instruccion                    shift and go to state 5
    funcion                        shift and go to state 6
    funcionDiv                     shift and go to state 7
    vector                         shift and go to state 8
    for                            shift and go to state 9
    apuntador                      shift and go to state 10
    trait                          shift and go to state 11
    loop                           shift and go to state 12
    struct                         shift and go to state 13
    casting                        shift and go to state 14
    alias                          shift and go to state 15
    link                           shift and go to state 16
    valor                          shift and go to state 19
    imprimir                       shift and go to state 21
    hashMap                        shift and go to state 22

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> asignacion .

    $end            reduce using rule 1 (cuerpo -> asignacion .)


state 3

    (2) cuerpo -> asignacionMutable .

    $end            reduce using rule 2 (cuerpo -> asignacionMutable .)


state 4

    (3) cuerpo -> eMatch .

    $end            reduce using rule 3 (cuerpo -> eMatch .)


state 5

    (4) cuerpo -> instruccion .

    $end            reduce using rule 4 (cuerpo -> instruccion .)


state 6

    (5) cuerpo -> funcion .

    $end            reduce using rule 5 (cuerpo -> funcion .)


state 7

    (6) cuerpo -> funcionDiv .

    $end            reduce using rule 6 (cuerpo -> funcionDiv .)


state 8

    (7) cuerpo -> vector .

    $end            reduce using rule 7 (cuerpo -> vector .)


state 9

    (8) cuerpo -> for .

    $end            reduce using rule 8 (cuerpo -> for .)


state 10

    (9) cuerpo -> apuntador .

    $end            reduce using rule 9 (cuerpo -> apuntador .)


state 11

    (10) cuerpo -> trait .

    $end            reduce using rule 10 (cuerpo -> trait .)


state 12

    (11) cuerpo -> loop .

    $end            reduce using rule 11 (cuerpo -> loop .)


state 13

    (12) cuerpo -> struct .

    $end            reduce using rule 12 (cuerpo -> struct .)


state 14

    (13) cuerpo -> casting .

    $end            reduce using rule 13 (cuerpo -> casting .)


state 15

    (14) cuerpo -> alias .

    $end            reduce using rule 14 (cuerpo -> alias .)


state 16

    (15) cuerpo -> link .

    $end            reduce using rule 15 (cuerpo -> link .)


state 17

    (16) asignacion -> LET . VARIABLE ASSIGN valor COMMA_DOT
    (42) asignacionMutable -> LET . MUT VARIABLE ASSIGN valor COMMA_DOT
    (35) vector -> LET . VARIABLE ASSIGN VEC NOT LBRACKET valores RBRACKET
    (58) apuntador -> LET . VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT
    (54) link -> LET . LPAREN variables RPAREN ASSIGN LPAREN valores RPAREN COMMA_DOT
    (38) hashMap -> LET . MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    VARIABLE        shift and go to state 38
    MUT             shift and go to state 39
    LPAREN          shift and go to state 40


state 18

    (51) casting -> VARIABLE . AS valor
    (52) casting -> VARIABLE . AS casting

    AS              shift and go to state 41


state 19

    (49) casting -> valor . AS valor
    (50) casting -> valor . AS casting

    AS              shift and go to state 42


state 20

    (25) eMatch -> MATCH . VARIABLE LKEY content RKEY

    VARIABLE        shift and go to state 43


state 21

    (28) instruccion -> imprimir .

    $end            reduce using rule 28 (instruccion -> imprimir .)
    RKEY            reduce using rule 28 (instruccion -> imprimir .)
    COMA            reduce using rule 28 (instruccion -> imprimir .)


state 22

    (29) instruccion -> hashMap .

    $end            reduce using rule 29 (instruccion -> hashMap .)
    RKEY            reduce using rule 29 (instruccion -> hashMap .)
    COMA            reduce using rule 29 (instruccion -> hashMap .)


state 23

    (43) funcion -> FN . VARIABLE parametros LKEY instruccion RKEY
    (48) funcionDiv -> FN . VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY

    VARIABLE        shift and go to state 44


state 24

    (32) for -> FOR . VARIABLE IN rango LKEY instruccion RKEY

    VARIABLE        shift and go to state 45


state 25

    (57) trait -> LESS_THAN . GENERIC TWO_POINTS VARIABLE MORE_THAN

    GENERIC         shift and go to state 46


state 26

    (31) loop -> LOOP . LKEY instruccion RKEY

    LKEY            shift and go to state 47


state 27

    (39) struct -> STRUCT . VARIABLE LKEY atributos RKEY

    VARIABLE        shift and go to state 48


state 28

    (53) alias -> TYPE . VARIABLE ASSIGN valor COMMA_DOT

    VARIABLE        shift and go to state 49


state 29

    (30) imprimir -> PRINTLN . NOT LPAREN valor RPAREN

    NOT             shift and go to state 50


state 30

    (17) valor -> STRING .

    AS              reduce using rule 17 (valor -> STRING .)
    $end            reduce using rule 17 (valor -> STRING .)
    COMMA_DOT       reduce using rule 17 (valor -> STRING .)
    MOREEQUAL_THAN  reduce using rule 17 (valor -> STRING .)
    RPAREN          reduce using rule 17 (valor -> STRING .)
    COMA            reduce using rule 17 (valor -> STRING .)
    RKEY            reduce using rule 17 (valor -> STRING .)
    RBRACKET        reduce using rule 17 (valor -> STRING .)
    ASSIGN          reduce using rule 17 (valor -> STRING .)


state 31

    (18) valor -> CHAR .

    AS              reduce using rule 18 (valor -> CHAR .)
    $end            reduce using rule 18 (valor -> CHAR .)
    COMMA_DOT       reduce using rule 18 (valor -> CHAR .)
    MOREEQUAL_THAN  reduce using rule 18 (valor -> CHAR .)
    RPAREN          reduce using rule 18 (valor -> CHAR .)
    COMA            reduce using rule 18 (valor -> CHAR .)
    RKEY            reduce using rule 18 (valor -> CHAR .)
    RBRACKET        reduce using rule 18 (valor -> CHAR .)
    ASSIGN          reduce using rule 18 (valor -> CHAR .)


state 32

    (19) valor -> DECIMAL .

    AS              reduce using rule 19 (valor -> DECIMAL .)
    $end            reduce using rule 19 (valor -> DECIMAL .)
    COMMA_DOT       reduce using rule 19 (valor -> DECIMAL .)
    MOREEQUAL_THAN  reduce using rule 19 (valor -> DECIMAL .)
    RPAREN          reduce using rule 19 (valor -> DECIMAL .)
    COMA            reduce using rule 19 (valor -> DECIMAL .)
    RKEY            reduce using rule 19 (valor -> DECIMAL .)
    RBRACKET        reduce using rule 19 (valor -> DECIMAL .)
    ASSIGN          reduce using rule 19 (valor -> DECIMAL .)


state 33

    (20) valor -> HEXADECIMAL .

    AS              reduce using rule 20 (valor -> HEXADECIMAL .)
    $end            reduce using rule 20 (valor -> HEXADECIMAL .)
    COMMA_DOT       reduce using rule 20 (valor -> HEXADECIMAL .)
    MOREEQUAL_THAN  reduce using rule 20 (valor -> HEXADECIMAL .)
    RPAREN          reduce using rule 20 (valor -> HEXADECIMAL .)
    COMA            reduce using rule 20 (valor -> HEXADECIMAL .)
    RKEY            reduce using rule 20 (valor -> HEXADECIMAL .)
    RBRACKET        reduce using rule 20 (valor -> HEXADECIMAL .)
    ASSIGN          reduce using rule 20 (valor -> HEXADECIMAL .)


state 34

    (21) valor -> OCTAL .

    AS              reduce using rule 21 (valor -> OCTAL .)
    $end            reduce using rule 21 (valor -> OCTAL .)
    COMMA_DOT       reduce using rule 21 (valor -> OCTAL .)
    MOREEQUAL_THAN  reduce using rule 21 (valor -> OCTAL .)
    RPAREN          reduce using rule 21 (valor -> OCTAL .)
    COMA            reduce using rule 21 (valor -> OCTAL .)
    RKEY            reduce using rule 21 (valor -> OCTAL .)
    RBRACKET        reduce using rule 21 (valor -> OCTAL .)
    ASSIGN          reduce using rule 21 (valor -> OCTAL .)


state 35

    (22) valor -> BINARIO .

    AS              reduce using rule 22 (valor -> BINARIO .)
    $end            reduce using rule 22 (valor -> BINARIO .)
    COMMA_DOT       reduce using rule 22 (valor -> BINARIO .)
    MOREEQUAL_THAN  reduce using rule 22 (valor -> BINARIO .)
    RPAREN          reduce using rule 22 (valor -> BINARIO .)
    COMA            reduce using rule 22 (valor -> BINARIO .)
    RKEY            reduce using rule 22 (valor -> BINARIO .)
    RBRACKET        reduce using rule 22 (valor -> BINARIO .)
    ASSIGN          reduce using rule 22 (valor -> BINARIO .)


state 36

    (23) valor -> BOOL .

    AS              reduce using rule 23 (valor -> BOOL .)
    $end            reduce using rule 23 (valor -> BOOL .)
    COMMA_DOT       reduce using rule 23 (valor -> BOOL .)
    MOREEQUAL_THAN  reduce using rule 23 (valor -> BOOL .)
    RPAREN          reduce using rule 23 (valor -> BOOL .)
    COMA            reduce using rule 23 (valor -> BOOL .)
    RKEY            reduce using rule 23 (valor -> BOOL .)
    RBRACKET        reduce using rule 23 (valor -> BOOL .)
    ASSIGN          reduce using rule 23 (valor -> BOOL .)


state 37

    (24) valor -> FLOAT .

    AS              reduce using rule 24 (valor -> FLOAT .)
    $end            reduce using rule 24 (valor -> FLOAT .)
    COMMA_DOT       reduce using rule 24 (valor -> FLOAT .)
    MOREEQUAL_THAN  reduce using rule 24 (valor -> FLOAT .)
    RPAREN          reduce using rule 24 (valor -> FLOAT .)
    COMA            reduce using rule 24 (valor -> FLOAT .)
    RKEY            reduce using rule 24 (valor -> FLOAT .)
    RBRACKET        reduce using rule 24 (valor -> FLOAT .)
    ASSIGN          reduce using rule 24 (valor -> FLOAT .)


state 38

    (16) asignacion -> LET VARIABLE . ASSIGN valor COMMA_DOT
    (35) vector -> LET VARIABLE . ASSIGN VEC NOT LBRACKET valores RBRACKET
    (58) apuntador -> LET VARIABLE . TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT

    ASSIGN          shift and go to state 51
    TWO_POINTS      shift and go to state 52


state 39

    (42) asignacionMutable -> LET MUT . VARIABLE ASSIGN valor COMMA_DOT
    (38) hashMap -> LET MUT . VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    VARIABLE        shift and go to state 53


state 40

    (54) link -> LET LPAREN . variables RPAREN ASSIGN LPAREN valores RPAREN COMMA_DOT
    (55) variables -> . VARIABLE
    (56) variables -> . VARIABLE COMA variables

    VARIABLE        shift and go to state 55

    variables                      shift and go to state 54

state 41

    (51) casting -> VARIABLE AS . valor
    (52) casting -> VARIABLE AS . casting
    (17) valor -> . STRING
    (18) valor -> . CHAR
    (19) valor -> . DECIMAL
    (20) valor -> . HEXADECIMAL
    (21) valor -> . OCTAL
    (22) valor -> . BINARIO
    (23) valor -> . BOOL
    (24) valor -> . FLOAT
    (49) casting -> . valor AS valor
    (50) casting -> . valor AS casting
    (51) casting -> . VARIABLE AS valor
    (52) casting -> . VARIABLE AS casting

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    DECIMAL         shift and go to state 32
    HEXADECIMAL     shift and go to state 33
    OCTAL           shift and go to state 34
    BINARIO         shift and go to state 35
    BOOL            shift and go to state 36
    FLOAT           shift and go to state 37
    VARIABLE        shift and go to state 18

    valor                          shift and go to state 56
    casting                        shift and go to state 57

state 42

    (49) casting -> valor AS . valor
    (50) casting -> valor AS . casting
    (17) valor -> . STRING
    (18) valor -> . CHAR
    (19) valor -> . DECIMAL
    (20) valor -> . HEXADECIMAL
    (21) valor -> . OCTAL
    (22) valor -> . BINARIO
    (23) valor -> . BOOL
    (24) valor -> . FLOAT
    (49) casting -> . valor AS valor
    (50) casting -> . valor AS casting
    (51) casting -> . VARIABLE AS valor
    (52) casting -> . VARIABLE AS casting

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    DECIMAL         shift and go to state 32
    HEXADECIMAL     shift and go to state 33
    OCTAL           shift and go to state 34
    BINARIO         shift and go to state 35
    BOOL            shift and go to state 36
    FLOAT           shift and go to state 37
    VARIABLE        shift and go to state 18

    valor                          shift and go to state 58
    casting                        shift and go to state 59

state 43

    (25) eMatch -> MATCH VARIABLE . LKEY content RKEY

    LKEY            shift and go to state 60


state 44

    (43) funcion -> FN VARIABLE . parametros LKEY instruccion RKEY
    (48) funcionDiv -> FN VARIABLE . parametros MINUS MORE_THAN NOT LKEY instruccion RKEY
    (44) parametros -> . LPAREN RPAREN
    (45) parametros -> . LPAREN parametro RPAREN

    LPAREN          shift and go to state 62

    parametros                     shift and go to state 61

state 45

    (32) for -> FOR VARIABLE . IN rango LKEY instruccion RKEY

    IN              shift and go to state 63


state 46

    (57) trait -> LESS_THAN GENERIC . TWO_POINTS VARIABLE MORE_THAN

    TWO_POINTS      shift and go to state 64


state 47

    (31) loop -> LOOP LKEY . instruccion RKEY
    (28) instruccion -> . imprimir
    (29) instruccion -> . hashMap
    (30) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (38) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    PRINTLN         shift and go to state 29
    LET             shift and go to state 66

    instruccion                    shift and go to state 65
    imprimir                       shift and go to state 21
    hashMap                        shift and go to state 22

state 48

    (39) struct -> STRUCT VARIABLE . LKEY atributos RKEY

    LKEY            shift and go to state 67


state 49

    (53) alias -> TYPE VARIABLE . ASSIGN valor COMMA_DOT

    ASSIGN          shift and go to state 68


state 50

    (30) imprimir -> PRINTLN NOT . LPAREN valor RPAREN

    LPAREN          shift and go to state 69


state 51

    (16) asignacion -> LET VARIABLE ASSIGN . valor COMMA_DOT
    (35) vector -> LET VARIABLE ASSIGN . VEC NOT LBRACKET valores RBRACKET
    (17) valor -> . STRING
    (18) valor -> . CHAR
    (19) valor -> . DECIMAL
    (20) valor -> . HEXADECIMAL
    (21) valor -> . OCTAL
    (22) valor -> . BINARIO
    (23) valor -> . BOOL
    (24) valor -> . FLOAT

    VEC             shift and go to state 71
    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    DECIMAL         shift and go to state 32
    HEXADECIMAL     shift and go to state 33
    OCTAL           shift and go to state 34
    BINARIO         shift and go to state 35
    BOOL            shift and go to state 36
    FLOAT           shift and go to state 37

    valor                          shift and go to state 70

state 52

    (58) apuntador -> LET VARIABLE TWO_POINTS . FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT

    FN              shift and go to state 72


state 53

    (42) asignacionMutable -> LET MUT VARIABLE . ASSIGN valor COMMA_DOT
    (38) hashMap -> LET MUT VARIABLE . ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    ASSIGN          shift and go to state 73


state 54

    (54) link -> LET LPAREN variables . RPAREN ASSIGN LPAREN valores RPAREN COMMA_DOT

    RPAREN          shift and go to state 74


state 55

    (55) variables -> VARIABLE .
    (56) variables -> VARIABLE . COMA variables

    RPAREN          reduce using rule 55 (variables -> VARIABLE .)
    COMA            shift and go to state 75


state 56

    (51) casting -> VARIABLE AS valor .
    (49) casting -> valor . AS valor
    (50) casting -> valor . AS casting

    $end            reduce using rule 51 (casting -> VARIABLE AS valor .)
    AS              shift and go to state 42


state 57

    (52) casting -> VARIABLE AS casting .

    $end            reduce using rule 52 (casting -> VARIABLE AS casting .)


state 58

    (49) casting -> valor AS valor .
    (49) casting -> valor . AS valor
    (50) casting -> valor . AS casting

    $end            reduce using rule 49 (casting -> valor AS valor .)
    AS              shift and go to state 42


state 59

    (50) casting -> valor AS casting .

    $end            reduce using rule 50 (casting -> valor AS casting .)


state 60

    (25) eMatch -> MATCH VARIABLE LKEY . content RKEY
    (26) content -> . valor MOREEQUAL_THAN instruccion
    (27) content -> . valor MOREEQUAL_THAN instruccion COMA content
    (17) valor -> . STRING
    (18) valor -> . CHAR
    (19) valor -> . DECIMAL
    (20) valor -> . HEXADECIMAL
    (21) valor -> . OCTAL
    (22) valor -> . BINARIO
    (23) valor -> . BOOL
    (24) valor -> . FLOAT

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    DECIMAL         shift and go to state 32
    HEXADECIMAL     shift and go to state 33
    OCTAL           shift and go to state 34
    BINARIO         shift and go to state 35
    BOOL            shift and go to state 36
    FLOAT           shift and go to state 37

    content                        shift and go to state 76
    valor                          shift and go to state 77

state 61

    (43) funcion -> FN VARIABLE parametros . LKEY instruccion RKEY
    (48) funcionDiv -> FN VARIABLE parametros . MINUS MORE_THAN NOT LKEY instruccion RKEY

    LKEY            shift and go to state 78
    MINUS           shift and go to state 79


state 62

    (44) parametros -> LPAREN . RPAREN
    (45) parametros -> LPAREN . parametro RPAREN
    (46) parametro -> . VARIABLE TWO_POINTS valor
    (47) parametro -> . VARIABLE TWO_POINTS valor COMA parametro

    RPAREN          shift and go to state 80
    VARIABLE        shift and go to state 82

    parametro                      shift and go to state 81

state 63

    (32) for -> FOR VARIABLE IN . rango LKEY instruccion RKEY
    (33) rango -> . DECIMAL POINT POINT DECIMAL
    (34) rango -> . DECIMAL POINT POINT ASSIGN DECIMAL

    DECIMAL         shift and go to state 84

    rango                          shift and go to state 83

state 64

    (57) trait -> LESS_THAN GENERIC TWO_POINTS . VARIABLE MORE_THAN

    VARIABLE        shift and go to state 85


state 65

    (31) loop -> LOOP LKEY instruccion . RKEY

    RKEY            shift and go to state 86


state 66

    (38) hashMap -> LET . MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    MUT             shift and go to state 87


state 67

    (39) struct -> STRUCT VARIABLE LKEY . atributos RKEY
    (40) atributos -> . VARIABLE TWO_POINTS valor
    (41) atributos -> . VARIABLE TWO_POINTS valor COMA atributos

    VARIABLE        shift and go to state 88

    atributos                      shift and go to state 89

state 68

    (53) alias -> TYPE VARIABLE ASSIGN . valor COMMA_DOT
    (17) valor -> . STRING
    (18) valor -> . CHAR
    (19) valor -> . DECIMAL
    (20) valor -> . HEXADECIMAL
    (21) valor -> . OCTAL
    (22) valor -> . BINARIO
    (23) valor -> . BOOL
    (24) valor -> . FLOAT

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    DECIMAL         shift and go to state 32
    HEXADECIMAL     shift and go to state 33
    OCTAL           shift and go to state 34
    BINARIO         shift and go to state 35
    BOOL            shift and go to state 36
    FLOAT           shift and go to state 37

    valor                          shift and go to state 90

state 69

    (30) imprimir -> PRINTLN NOT LPAREN . valor RPAREN
    (17) valor -> . STRING
    (18) valor -> . CHAR
    (19) valor -> . DECIMAL
    (20) valor -> . HEXADECIMAL
    (21) valor -> . OCTAL
    (22) valor -> . BINARIO
    (23) valor -> . BOOL
    (24) valor -> . FLOAT

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    DECIMAL         shift and go to state 32
    HEXADECIMAL     shift and go to state 33
    OCTAL           shift and go to state 34
    BINARIO         shift and go to state 35
    BOOL            shift and go to state 36
    FLOAT           shift and go to state 37

    valor                          shift and go to state 91

state 70

    (16) asignacion -> LET VARIABLE ASSIGN valor . COMMA_DOT

    COMMA_DOT       shift and go to state 92


state 71

    (35) vector -> LET VARIABLE ASSIGN VEC . NOT LBRACKET valores RBRACKET

    NOT             shift and go to state 93


state 72

    (58) apuntador -> LET VARIABLE TWO_POINTS FN . parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT
    (44) parametros -> . LPAREN RPAREN
    (45) parametros -> . LPAREN parametro RPAREN

    LPAREN          shift and go to state 62

    parametros                     shift and go to state 94

state 73

    (42) asignacionMutable -> LET MUT VARIABLE ASSIGN . valor COMMA_DOT
    (38) hashMap -> LET MUT VARIABLE ASSIGN . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT
    (17) valor -> . STRING
    (18) valor -> . CHAR
    (19) valor -> . DECIMAL
    (20) valor -> . HEXADECIMAL
    (21) valor -> . OCTAL
    (22) valor -> . BINARIO
    (23) valor -> . BOOL
    (24) valor -> . FLOAT

    HASHMAP         shift and go to state 96
    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    DECIMAL         shift and go to state 32
    HEXADECIMAL     shift and go to state 33
    OCTAL           shift and go to state 34
    BINARIO         shift and go to state 35
    BOOL            shift and go to state 36
    FLOAT           shift and go to state 37

    valor                          shift and go to state 95

state 74

    (54) link -> LET LPAREN variables RPAREN . ASSIGN LPAREN valores RPAREN COMMA_DOT

    ASSIGN          shift and go to state 97


state 75

    (56) variables -> VARIABLE COMA . variables
    (55) variables -> . VARIABLE
    (56) variables -> . VARIABLE COMA variables

    VARIABLE        shift and go to state 55

    variables                      shift and go to state 98

state 76

    (25) eMatch -> MATCH VARIABLE LKEY content . RKEY

    RKEY            shift and go to state 99


state 77

    (26) content -> valor . MOREEQUAL_THAN instruccion
    (27) content -> valor . MOREEQUAL_THAN instruccion COMA content

    MOREEQUAL_THAN  shift and go to state 100


state 78

    (43) funcion -> FN VARIABLE parametros LKEY . instruccion RKEY
    (28) instruccion -> . imprimir
    (29) instruccion -> . hashMap
    (30) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (38) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    PRINTLN         shift and go to state 29
    LET             shift and go to state 66

    instruccion                    shift and go to state 101
    imprimir                       shift and go to state 21
    hashMap                        shift and go to state 22

state 79

    (48) funcionDiv -> FN VARIABLE parametros MINUS . MORE_THAN NOT LKEY instruccion RKEY

    MORE_THAN       shift and go to state 102


state 80

    (44) parametros -> LPAREN RPAREN .

    LKEY            reduce using rule 44 (parametros -> LPAREN RPAREN .)
    MINUS           reduce using rule 44 (parametros -> LPAREN RPAREN .)


state 81

    (45) parametros -> LPAREN parametro . RPAREN

    RPAREN          shift and go to state 103


state 82

    (46) parametro -> VARIABLE . TWO_POINTS valor
    (47) parametro -> VARIABLE . TWO_POINTS valor COMA parametro

    TWO_POINTS      shift and go to state 104


state 83

    (32) for -> FOR VARIABLE IN rango . LKEY instruccion RKEY

    LKEY            shift and go to state 105


state 84

    (33) rango -> DECIMAL . POINT POINT DECIMAL
    (34) rango -> DECIMAL . POINT POINT ASSIGN DECIMAL

    POINT           shift and go to state 106


state 85

    (57) trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE . MORE_THAN

    MORE_THAN       shift and go to state 107


state 86

    (31) loop -> LOOP LKEY instruccion RKEY .

    $end            reduce using rule 31 (loop -> LOOP LKEY instruccion RKEY .)


state 87

    (38) hashMap -> LET MUT . VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    VARIABLE        shift and go to state 108


state 88

    (40) atributos -> VARIABLE . TWO_POINTS valor
    (41) atributos -> VARIABLE . TWO_POINTS valor COMA atributos

    TWO_POINTS      shift and go to state 109


state 89

    (39) struct -> STRUCT VARIABLE LKEY atributos . RKEY

    RKEY            shift and go to state 110


state 90

    (53) alias -> TYPE VARIABLE ASSIGN valor . COMMA_DOT

    COMMA_DOT       shift and go to state 111


state 91

    (30) imprimir -> PRINTLN NOT LPAREN valor . RPAREN

    RPAREN          shift and go to state 112


state 92

    (16) asignacion -> LET VARIABLE ASSIGN valor COMMA_DOT .

    $end            reduce using rule 16 (asignacion -> LET VARIABLE ASSIGN valor COMMA_DOT .)


state 93

    (35) vector -> LET VARIABLE ASSIGN VEC NOT . LBRACKET valores RBRACKET

    LBRACKET        shift and go to state 113


state 94

    (58) apuntador -> LET VARIABLE TWO_POINTS FN parametros . MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT

    MINUS           shift and go to state 114


state 95

    (42) asignacionMutable -> LET MUT VARIABLE ASSIGN valor . COMMA_DOT

    COMMA_DOT       shift and go to state 115


state 96

    (38) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP . TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    TWO_POINTS      shift and go to state 116


state 97

    (54) link -> LET LPAREN variables RPAREN ASSIGN . LPAREN valores RPAREN COMMA_DOT

    LPAREN          shift and go to state 117


state 98

    (56) variables -> VARIABLE COMA variables .

    RPAREN          reduce using rule 56 (variables -> VARIABLE COMA variables .)


state 99

    (25) eMatch -> MATCH VARIABLE LKEY content RKEY .

    $end            reduce using rule 25 (eMatch -> MATCH VARIABLE LKEY content RKEY .)


state 100

    (26) content -> valor MOREEQUAL_THAN . instruccion
    (27) content -> valor MOREEQUAL_THAN . instruccion COMA content
    (28) instruccion -> . imprimir
    (29) instruccion -> . hashMap
    (30) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (38) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    PRINTLN         shift and go to state 29
    LET             shift and go to state 66

    instruccion                    shift and go to state 118
    imprimir                       shift and go to state 21
    hashMap                        shift and go to state 22

state 101

    (43) funcion -> FN VARIABLE parametros LKEY instruccion . RKEY

    RKEY            shift and go to state 119


state 102

    (48) funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN . NOT LKEY instruccion RKEY

    NOT             shift and go to state 120


state 103

    (45) parametros -> LPAREN parametro RPAREN .

    LKEY            reduce using rule 45 (parametros -> LPAREN parametro RPAREN .)
    MINUS           reduce using rule 45 (parametros -> LPAREN parametro RPAREN .)


state 104

    (46) parametro -> VARIABLE TWO_POINTS . valor
    (47) parametro -> VARIABLE TWO_POINTS . valor COMA parametro
    (17) valor -> . STRING
    (18) valor -> . CHAR
    (19) valor -> . DECIMAL
    (20) valor -> . HEXADECIMAL
    (21) valor -> . OCTAL
    (22) valor -> . BINARIO
    (23) valor -> . BOOL
    (24) valor -> . FLOAT

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    DECIMAL         shift and go to state 32
    HEXADECIMAL     shift and go to state 33
    OCTAL           shift and go to state 34
    BINARIO         shift and go to state 35
    BOOL            shift and go to state 36
    FLOAT           shift and go to state 37

    valor                          shift and go to state 121

state 105

    (32) for -> FOR VARIABLE IN rango LKEY . instruccion RKEY
    (28) instruccion -> . imprimir
    (29) instruccion -> . hashMap
    (30) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (38) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    PRINTLN         shift and go to state 29
    LET             shift and go to state 66

    instruccion                    shift and go to state 122
    imprimir                       shift and go to state 21
    hashMap                        shift and go to state 22

state 106

    (33) rango -> DECIMAL POINT . POINT DECIMAL
    (34) rango -> DECIMAL POINT . POINT ASSIGN DECIMAL

    POINT           shift and go to state 123


state 107

    (57) trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN .

    $end            reduce using rule 57 (trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN .)


state 108

    (38) hashMap -> LET MUT VARIABLE . ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    ASSIGN          shift and go to state 124


state 109

    (40) atributos -> VARIABLE TWO_POINTS . valor
    (41) atributos -> VARIABLE TWO_POINTS . valor COMA atributos
    (17) valor -> . STRING
    (18) valor -> . CHAR
    (19) valor -> . DECIMAL
    (20) valor -> . HEXADECIMAL
    (21) valor -> . OCTAL
    (22) valor -> . BINARIO
    (23) valor -> . BOOL
    (24) valor -> . FLOAT

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    DECIMAL         shift and go to state 32
    HEXADECIMAL     shift and go to state 33
    OCTAL           shift and go to state 34
    BINARIO         shift and go to state 35
    BOOL            shift and go to state 36
    FLOAT           shift and go to state 37

    valor                          shift and go to state 125

state 110

    (39) struct -> STRUCT VARIABLE LKEY atributos RKEY .

    $end            reduce using rule 39 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)


state 111

    (53) alias -> TYPE VARIABLE ASSIGN valor COMMA_DOT .

    $end            reduce using rule 53 (alias -> TYPE VARIABLE ASSIGN valor COMMA_DOT .)


state 112

    (30) imprimir -> PRINTLN NOT LPAREN valor RPAREN .

    $end            reduce using rule 30 (imprimir -> PRINTLN NOT LPAREN valor RPAREN .)
    RKEY            reduce using rule 30 (imprimir -> PRINTLN NOT LPAREN valor RPAREN .)
    COMA            reduce using rule 30 (imprimir -> PRINTLN NOT LPAREN valor RPAREN .)


state 113

    (35) vector -> LET VARIABLE ASSIGN VEC NOT LBRACKET . valores RBRACKET
    (36) valores -> . valor
    (37) valores -> . valor COMA valores
    (17) valor -> . STRING
    (18) valor -> . CHAR
    (19) valor -> . DECIMAL
    (20) valor -> . HEXADECIMAL
    (21) valor -> . OCTAL
    (22) valor -> . BINARIO
    (23) valor -> . BOOL
    (24) valor -> . FLOAT

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    DECIMAL         shift and go to state 32
    HEXADECIMAL     shift and go to state 33
    OCTAL           shift and go to state 34
    BINARIO         shift and go to state 35
    BOOL            shift and go to state 36
    FLOAT           shift and go to state 37

    valores                        shift and go to state 126
    valor                          shift and go to state 127

state 114

    (58) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS . MORE_THAN valor ASSIGN VARIABLE COMMA_DOT

    MORE_THAN       shift and go to state 128


state 115

    (42) asignacionMutable -> LET MUT VARIABLE ASSIGN valor COMMA_DOT .

    $end            reduce using rule 42 (asignacionMutable -> LET MUT VARIABLE ASSIGN valor COMMA_DOT .)


state 116

    (38) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS . TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    TWO_POINTS      shift and go to state 129


state 117

    (54) link -> LET LPAREN variables RPAREN ASSIGN LPAREN . valores RPAREN COMMA_DOT
    (36) valores -> . valor
    (37) valores -> . valor COMA valores
    (17) valor -> . STRING
    (18) valor -> . CHAR
    (19) valor -> . DECIMAL
    (20) valor -> . HEXADECIMAL
    (21) valor -> . OCTAL
    (22) valor -> . BINARIO
    (23) valor -> . BOOL
    (24) valor -> . FLOAT

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    DECIMAL         shift and go to state 32
    HEXADECIMAL     shift and go to state 33
    OCTAL           shift and go to state 34
    BINARIO         shift and go to state 35
    BOOL            shift and go to state 36
    FLOAT           shift and go to state 37

    valores                        shift and go to state 130
    valor                          shift and go to state 127

state 118

    (26) content -> valor MOREEQUAL_THAN instruccion .
    (27) content -> valor MOREEQUAL_THAN instruccion . COMA content

    RKEY            reduce using rule 26 (content -> valor MOREEQUAL_THAN instruccion .)
    COMA            shift and go to state 131


state 119

    (43) funcion -> FN VARIABLE parametros LKEY instruccion RKEY .

    $end            reduce using rule 43 (funcion -> FN VARIABLE parametros LKEY instruccion RKEY .)


state 120

    (48) funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT . LKEY instruccion RKEY

    LKEY            shift and go to state 132


state 121

    (46) parametro -> VARIABLE TWO_POINTS valor .
    (47) parametro -> VARIABLE TWO_POINTS valor . COMA parametro

    RPAREN          reduce using rule 46 (parametro -> VARIABLE TWO_POINTS valor .)
    COMA            shift and go to state 133


state 122

    (32) for -> FOR VARIABLE IN rango LKEY instruccion . RKEY

    RKEY            shift and go to state 134


state 123

    (33) rango -> DECIMAL POINT POINT . DECIMAL
    (34) rango -> DECIMAL POINT POINT . ASSIGN DECIMAL

    DECIMAL         shift and go to state 135
    ASSIGN          shift and go to state 136


state 124

    (38) hashMap -> LET MUT VARIABLE ASSIGN . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    HASHMAP         shift and go to state 96


state 125

    (40) atributos -> VARIABLE TWO_POINTS valor .
    (41) atributos -> VARIABLE TWO_POINTS valor . COMA atributos

    RKEY            reduce using rule 40 (atributos -> VARIABLE TWO_POINTS valor .)
    COMA            shift and go to state 137


state 126

    (35) vector -> LET VARIABLE ASSIGN VEC NOT LBRACKET valores . RBRACKET

    RBRACKET        shift and go to state 138


state 127

    (36) valores -> valor .
    (37) valores -> valor . COMA valores

    RBRACKET        reduce using rule 36 (valores -> valor .)
    RPAREN          reduce using rule 36 (valores -> valor .)
    COMA            shift and go to state 139


state 128

    (58) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN . valor ASSIGN VARIABLE COMMA_DOT
    (17) valor -> . STRING
    (18) valor -> . CHAR
    (19) valor -> . DECIMAL
    (20) valor -> . HEXADECIMAL
    (21) valor -> . OCTAL
    (22) valor -> . BINARIO
    (23) valor -> . BOOL
    (24) valor -> . FLOAT

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    DECIMAL         shift and go to state 32
    HEXADECIMAL     shift and go to state 33
    OCTAL           shift and go to state 34
    BINARIO         shift and go to state 35
    BOOL            shift and go to state 36
    FLOAT           shift and go to state 37

    valor                          shift and go to state 140

state 129

    (38) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS . NEW LPAREN RPAREN COMMA_DOT

    NEW             shift and go to state 141


state 130

    (54) link -> LET LPAREN variables RPAREN ASSIGN LPAREN valores . RPAREN COMMA_DOT

    RPAREN          shift and go to state 142


state 131

    (27) content -> valor MOREEQUAL_THAN instruccion COMA . content
    (26) content -> . valor MOREEQUAL_THAN instruccion
    (27) content -> . valor MOREEQUAL_THAN instruccion COMA content
    (17) valor -> . STRING
    (18) valor -> . CHAR
    (19) valor -> . DECIMAL
    (20) valor -> . HEXADECIMAL
    (21) valor -> . OCTAL
    (22) valor -> . BINARIO
    (23) valor -> . BOOL
    (24) valor -> . FLOAT

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    DECIMAL         shift and go to state 32
    HEXADECIMAL     shift and go to state 33
    OCTAL           shift and go to state 34
    BINARIO         shift and go to state 35
    BOOL            shift and go to state 36
    FLOAT           shift and go to state 37

    valor                          shift and go to state 77
    content                        shift and go to state 143

state 132

    (48) funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT LKEY . instruccion RKEY
    (28) instruccion -> . imprimir
    (29) instruccion -> . hashMap
    (30) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (38) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    PRINTLN         shift and go to state 29
    LET             shift and go to state 66

    instruccion                    shift and go to state 144
    imprimir                       shift and go to state 21
    hashMap                        shift and go to state 22

state 133

    (47) parametro -> VARIABLE TWO_POINTS valor COMA . parametro
    (46) parametro -> . VARIABLE TWO_POINTS valor
    (47) parametro -> . VARIABLE TWO_POINTS valor COMA parametro

    VARIABLE        shift and go to state 82

    parametro                      shift and go to state 145

state 134

    (32) for -> FOR VARIABLE IN rango LKEY instruccion RKEY .

    $end            reduce using rule 32 (for -> FOR VARIABLE IN rango LKEY instruccion RKEY .)


state 135

    (33) rango -> DECIMAL POINT POINT DECIMAL .

    LKEY            reduce using rule 33 (rango -> DECIMAL POINT POINT DECIMAL .)


state 136

    (34) rango -> DECIMAL POINT POINT ASSIGN . DECIMAL

    DECIMAL         shift and go to state 146


state 137

    (41) atributos -> VARIABLE TWO_POINTS valor COMA . atributos
    (40) atributos -> . VARIABLE TWO_POINTS valor
    (41) atributos -> . VARIABLE TWO_POINTS valor COMA atributos

    VARIABLE        shift and go to state 88

    atributos                      shift and go to state 147

state 138

    (35) vector -> LET VARIABLE ASSIGN VEC NOT LBRACKET valores RBRACKET .

    $end            reduce using rule 35 (vector -> LET VARIABLE ASSIGN VEC NOT LBRACKET valores RBRACKET .)


state 139

    (37) valores -> valor COMA . valores
    (36) valores -> . valor
    (37) valores -> . valor COMA valores
    (17) valor -> . STRING
    (18) valor -> . CHAR
    (19) valor -> . DECIMAL
    (20) valor -> . HEXADECIMAL
    (21) valor -> . OCTAL
    (22) valor -> . BINARIO
    (23) valor -> . BOOL
    (24) valor -> . FLOAT

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    DECIMAL         shift and go to state 32
    HEXADECIMAL     shift and go to state 33
    OCTAL           shift and go to state 34
    BINARIO         shift and go to state 35
    BOOL            shift and go to state 36
    FLOAT           shift and go to state 37

    valor                          shift and go to state 127
    valores                        shift and go to state 148

state 140

    (58) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor . ASSIGN VARIABLE COMMA_DOT

    ASSIGN          shift and go to state 149


state 141

    (38) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW . LPAREN RPAREN COMMA_DOT

    LPAREN          shift and go to state 150


state 142

    (54) link -> LET LPAREN variables RPAREN ASSIGN LPAREN valores RPAREN . COMMA_DOT

    COMMA_DOT       shift and go to state 151


state 143

    (27) content -> valor MOREEQUAL_THAN instruccion COMA content .

    RKEY            reduce using rule 27 (content -> valor MOREEQUAL_THAN instruccion COMA content .)


state 144

    (48) funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion . RKEY

    RKEY            shift and go to state 152


state 145

    (47) parametro -> VARIABLE TWO_POINTS valor COMA parametro .

    RPAREN          reduce using rule 47 (parametro -> VARIABLE TWO_POINTS valor COMA parametro .)


state 146

    (34) rango -> DECIMAL POINT POINT ASSIGN DECIMAL .

    LKEY            reduce using rule 34 (rango -> DECIMAL POINT POINT ASSIGN DECIMAL .)


state 147

    (41) atributos -> VARIABLE TWO_POINTS valor COMA atributos .

    RKEY            reduce using rule 41 (atributos -> VARIABLE TWO_POINTS valor COMA atributos .)


state 148

    (37) valores -> valor COMA valores .

    RBRACKET        reduce using rule 37 (valores -> valor COMA valores .)
    RPAREN          reduce using rule 37 (valores -> valor COMA valores .)


state 149

    (58) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN . VARIABLE COMMA_DOT

    VARIABLE        shift and go to state 153


state 150

    (38) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN . RPAREN COMMA_DOT

    RPAREN          shift and go to state 154


state 151

    (54) link -> LET LPAREN variables RPAREN ASSIGN LPAREN valores RPAREN COMMA_DOT .

    $end            reduce using rule 54 (link -> LET LPAREN variables RPAREN ASSIGN LPAREN valores RPAREN COMMA_DOT .)


state 152

    (48) funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY .

    $end            reduce using rule 48 (funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY .)


state 153

    (58) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE . COMMA_DOT

    COMMA_DOT       shift and go to state 155


state 154

    (38) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN . COMMA_DOT

    COMMA_DOT       shift and go to state 156


state 155

    (58) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT .

    $end            reduce using rule 58 (apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT .)


state 156

    (38) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT .

    $end            reduce using rule 38 (hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT .)
    RKEY            reduce using rule 38 (hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT .)
    COMA            reduce using rule 38 (hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT .)

