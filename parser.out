Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ALIGNOF
    AND
    AND_BIT
    AS
    BECOME
    BOX
    BREAK
    BYTE
    CONTINUE
    CRATE
    DIVIDE
    DO
    ELSE
    ENUM
    EQUALS
    EXTERN
    FINAL
    IF
    IMPL
    INTEGER
    LEFT_MAYUS
    LESSEQUAL_THAN
    MACRO
    MATH_REMINDER
    MOD
    MOV
    NOT_EQUALS
    OFFSETOF
    OR
    OR_BIT
    OVERRIDE
    PLUS
    PRINTLN
    PRIV
    PROC
    PUB
    PURE
    QUO_MARKS
    REF
    RETURN
    RIGHT_MAYUS
    SELF
    SIZEOF
    STATIC
    SUPER
    TIMES
    TRAIT
    TYPE
    TYPEOF
    UNSAFE
    UNSIZED
    USE
    VIRTUAL
    WHERE
    WHILE
    XOR_BIT
    YIELD

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> asignacion
Rule 2     cuerpo -> struct
Rule 3     cuerpo -> varEnVar
Rule 4     cuerpo -> definirFuncion
Rule 5     cuerpo -> hashMap
Rule 6     cuerpo -> vector
Rule 7     cuerpo -> for
Rule 8     cuerpo -> loop
Rule 9     cuerpo -> eMatch
Rule 10    asignacion -> definicion ASSIGN valorAsignado COMMA_DOT
Rule 11    asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT
Rule 12    asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT
Rule 13    asignacion -> definicion
Rule 14    varEnVar -> VARIABLE POINT VARIABLE
Rule 15    definicion -> creacion
Rule 16    definicion -> creacion COMMA_DOT
Rule 17    definicion -> creacion tipoDato
Rule 18    creacion -> LET MUT VARIABLE
Rule 19    creacion -> LET VARIABLE
Rule 20    creacion -> CONST VARIABLE
Rule 21    tipoDato -> TWO_POINTS dato
Rule 22    tipoDato -> TWO_POINTS dato tipoDato
Rule 23    tipoDato -> LESS_THAN dato MORE_THAN
Rule 24    tipoDato -> TWO_POINTS apuntador
Rule 25    dato -> STRING
Rule 26    dato -> CHAR
Rule 27    dato -> DECIMAL
Rule 28    dato -> HEXADECIMAL
Rule 29    dato -> OCTAL
Rule 30    dato -> BINARIO
Rule 31    dato -> BOOL
Rule 32    dato -> FLOAT
Rule 33    dato -> VEC
Rule 34    dato -> GENERIC
Rule 35    valorAsignado -> dato
Rule 36    valorAsignado -> llamadaAfuncion
Rule 37    valorAsignado -> llamadaAfuncionPorAlias
Rule 38    valorAsignado -> vector
Rule 39    valorAsignado -> hashMap
Rule 40    valorAsignado -> VARIABLE
Rule 41    llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion
Rule 42    llamadaAfuncion -> VARIABLE argumentos
Rule 43    llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion
Rule 44    llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos
Rule 45    llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS
Rule 46    llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion
Rule 47    argumentos -> LPAREN argumento RPAREN
Rule 48    argumentos -> LPAREN RPAREN
Rule 49    argumento -> VARIABLE
Rule 50    argumento -> dato
Rule 51    argumento -> VARIABLE COMA argumento
Rule 52    argumento -> dato COMA argumento
Rule 53    argumento -> llamadaAfuncion
Rule 54    argumento -> llamadaAfuncionPorAlias
Rule 55    argumento -> llamadaAfuncion COMA argumento
Rule 56    argumento -> llamadaAfuncionPorAlias COMA argumento
Rule 57    definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY
Rule 58    definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY
Rule 59    trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN
Rule 60    datoARetornar -> MINUS MORE_THAN dato
Rule 61    datoARetornar -> MINUS MORE_THAN NOT
Rule 62    parametros -> LPAREN RPAREN datoARetornar
Rule 63    parametros -> LPAREN parametro RPAREN datoARetornar
Rule 64    parametros -> LPAREN RPAREN
Rule 65    parametros -> LPAREN parametro RPAREN
Rule 66    parametro -> VARIABLE TWO_POINTS dato
Rule 67    parametro -> VARIABLE TWO_POINTS dato COMA parametro
Rule 68    parametro -> dato COMA parametro
Rule 69    parametro -> dato
Rule 70    cuerpoFuncion -> cuerpo
Rule 71    struct -> STRUCT VARIABLE LKEY atributos RKEY
Rule 72    atributos -> VARIABLE TWO_POINTS dato
Rule 73    atributos -> VARIABLE TWO_POINTS dato COMA atributos
Rule 74    vector -> VEC NOT LBRACKET datos RBRACKET
Rule 75    datos -> dato
Rule 76    datos -> dato COMA datos
Rule 77    hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
Rule 78    for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY
Rule 79    rango -> DECIMAL POINT POINT DECIMAL
Rule 80    rango -> DECIMAL POINT POINT ASSIGN DECIMAL
Rule 81    eMatch -> MATCH VARIABLE LKEY content RKEY
Rule 82    content -> dato MOREEQUAL_THAN cuerpoFuncion
Rule 83    content -> dato MOREEQUAL_THAN cuerpoFuncion COMA content
Rule 84    loop -> LOOP LKEY cuerpoFuncion RKEY
Rule 85    apuntador -> FN parametros

Terminals, with rules where they appear

ABSTRACT             : 
ALIGNOF              : 
AND                  : 
AND_BIT              : 
AS                   : 
ASSIGN               : 10 11 12 80
BECOME               : 
BINARIO              : 30
BOOL                 : 31
BOX                  : 
BREAK                : 
BYTE                 : 
CHAR                 : 26
COMA                 : 51 52 55 56 67 68 73 76 83
COMMA_DOT            : 10 11 12 16
CONST                : 20
CONTINUE             : 
CRATE                : 
DECIMAL              : 27 79 79 80 80
DIVIDE               : 
DO                   : 
ELSE                 : 
ENUM                 : 
EQUALS               : 
EXTERN               : 
FINAL                : 
FLOAT                : 32
FN                   : 57 58 85
FOR                  : 78
GENERIC              : 34 59
HASHMAP              : 77
HEXADECIMAL          : 28
IF                   : 
IMPL                 : 
IN                   : 78
INTEGER              : 
LBRACKET             : 74
LEFT_MAYUS           : 
LESSEQUAL_THAN       : 
LESS_THAN            : 23 59
LET                  : 18 19
LKEY                 : 57 58 71 78 81 84
LOOP                 : 84
LPAREN               : 47 48 62 63 64 65 77
MACRO                : 
MATCH                : 81
MATH_REMINDER        : 
MINUS                : 60 61
MOD                  : 
MOREEQUAL_THAN       : 82 83
MORE_THAN            : 23 59 60 61
MOV                  : 
MUT                  : 18
NEW                  : 77
NOT                  : 61 74
NOT_EQUALS           : 
OCTAL                : 29
OFFSETOF             : 
OR                   : 
OR_BIT               : 
OVERRIDE             : 
PLUS                 : 
POINT                : 14 41 43 79 79 80 80
PRINTLN              : 
PRIV                 : 
PROC                 : 
PUB                  : 
PURE                 : 
QUO_MARKS            : 
RBRACKET             : 74
REF                  : 
RETURN               : 
RIGHT_MAYUS          : 
RKEY                 : 57 58 71 78 81 84
RPAREN               : 47 48 62 63 64 65 77
SELF                 : 
SIZEOF               : 
STATIC               : 
STRING               : 25
STRUCT               : 71
SUPER                : 
TIMES                : 
TRAIT                : 
TWO_POINTS           : 21 22 24 44 44 45 45 46 46 59 66 67 72 73 77 77
TYPE                 : 
TYPEOF               : 
UNSAFE               : 
UNSIZED              : 
USE                  : 
VARIABLE             : 11 12 14 14 18 19 20 40 41 42 43 44 45 46 49 51 57 58 59 66 67 71 72 73 78 81
VEC                  : 33 74
VIRTUAL              : 
WHERE                : 
WHILE                : 
XOR_BIT              : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

apuntador            : 24
argumento            : 47 51 52 55 56
argumentos           : 42 43 44
asignacion           : 1
atributos            : 71 73
content              : 81 83
creacion             : 15 16 17
cuerpo               : 70 0
cuerpoFuncion        : 57 58 78 82 83 84
dato                 : 21 22 23 35 50 52 60 66 67 68 69 72 73 75 76 82 83
datoARetornar        : 62 63
datos                : 74 76
definicion           : 10 13
definirFuncion       : 4
eMatch               : 9
for                  : 7
hashMap              : 5 39
llamadaAfuncion      : 36 41 43 46 53 55
llamadaAfuncionPorAlias : 37 54 56
loop                 : 8
parametro            : 63 65 67 68
parametros           : 57 58 85
rango                : 78
struct               : 2
tipoDato             : 17 22
trait                : 57
valorAsignado        : 10 11
varEnVar             : 3 12
vector               : 6 38

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . asignacion
    (2) cuerpo -> . struct
    (3) cuerpo -> . varEnVar
    (4) cuerpo -> . definirFuncion
    (5) cuerpo -> . hashMap
    (6) cuerpo -> . vector
    (7) cuerpo -> . for
    (8) cuerpo -> . loop
    (9) cuerpo -> . eMatch
    (10) asignacion -> . definicion ASSIGN valorAsignado COMMA_DOT
    (11) asignacion -> . VARIABLE ASSIGN valorAsignado COMMA_DOT
    (12) asignacion -> . VARIABLE ASSIGN varEnVar COMMA_DOT
    (13) asignacion -> . definicion
    (71) struct -> . STRUCT VARIABLE LKEY atributos RKEY
    (14) varEnVar -> . VARIABLE POINT VARIABLE
    (57) definirFuncion -> . FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY
    (58) definirFuncion -> . FN VARIABLE parametros LKEY cuerpoFuncion RKEY
    (77) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (74) vector -> . VEC NOT LBRACKET datos RBRACKET
    (78) for -> . FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY
    (84) loop -> . LOOP LKEY cuerpoFuncion RKEY
    (81) eMatch -> . MATCH VARIABLE LKEY content RKEY
    (15) definicion -> . creacion
    (16) definicion -> . creacion COMMA_DOT
    (17) definicion -> . creacion tipoDato
    (18) creacion -> . LET MUT VARIABLE
    (19) creacion -> . LET VARIABLE
    (20) creacion -> . CONST VARIABLE

    VARIABLE        shift and go to state 12
    STRUCT          shift and go to state 13
    FN              shift and go to state 14
    HASHMAP         shift and go to state 15
    VEC             shift and go to state 16
    FOR             shift and go to state 17
    LOOP            shift and go to state 18
    MATCH           shift and go to state 19
    LET             shift and go to state 21
    CONST           shift and go to state 22

    cuerpo                         shift and go to state 1
    asignacion                     shift and go to state 2
    struct                         shift and go to state 3
    varEnVar                       shift and go to state 4
    definirFuncion                 shift and go to state 5
    hashMap                        shift and go to state 6
    vector                         shift and go to state 7
    for                            shift and go to state 8
    loop                           shift and go to state 9
    eMatch                         shift and go to state 10
    definicion                     shift and go to state 11
    creacion                       shift and go to state 20

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> asignacion .

    $end            reduce using rule 1 (cuerpo -> asignacion .)
    RKEY            reduce using rule 1 (cuerpo -> asignacion .)
    COMA            reduce using rule 1 (cuerpo -> asignacion .)


state 3

    (2) cuerpo -> struct .

    $end            reduce using rule 2 (cuerpo -> struct .)
    RKEY            reduce using rule 2 (cuerpo -> struct .)
    COMA            reduce using rule 2 (cuerpo -> struct .)


state 4

    (3) cuerpo -> varEnVar .

    $end            reduce using rule 3 (cuerpo -> varEnVar .)
    RKEY            reduce using rule 3 (cuerpo -> varEnVar .)
    COMA            reduce using rule 3 (cuerpo -> varEnVar .)


state 5

    (4) cuerpo -> definirFuncion .

    $end            reduce using rule 4 (cuerpo -> definirFuncion .)
    RKEY            reduce using rule 4 (cuerpo -> definirFuncion .)
    COMA            reduce using rule 4 (cuerpo -> definirFuncion .)


state 6

    (5) cuerpo -> hashMap .

    $end            reduce using rule 5 (cuerpo -> hashMap .)
    RKEY            reduce using rule 5 (cuerpo -> hashMap .)
    COMA            reduce using rule 5 (cuerpo -> hashMap .)


state 7

    (6) cuerpo -> vector .

    $end            reduce using rule 6 (cuerpo -> vector .)
    RKEY            reduce using rule 6 (cuerpo -> vector .)
    COMA            reduce using rule 6 (cuerpo -> vector .)


state 8

    (7) cuerpo -> for .

    $end            reduce using rule 7 (cuerpo -> for .)
    RKEY            reduce using rule 7 (cuerpo -> for .)
    COMA            reduce using rule 7 (cuerpo -> for .)


state 9

    (8) cuerpo -> loop .

    $end            reduce using rule 8 (cuerpo -> loop .)
    RKEY            reduce using rule 8 (cuerpo -> loop .)
    COMA            reduce using rule 8 (cuerpo -> loop .)


state 10

    (9) cuerpo -> eMatch .

    $end            reduce using rule 9 (cuerpo -> eMatch .)
    RKEY            reduce using rule 9 (cuerpo -> eMatch .)
    COMA            reduce using rule 9 (cuerpo -> eMatch .)


state 11

    (10) asignacion -> definicion . ASSIGN valorAsignado COMMA_DOT
    (13) asignacion -> definicion .

    ASSIGN          shift and go to state 23
    $end            reduce using rule 13 (asignacion -> definicion .)
    RKEY            reduce using rule 13 (asignacion -> definicion .)
    COMA            reduce using rule 13 (asignacion -> definicion .)


state 12

    (11) asignacion -> VARIABLE . ASSIGN valorAsignado COMMA_DOT
    (12) asignacion -> VARIABLE . ASSIGN varEnVar COMMA_DOT
    (14) varEnVar -> VARIABLE . POINT VARIABLE

    ASSIGN          shift and go to state 24
    POINT           shift and go to state 25


state 13

    (71) struct -> STRUCT . VARIABLE LKEY atributos RKEY

    VARIABLE        shift and go to state 26


state 14

    (57) definirFuncion -> FN . VARIABLE trait parametros LKEY cuerpoFuncion RKEY
    (58) definirFuncion -> FN . VARIABLE parametros LKEY cuerpoFuncion RKEY

    VARIABLE        shift and go to state 27


state 15

    (77) hashMap -> HASHMAP . TWO_POINTS TWO_POINTS NEW LPAREN RPAREN

    TWO_POINTS      shift and go to state 28


state 16

    (74) vector -> VEC . NOT LBRACKET datos RBRACKET

    NOT             shift and go to state 29


state 17

    (78) for -> FOR . VARIABLE IN rango LKEY cuerpoFuncion RKEY

    VARIABLE        shift and go to state 30


state 18

    (84) loop -> LOOP . LKEY cuerpoFuncion RKEY

    LKEY            shift and go to state 31


state 19

    (81) eMatch -> MATCH . VARIABLE LKEY content RKEY

    VARIABLE        shift and go to state 32


state 20

    (15) definicion -> creacion .
    (16) definicion -> creacion . COMMA_DOT
    (17) definicion -> creacion . tipoDato
    (21) tipoDato -> . TWO_POINTS dato
    (22) tipoDato -> . TWO_POINTS dato tipoDato
    (23) tipoDato -> . LESS_THAN dato MORE_THAN
    (24) tipoDato -> . TWO_POINTS apuntador

    ASSIGN          reduce using rule 15 (definicion -> creacion .)
    $end            reduce using rule 15 (definicion -> creacion .)
    RKEY            reduce using rule 15 (definicion -> creacion .)
    COMA            reduce using rule 15 (definicion -> creacion .)
    COMMA_DOT       shift and go to state 33
    TWO_POINTS      shift and go to state 35
    LESS_THAN       shift and go to state 36

    tipoDato                       shift and go to state 34

state 21

    (18) creacion -> LET . MUT VARIABLE
    (19) creacion -> LET . VARIABLE

    MUT             shift and go to state 37
    VARIABLE        shift and go to state 38


state 22

    (20) creacion -> CONST . VARIABLE

    VARIABLE        shift and go to state 39


state 23

    (10) asignacion -> definicion ASSIGN . valorAsignado COMMA_DOT
    (35) valorAsignado -> . dato
    (36) valorAsignado -> . llamadaAfuncion
    (37) valorAsignado -> . llamadaAfuncionPorAlias
    (38) valorAsignado -> . vector
    (39) valorAsignado -> . hashMap
    (40) valorAsignado -> . VARIABLE
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC
    (42) llamadaAfuncion -> . VARIABLE argumentos
    (43) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (44) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (45) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (46) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion
    (41) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion
    (74) vector -> . VEC NOT LBRACKET datos RBRACKET
    (77) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN

    VARIABLE        shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 55
    GENERIC         shift and go to state 56
    HASHMAP         shift and go to state 15

    valorAsignado                  shift and go to state 40
    dato                           shift and go to state 41
    llamadaAfuncion                shift and go to state 42
    llamadaAfuncionPorAlias        shift and go to state 43
    vector                         shift and go to state 44
    hashMap                        shift and go to state 45

state 24

    (11) asignacion -> VARIABLE ASSIGN . valorAsignado COMMA_DOT
    (12) asignacion -> VARIABLE ASSIGN . varEnVar COMMA_DOT
    (35) valorAsignado -> . dato
    (36) valorAsignado -> . llamadaAfuncion
    (37) valorAsignado -> . llamadaAfuncionPorAlias
    (38) valorAsignado -> . vector
    (39) valorAsignado -> . hashMap
    (40) valorAsignado -> . VARIABLE
    (14) varEnVar -> . VARIABLE POINT VARIABLE
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC
    (42) llamadaAfuncion -> . VARIABLE argumentos
    (43) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (44) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (45) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (46) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion
    (41) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion
    (74) vector -> . VEC NOT LBRACKET datos RBRACKET
    (77) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN

    VARIABLE        shift and go to state 57
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 55
    GENERIC         shift and go to state 56
    HASHMAP         shift and go to state 15

    valorAsignado                  shift and go to state 58
    varEnVar                       shift and go to state 59
    dato                           shift and go to state 41
    llamadaAfuncion                shift and go to state 42
    llamadaAfuncionPorAlias        shift and go to state 43
    vector                         shift and go to state 44
    hashMap                        shift and go to state 45

state 25

    (14) varEnVar -> VARIABLE POINT . VARIABLE

    VARIABLE        shift and go to state 60


state 26

    (71) struct -> STRUCT VARIABLE . LKEY atributos RKEY

    LKEY            shift and go to state 61


state 27

    (57) definirFuncion -> FN VARIABLE . trait parametros LKEY cuerpoFuncion RKEY
    (58) definirFuncion -> FN VARIABLE . parametros LKEY cuerpoFuncion RKEY
    (59) trait -> . LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN
    (62) parametros -> . LPAREN RPAREN datoARetornar
    (63) parametros -> . LPAREN parametro RPAREN datoARetornar
    (64) parametros -> . LPAREN RPAREN
    (65) parametros -> . LPAREN parametro RPAREN

    LESS_THAN       shift and go to state 64
    LPAREN          shift and go to state 65

    trait                          shift and go to state 62
    parametros                     shift and go to state 63

state 28

    (77) hashMap -> HASHMAP TWO_POINTS . TWO_POINTS NEW LPAREN RPAREN

    TWO_POINTS      shift and go to state 66


state 29

    (74) vector -> VEC NOT . LBRACKET datos RBRACKET

    LBRACKET        shift and go to state 67


state 30

    (78) for -> FOR VARIABLE . IN rango LKEY cuerpoFuncion RKEY

    IN              shift and go to state 68


state 31

    (84) loop -> LOOP LKEY . cuerpoFuncion RKEY
    (70) cuerpoFuncion -> . cuerpo
    (1) cuerpo -> . asignacion
    (2) cuerpo -> . struct
    (3) cuerpo -> . varEnVar
    (4) cuerpo -> . definirFuncion
    (5) cuerpo -> . hashMap
    (6) cuerpo -> . vector
    (7) cuerpo -> . for
    (8) cuerpo -> . loop
    (9) cuerpo -> . eMatch
    (10) asignacion -> . definicion ASSIGN valorAsignado COMMA_DOT
    (11) asignacion -> . VARIABLE ASSIGN valorAsignado COMMA_DOT
    (12) asignacion -> . VARIABLE ASSIGN varEnVar COMMA_DOT
    (13) asignacion -> . definicion
    (71) struct -> . STRUCT VARIABLE LKEY atributos RKEY
    (14) varEnVar -> . VARIABLE POINT VARIABLE
    (57) definirFuncion -> . FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY
    (58) definirFuncion -> . FN VARIABLE parametros LKEY cuerpoFuncion RKEY
    (77) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (74) vector -> . VEC NOT LBRACKET datos RBRACKET
    (78) for -> . FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY
    (84) loop -> . LOOP LKEY cuerpoFuncion RKEY
    (81) eMatch -> . MATCH VARIABLE LKEY content RKEY
    (15) definicion -> . creacion
    (16) definicion -> . creacion COMMA_DOT
    (17) definicion -> . creacion tipoDato
    (18) creacion -> . LET MUT VARIABLE
    (19) creacion -> . LET VARIABLE
    (20) creacion -> . CONST VARIABLE

    VARIABLE        shift and go to state 12
    STRUCT          shift and go to state 13
    FN              shift and go to state 14
    HASHMAP         shift and go to state 15
    VEC             shift and go to state 16
    FOR             shift and go to state 17
    LOOP            shift and go to state 18
    MATCH           shift and go to state 19
    LET             shift and go to state 21
    CONST           shift and go to state 22

    cuerpoFuncion                  shift and go to state 69
    cuerpo                         shift and go to state 70
    asignacion                     shift and go to state 2
    struct                         shift and go to state 3
    varEnVar                       shift and go to state 4
    definirFuncion                 shift and go to state 5
    hashMap                        shift and go to state 6
    vector                         shift and go to state 7
    for                            shift and go to state 8
    loop                           shift and go to state 9
    eMatch                         shift and go to state 10
    definicion                     shift and go to state 11
    creacion                       shift and go to state 20

state 32

    (81) eMatch -> MATCH VARIABLE . LKEY content RKEY

    LKEY            shift and go to state 71


state 33

    (16) definicion -> creacion COMMA_DOT .

    ASSIGN          reduce using rule 16 (definicion -> creacion COMMA_DOT .)
    $end            reduce using rule 16 (definicion -> creacion COMMA_DOT .)
    RKEY            reduce using rule 16 (definicion -> creacion COMMA_DOT .)
    COMA            reduce using rule 16 (definicion -> creacion COMMA_DOT .)


state 34

    (17) definicion -> creacion tipoDato .

    ASSIGN          reduce using rule 17 (definicion -> creacion tipoDato .)
    $end            reduce using rule 17 (definicion -> creacion tipoDato .)
    RKEY            reduce using rule 17 (definicion -> creacion tipoDato .)
    COMA            reduce using rule 17 (definicion -> creacion tipoDato .)


state 35

    (21) tipoDato -> TWO_POINTS . dato
    (22) tipoDato -> TWO_POINTS . dato tipoDato
    (24) tipoDato -> TWO_POINTS . apuntador
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC
    (85) apuntador -> . FN parametros

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56
    FN              shift and go to state 75

    dato                           shift and go to state 72
    apuntador                      shift and go to state 73

state 36

    (23) tipoDato -> LESS_THAN . dato MORE_THAN
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56

    dato                           shift and go to state 76

state 37

    (18) creacion -> LET MUT . VARIABLE

    VARIABLE        shift and go to state 77


state 38

    (19) creacion -> LET VARIABLE .

    COMMA_DOT       reduce using rule 19 (creacion -> LET VARIABLE .)
    TWO_POINTS      reduce using rule 19 (creacion -> LET VARIABLE .)
    LESS_THAN       reduce using rule 19 (creacion -> LET VARIABLE .)
    ASSIGN          reduce using rule 19 (creacion -> LET VARIABLE .)
    $end            reduce using rule 19 (creacion -> LET VARIABLE .)
    RKEY            reduce using rule 19 (creacion -> LET VARIABLE .)
    COMA            reduce using rule 19 (creacion -> LET VARIABLE .)


state 39

    (20) creacion -> CONST VARIABLE .

    COMMA_DOT       reduce using rule 20 (creacion -> CONST VARIABLE .)
    TWO_POINTS      reduce using rule 20 (creacion -> CONST VARIABLE .)
    LESS_THAN       reduce using rule 20 (creacion -> CONST VARIABLE .)
    ASSIGN          reduce using rule 20 (creacion -> CONST VARIABLE .)
    $end            reduce using rule 20 (creacion -> CONST VARIABLE .)
    RKEY            reduce using rule 20 (creacion -> CONST VARIABLE .)
    COMA            reduce using rule 20 (creacion -> CONST VARIABLE .)


state 40

    (10) asignacion -> definicion ASSIGN valorAsignado . COMMA_DOT

    COMMA_DOT       shift and go to state 78


state 41

    (35) valorAsignado -> dato .

    COMMA_DOT       reduce using rule 35 (valorAsignado -> dato .)


state 42

    (36) valorAsignado -> llamadaAfuncion .

    COMMA_DOT       reduce using rule 36 (valorAsignado -> llamadaAfuncion .)


state 43

    (37) valorAsignado -> llamadaAfuncionPorAlias .

    COMMA_DOT       reduce using rule 37 (valorAsignado -> llamadaAfuncionPorAlias .)


state 44

    (38) valorAsignado -> vector .

    COMMA_DOT       reduce using rule 38 (valorAsignado -> vector .)


state 45

    (39) valorAsignado -> hashMap .

    COMMA_DOT       reduce using rule 39 (valorAsignado -> hashMap .)


state 46

    (40) valorAsignado -> VARIABLE .
    (42) llamadaAfuncion -> VARIABLE . argumentos
    (43) llamadaAfuncion -> VARIABLE . argumentos POINT llamadaAfuncion
    (44) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS argumentos
    (45) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS
    (46) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS llamadaAfuncion
    (41) llamadaAfuncionPorAlias -> VARIABLE . POINT llamadaAfuncion
    (47) argumentos -> . LPAREN argumento RPAREN
    (48) argumentos -> . LPAREN RPAREN

    COMMA_DOT       reduce using rule 40 (valorAsignado -> VARIABLE .)
    TWO_POINTS      shift and go to state 81
    POINT           shift and go to state 80
    LPAREN          shift and go to state 82

    argumentos                     shift and go to state 79

state 47

    (25) dato -> STRING .

    COMMA_DOT       reduce using rule 25 (dato -> STRING .)
    TWO_POINTS      reduce using rule 25 (dato -> STRING .)
    LESS_THAN       reduce using rule 25 (dato -> STRING .)
    ASSIGN          reduce using rule 25 (dato -> STRING .)
    $end            reduce using rule 25 (dato -> STRING .)
    RKEY            reduce using rule 25 (dato -> STRING .)
    COMA            reduce using rule 25 (dato -> STRING .)
    MORE_THAN       reduce using rule 25 (dato -> STRING .)
    RPAREN          reduce using rule 25 (dato -> STRING .)
    RBRACKET        reduce using rule 25 (dato -> STRING .)
    MOREEQUAL_THAN  reduce using rule 25 (dato -> STRING .)
    LKEY            reduce using rule 25 (dato -> STRING .)


state 48

    (26) dato -> CHAR .

    COMMA_DOT       reduce using rule 26 (dato -> CHAR .)
    TWO_POINTS      reduce using rule 26 (dato -> CHAR .)
    LESS_THAN       reduce using rule 26 (dato -> CHAR .)
    ASSIGN          reduce using rule 26 (dato -> CHAR .)
    $end            reduce using rule 26 (dato -> CHAR .)
    RKEY            reduce using rule 26 (dato -> CHAR .)
    COMA            reduce using rule 26 (dato -> CHAR .)
    MORE_THAN       reduce using rule 26 (dato -> CHAR .)
    RPAREN          reduce using rule 26 (dato -> CHAR .)
    RBRACKET        reduce using rule 26 (dato -> CHAR .)
    MOREEQUAL_THAN  reduce using rule 26 (dato -> CHAR .)
    LKEY            reduce using rule 26 (dato -> CHAR .)


state 49

    (27) dato -> DECIMAL .

    COMMA_DOT       reduce using rule 27 (dato -> DECIMAL .)
    TWO_POINTS      reduce using rule 27 (dato -> DECIMAL .)
    LESS_THAN       reduce using rule 27 (dato -> DECIMAL .)
    ASSIGN          reduce using rule 27 (dato -> DECIMAL .)
    $end            reduce using rule 27 (dato -> DECIMAL .)
    RKEY            reduce using rule 27 (dato -> DECIMAL .)
    COMA            reduce using rule 27 (dato -> DECIMAL .)
    MORE_THAN       reduce using rule 27 (dato -> DECIMAL .)
    RPAREN          reduce using rule 27 (dato -> DECIMAL .)
    RBRACKET        reduce using rule 27 (dato -> DECIMAL .)
    MOREEQUAL_THAN  reduce using rule 27 (dato -> DECIMAL .)
    LKEY            reduce using rule 27 (dato -> DECIMAL .)


state 50

    (28) dato -> HEXADECIMAL .

    COMMA_DOT       reduce using rule 28 (dato -> HEXADECIMAL .)
    TWO_POINTS      reduce using rule 28 (dato -> HEXADECIMAL .)
    LESS_THAN       reduce using rule 28 (dato -> HEXADECIMAL .)
    ASSIGN          reduce using rule 28 (dato -> HEXADECIMAL .)
    $end            reduce using rule 28 (dato -> HEXADECIMAL .)
    RKEY            reduce using rule 28 (dato -> HEXADECIMAL .)
    COMA            reduce using rule 28 (dato -> HEXADECIMAL .)
    MORE_THAN       reduce using rule 28 (dato -> HEXADECIMAL .)
    RPAREN          reduce using rule 28 (dato -> HEXADECIMAL .)
    RBRACKET        reduce using rule 28 (dato -> HEXADECIMAL .)
    MOREEQUAL_THAN  reduce using rule 28 (dato -> HEXADECIMAL .)
    LKEY            reduce using rule 28 (dato -> HEXADECIMAL .)


state 51

    (29) dato -> OCTAL .

    COMMA_DOT       reduce using rule 29 (dato -> OCTAL .)
    TWO_POINTS      reduce using rule 29 (dato -> OCTAL .)
    LESS_THAN       reduce using rule 29 (dato -> OCTAL .)
    ASSIGN          reduce using rule 29 (dato -> OCTAL .)
    $end            reduce using rule 29 (dato -> OCTAL .)
    RKEY            reduce using rule 29 (dato -> OCTAL .)
    COMA            reduce using rule 29 (dato -> OCTAL .)
    MORE_THAN       reduce using rule 29 (dato -> OCTAL .)
    RPAREN          reduce using rule 29 (dato -> OCTAL .)
    RBRACKET        reduce using rule 29 (dato -> OCTAL .)
    MOREEQUAL_THAN  reduce using rule 29 (dato -> OCTAL .)
    LKEY            reduce using rule 29 (dato -> OCTAL .)


state 52

    (30) dato -> BINARIO .

    COMMA_DOT       reduce using rule 30 (dato -> BINARIO .)
    TWO_POINTS      reduce using rule 30 (dato -> BINARIO .)
    LESS_THAN       reduce using rule 30 (dato -> BINARIO .)
    ASSIGN          reduce using rule 30 (dato -> BINARIO .)
    $end            reduce using rule 30 (dato -> BINARIO .)
    RKEY            reduce using rule 30 (dato -> BINARIO .)
    COMA            reduce using rule 30 (dato -> BINARIO .)
    MORE_THAN       reduce using rule 30 (dato -> BINARIO .)
    RPAREN          reduce using rule 30 (dato -> BINARIO .)
    RBRACKET        reduce using rule 30 (dato -> BINARIO .)
    MOREEQUAL_THAN  reduce using rule 30 (dato -> BINARIO .)
    LKEY            reduce using rule 30 (dato -> BINARIO .)


state 53

    (31) dato -> BOOL .

    COMMA_DOT       reduce using rule 31 (dato -> BOOL .)
    TWO_POINTS      reduce using rule 31 (dato -> BOOL .)
    LESS_THAN       reduce using rule 31 (dato -> BOOL .)
    ASSIGN          reduce using rule 31 (dato -> BOOL .)
    $end            reduce using rule 31 (dato -> BOOL .)
    RKEY            reduce using rule 31 (dato -> BOOL .)
    COMA            reduce using rule 31 (dato -> BOOL .)
    MORE_THAN       reduce using rule 31 (dato -> BOOL .)
    RPAREN          reduce using rule 31 (dato -> BOOL .)
    RBRACKET        reduce using rule 31 (dato -> BOOL .)
    MOREEQUAL_THAN  reduce using rule 31 (dato -> BOOL .)
    LKEY            reduce using rule 31 (dato -> BOOL .)


state 54

    (32) dato -> FLOAT .

    COMMA_DOT       reduce using rule 32 (dato -> FLOAT .)
    TWO_POINTS      reduce using rule 32 (dato -> FLOAT .)
    LESS_THAN       reduce using rule 32 (dato -> FLOAT .)
    ASSIGN          reduce using rule 32 (dato -> FLOAT .)
    $end            reduce using rule 32 (dato -> FLOAT .)
    RKEY            reduce using rule 32 (dato -> FLOAT .)
    COMA            reduce using rule 32 (dato -> FLOAT .)
    MORE_THAN       reduce using rule 32 (dato -> FLOAT .)
    RPAREN          reduce using rule 32 (dato -> FLOAT .)
    RBRACKET        reduce using rule 32 (dato -> FLOAT .)
    MOREEQUAL_THAN  reduce using rule 32 (dato -> FLOAT .)
    LKEY            reduce using rule 32 (dato -> FLOAT .)


state 55

    (33) dato -> VEC .
    (74) vector -> VEC . NOT LBRACKET datos RBRACKET

    COMMA_DOT       reduce using rule 33 (dato -> VEC .)
    NOT             shift and go to state 29


state 56

    (34) dato -> GENERIC .

    COMMA_DOT       reduce using rule 34 (dato -> GENERIC .)
    TWO_POINTS      reduce using rule 34 (dato -> GENERIC .)
    LESS_THAN       reduce using rule 34 (dato -> GENERIC .)
    ASSIGN          reduce using rule 34 (dato -> GENERIC .)
    $end            reduce using rule 34 (dato -> GENERIC .)
    RKEY            reduce using rule 34 (dato -> GENERIC .)
    COMA            reduce using rule 34 (dato -> GENERIC .)
    MORE_THAN       reduce using rule 34 (dato -> GENERIC .)
    RPAREN          reduce using rule 34 (dato -> GENERIC .)
    RBRACKET        reduce using rule 34 (dato -> GENERIC .)
    MOREEQUAL_THAN  reduce using rule 34 (dato -> GENERIC .)
    LKEY            reduce using rule 34 (dato -> GENERIC .)


state 57

    (40) valorAsignado -> VARIABLE .
    (14) varEnVar -> VARIABLE . POINT VARIABLE
    (42) llamadaAfuncion -> VARIABLE . argumentos
    (43) llamadaAfuncion -> VARIABLE . argumentos POINT llamadaAfuncion
    (44) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS argumentos
    (45) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS
    (46) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS llamadaAfuncion
    (41) llamadaAfuncionPorAlias -> VARIABLE . POINT llamadaAfuncion
    (47) argumentos -> . LPAREN argumento RPAREN
    (48) argumentos -> . LPAREN RPAREN

    COMMA_DOT       reduce using rule 40 (valorAsignado -> VARIABLE .)
    POINT           shift and go to state 83
    TWO_POINTS      shift and go to state 81
    LPAREN          shift and go to state 82

    argumentos                     shift and go to state 79

state 58

    (11) asignacion -> VARIABLE ASSIGN valorAsignado . COMMA_DOT

    COMMA_DOT       shift and go to state 84


state 59

    (12) asignacion -> VARIABLE ASSIGN varEnVar . COMMA_DOT

    COMMA_DOT       shift and go to state 85


state 60

    (14) varEnVar -> VARIABLE POINT VARIABLE .

    $end            reduce using rule 14 (varEnVar -> VARIABLE POINT VARIABLE .)
    RKEY            reduce using rule 14 (varEnVar -> VARIABLE POINT VARIABLE .)
    COMA            reduce using rule 14 (varEnVar -> VARIABLE POINT VARIABLE .)


state 61

    (71) struct -> STRUCT VARIABLE LKEY . atributos RKEY
    (72) atributos -> . VARIABLE TWO_POINTS dato
    (73) atributos -> . VARIABLE TWO_POINTS dato COMA atributos

    VARIABLE        shift and go to state 86

    atributos                      shift and go to state 87

state 62

    (57) definirFuncion -> FN VARIABLE trait . parametros LKEY cuerpoFuncion RKEY
    (62) parametros -> . LPAREN RPAREN datoARetornar
    (63) parametros -> . LPAREN parametro RPAREN datoARetornar
    (64) parametros -> . LPAREN RPAREN
    (65) parametros -> . LPAREN parametro RPAREN

    LPAREN          shift and go to state 65

    parametros                     shift and go to state 88

state 63

    (58) definirFuncion -> FN VARIABLE parametros . LKEY cuerpoFuncion RKEY

    LKEY            shift and go to state 89


state 64

    (59) trait -> LESS_THAN . GENERIC TWO_POINTS VARIABLE MORE_THAN

    GENERIC         shift and go to state 90


state 65

    (62) parametros -> LPAREN . RPAREN datoARetornar
    (63) parametros -> LPAREN . parametro RPAREN datoARetornar
    (64) parametros -> LPAREN . RPAREN
    (65) parametros -> LPAREN . parametro RPAREN
    (66) parametro -> . VARIABLE TWO_POINTS dato
    (67) parametro -> . VARIABLE TWO_POINTS dato COMA parametro
    (68) parametro -> . dato COMA parametro
    (69) parametro -> . dato
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC

    RPAREN          shift and go to state 91
    VARIABLE        shift and go to state 93
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56

    parametro                      shift and go to state 92
    dato                           shift and go to state 94

state 66

    (77) hashMap -> HASHMAP TWO_POINTS TWO_POINTS . NEW LPAREN RPAREN

    NEW             shift and go to state 95


state 67

    (74) vector -> VEC NOT LBRACKET . datos RBRACKET
    (75) datos -> . dato
    (76) datos -> . dato COMA datos
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56

    datos                          shift and go to state 96
    dato                           shift and go to state 97

state 68

    (78) for -> FOR VARIABLE IN . rango LKEY cuerpoFuncion RKEY
    (79) rango -> . DECIMAL POINT POINT DECIMAL
    (80) rango -> . DECIMAL POINT POINT ASSIGN DECIMAL

    DECIMAL         shift and go to state 99

    rango                          shift and go to state 98

state 69

    (84) loop -> LOOP LKEY cuerpoFuncion . RKEY

    RKEY            shift and go to state 100


state 70

    (70) cuerpoFuncion -> cuerpo .

    RKEY            reduce using rule 70 (cuerpoFuncion -> cuerpo .)
    COMA            reduce using rule 70 (cuerpoFuncion -> cuerpo .)


state 71

    (81) eMatch -> MATCH VARIABLE LKEY . content RKEY
    (82) content -> . dato MOREEQUAL_THAN cuerpoFuncion
    (83) content -> . dato MOREEQUAL_THAN cuerpoFuncion COMA content
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56

    content                        shift and go to state 101
    dato                           shift and go to state 102

state 72

    (21) tipoDato -> TWO_POINTS dato .
    (22) tipoDato -> TWO_POINTS dato . tipoDato
    (21) tipoDato -> . TWO_POINTS dato
    (22) tipoDato -> . TWO_POINTS dato tipoDato
    (23) tipoDato -> . LESS_THAN dato MORE_THAN
    (24) tipoDato -> . TWO_POINTS apuntador

    ASSIGN          reduce using rule 21 (tipoDato -> TWO_POINTS dato .)
    $end            reduce using rule 21 (tipoDato -> TWO_POINTS dato .)
    RKEY            reduce using rule 21 (tipoDato -> TWO_POINTS dato .)
    COMA            reduce using rule 21 (tipoDato -> TWO_POINTS dato .)
    TWO_POINTS      shift and go to state 35
    LESS_THAN       shift and go to state 36

    tipoDato                       shift and go to state 103

state 73

    (24) tipoDato -> TWO_POINTS apuntador .

    ASSIGN          reduce using rule 24 (tipoDato -> TWO_POINTS apuntador .)
    $end            reduce using rule 24 (tipoDato -> TWO_POINTS apuntador .)
    RKEY            reduce using rule 24 (tipoDato -> TWO_POINTS apuntador .)
    COMA            reduce using rule 24 (tipoDato -> TWO_POINTS apuntador .)


state 74

    (33) dato -> VEC .

    TWO_POINTS      reduce using rule 33 (dato -> VEC .)
    LESS_THAN       reduce using rule 33 (dato -> VEC .)
    ASSIGN          reduce using rule 33 (dato -> VEC .)
    $end            reduce using rule 33 (dato -> VEC .)
    RKEY            reduce using rule 33 (dato -> VEC .)
    COMA            reduce using rule 33 (dato -> VEC .)
    MORE_THAN       reduce using rule 33 (dato -> VEC .)
    RPAREN          reduce using rule 33 (dato -> VEC .)
    RBRACKET        reduce using rule 33 (dato -> VEC .)
    MOREEQUAL_THAN  reduce using rule 33 (dato -> VEC .)
    LKEY            reduce using rule 33 (dato -> VEC .)


state 75

    (85) apuntador -> FN . parametros
    (62) parametros -> . LPAREN RPAREN datoARetornar
    (63) parametros -> . LPAREN parametro RPAREN datoARetornar
    (64) parametros -> . LPAREN RPAREN
    (65) parametros -> . LPAREN parametro RPAREN

    LPAREN          shift and go to state 65

    parametros                     shift and go to state 104

state 76

    (23) tipoDato -> LESS_THAN dato . MORE_THAN

    MORE_THAN       shift and go to state 105


state 77

    (18) creacion -> LET MUT VARIABLE .

    COMMA_DOT       reduce using rule 18 (creacion -> LET MUT VARIABLE .)
    TWO_POINTS      reduce using rule 18 (creacion -> LET MUT VARIABLE .)
    LESS_THAN       reduce using rule 18 (creacion -> LET MUT VARIABLE .)
    ASSIGN          reduce using rule 18 (creacion -> LET MUT VARIABLE .)
    $end            reduce using rule 18 (creacion -> LET MUT VARIABLE .)
    RKEY            reduce using rule 18 (creacion -> LET MUT VARIABLE .)
    COMA            reduce using rule 18 (creacion -> LET MUT VARIABLE .)


state 78

    (10) asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .

    $end            reduce using rule 10 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    RKEY            reduce using rule 10 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)
    COMA            reduce using rule 10 (asignacion -> definicion ASSIGN valorAsignado COMMA_DOT .)


state 79

    (42) llamadaAfuncion -> VARIABLE argumentos .
    (43) llamadaAfuncion -> VARIABLE argumentos . POINT llamadaAfuncion

    COMMA_DOT       reduce using rule 42 (llamadaAfuncion -> VARIABLE argumentos .)
    COMA            reduce using rule 42 (llamadaAfuncion -> VARIABLE argumentos .)
    RPAREN          reduce using rule 42 (llamadaAfuncion -> VARIABLE argumentos .)
    POINT           shift and go to state 106


state 80

    (41) llamadaAfuncionPorAlias -> VARIABLE POINT . llamadaAfuncion
    (42) llamadaAfuncion -> . VARIABLE argumentos
    (43) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (44) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (45) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (46) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion

    VARIABLE        shift and go to state 107

    llamadaAfuncion                shift and go to state 108

state 81

    (44) llamadaAfuncion -> VARIABLE TWO_POINTS . TWO_POINTS argumentos
    (45) llamadaAfuncion -> VARIABLE TWO_POINTS . TWO_POINTS
    (46) llamadaAfuncion -> VARIABLE TWO_POINTS . TWO_POINTS llamadaAfuncion

    TWO_POINTS      shift and go to state 109


state 82

    (47) argumentos -> LPAREN . argumento RPAREN
    (48) argumentos -> LPAREN . RPAREN
    (49) argumento -> . VARIABLE
    (50) argumento -> . dato
    (51) argumento -> . VARIABLE COMA argumento
    (52) argumento -> . dato COMA argumento
    (53) argumento -> . llamadaAfuncion
    (54) argumento -> . llamadaAfuncionPorAlias
    (55) argumento -> . llamadaAfuncion COMA argumento
    (56) argumento -> . llamadaAfuncionPorAlias COMA argumento
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC
    (42) llamadaAfuncion -> . VARIABLE argumentos
    (43) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (44) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (45) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (46) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion
    (41) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    RPAREN          shift and go to state 111
    VARIABLE        shift and go to state 112
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56

    argumento                      shift and go to state 110
    dato                           shift and go to state 113
    llamadaAfuncion                shift and go to state 114
    llamadaAfuncionPorAlias        shift and go to state 115

state 83

    (14) varEnVar -> VARIABLE POINT . VARIABLE
    (41) llamadaAfuncionPorAlias -> VARIABLE POINT . llamadaAfuncion
    (42) llamadaAfuncion -> . VARIABLE argumentos
    (43) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (44) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (45) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (46) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion

    VARIABLE        shift and go to state 116

    llamadaAfuncion                shift and go to state 108

state 84

    (11) asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .

    $end            reduce using rule 11 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    RKEY            reduce using rule 11 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)
    COMA            reduce using rule 11 (asignacion -> VARIABLE ASSIGN valorAsignado COMMA_DOT .)


state 85

    (12) asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .

    $end            reduce using rule 12 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    RKEY            reduce using rule 12 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)
    COMA            reduce using rule 12 (asignacion -> VARIABLE ASSIGN varEnVar COMMA_DOT .)


state 86

    (72) atributos -> VARIABLE . TWO_POINTS dato
    (73) atributos -> VARIABLE . TWO_POINTS dato COMA atributos

    TWO_POINTS      shift and go to state 117


state 87

    (71) struct -> STRUCT VARIABLE LKEY atributos . RKEY

    RKEY            shift and go to state 118


state 88

    (57) definirFuncion -> FN VARIABLE trait parametros . LKEY cuerpoFuncion RKEY

    LKEY            shift and go to state 119


state 89

    (58) definirFuncion -> FN VARIABLE parametros LKEY . cuerpoFuncion RKEY
    (70) cuerpoFuncion -> . cuerpo
    (1) cuerpo -> . asignacion
    (2) cuerpo -> . struct
    (3) cuerpo -> . varEnVar
    (4) cuerpo -> . definirFuncion
    (5) cuerpo -> . hashMap
    (6) cuerpo -> . vector
    (7) cuerpo -> . for
    (8) cuerpo -> . loop
    (9) cuerpo -> . eMatch
    (10) asignacion -> . definicion ASSIGN valorAsignado COMMA_DOT
    (11) asignacion -> . VARIABLE ASSIGN valorAsignado COMMA_DOT
    (12) asignacion -> . VARIABLE ASSIGN varEnVar COMMA_DOT
    (13) asignacion -> . definicion
    (71) struct -> . STRUCT VARIABLE LKEY atributos RKEY
    (14) varEnVar -> . VARIABLE POINT VARIABLE
    (57) definirFuncion -> . FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY
    (58) definirFuncion -> . FN VARIABLE parametros LKEY cuerpoFuncion RKEY
    (77) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (74) vector -> . VEC NOT LBRACKET datos RBRACKET
    (78) for -> . FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY
    (84) loop -> . LOOP LKEY cuerpoFuncion RKEY
    (81) eMatch -> . MATCH VARIABLE LKEY content RKEY
    (15) definicion -> . creacion
    (16) definicion -> . creacion COMMA_DOT
    (17) definicion -> . creacion tipoDato
    (18) creacion -> . LET MUT VARIABLE
    (19) creacion -> . LET VARIABLE
    (20) creacion -> . CONST VARIABLE

    VARIABLE        shift and go to state 12
    STRUCT          shift and go to state 13
    FN              shift and go to state 14
    HASHMAP         shift and go to state 15
    VEC             shift and go to state 16
    FOR             shift and go to state 17
    LOOP            shift and go to state 18
    MATCH           shift and go to state 19
    LET             shift and go to state 21
    CONST           shift and go to state 22

    cuerpoFuncion                  shift and go to state 120
    cuerpo                         shift and go to state 70
    asignacion                     shift and go to state 2
    struct                         shift and go to state 3
    varEnVar                       shift and go to state 4
    definirFuncion                 shift and go to state 5
    hashMap                        shift and go to state 6
    vector                         shift and go to state 7
    for                            shift and go to state 8
    loop                           shift and go to state 9
    eMatch                         shift and go to state 10
    definicion                     shift and go to state 11
    creacion                       shift and go to state 20

state 90

    (59) trait -> LESS_THAN GENERIC . TWO_POINTS VARIABLE MORE_THAN

    TWO_POINTS      shift and go to state 121


state 91

    (62) parametros -> LPAREN RPAREN . datoARetornar
    (64) parametros -> LPAREN RPAREN .
    (60) datoARetornar -> . MINUS MORE_THAN dato
    (61) datoARetornar -> . MINUS MORE_THAN NOT

    LKEY            reduce using rule 64 (parametros -> LPAREN RPAREN .)
    ASSIGN          reduce using rule 64 (parametros -> LPAREN RPAREN .)
    $end            reduce using rule 64 (parametros -> LPAREN RPAREN .)
    RKEY            reduce using rule 64 (parametros -> LPAREN RPAREN .)
    COMA            reduce using rule 64 (parametros -> LPAREN RPAREN .)
    MINUS           shift and go to state 123

    datoARetornar                  shift and go to state 122

state 92

    (63) parametros -> LPAREN parametro . RPAREN datoARetornar
    (65) parametros -> LPAREN parametro . RPAREN

    RPAREN          shift and go to state 124


state 93

    (66) parametro -> VARIABLE . TWO_POINTS dato
    (67) parametro -> VARIABLE . TWO_POINTS dato COMA parametro

    TWO_POINTS      shift and go to state 125


state 94

    (68) parametro -> dato . COMA parametro
    (69) parametro -> dato .

    COMA            shift and go to state 126
    RPAREN          reduce using rule 69 (parametro -> dato .)


state 95

    (77) hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW . LPAREN RPAREN

    LPAREN          shift and go to state 127


state 96

    (74) vector -> VEC NOT LBRACKET datos . RBRACKET

    RBRACKET        shift and go to state 128


state 97

    (75) datos -> dato .
    (76) datos -> dato . COMA datos

    RBRACKET        reduce using rule 75 (datos -> dato .)
    COMA            shift and go to state 129


state 98

    (78) for -> FOR VARIABLE IN rango . LKEY cuerpoFuncion RKEY

    LKEY            shift and go to state 130


state 99

    (79) rango -> DECIMAL . POINT POINT DECIMAL
    (80) rango -> DECIMAL . POINT POINT ASSIGN DECIMAL

    POINT           shift and go to state 131


state 100

    (84) loop -> LOOP LKEY cuerpoFuncion RKEY .

    $end            reduce using rule 84 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    RKEY            reduce using rule 84 (loop -> LOOP LKEY cuerpoFuncion RKEY .)
    COMA            reduce using rule 84 (loop -> LOOP LKEY cuerpoFuncion RKEY .)


state 101

    (81) eMatch -> MATCH VARIABLE LKEY content . RKEY

    RKEY            shift and go to state 132


state 102

    (82) content -> dato . MOREEQUAL_THAN cuerpoFuncion
    (83) content -> dato . MOREEQUAL_THAN cuerpoFuncion COMA content

    MOREEQUAL_THAN  shift and go to state 133


state 103

    (22) tipoDato -> TWO_POINTS dato tipoDato .

    ASSIGN          reduce using rule 22 (tipoDato -> TWO_POINTS dato tipoDato .)
    $end            reduce using rule 22 (tipoDato -> TWO_POINTS dato tipoDato .)
    RKEY            reduce using rule 22 (tipoDato -> TWO_POINTS dato tipoDato .)
    COMA            reduce using rule 22 (tipoDato -> TWO_POINTS dato tipoDato .)


state 104

    (85) apuntador -> FN parametros .

    ASSIGN          reduce using rule 85 (apuntador -> FN parametros .)
    $end            reduce using rule 85 (apuntador -> FN parametros .)
    RKEY            reduce using rule 85 (apuntador -> FN parametros .)
    COMA            reduce using rule 85 (apuntador -> FN parametros .)


state 105

    (23) tipoDato -> LESS_THAN dato MORE_THAN .

    ASSIGN          reduce using rule 23 (tipoDato -> LESS_THAN dato MORE_THAN .)
    $end            reduce using rule 23 (tipoDato -> LESS_THAN dato MORE_THAN .)
    RKEY            reduce using rule 23 (tipoDato -> LESS_THAN dato MORE_THAN .)
    COMA            reduce using rule 23 (tipoDato -> LESS_THAN dato MORE_THAN .)


state 106

    (43) llamadaAfuncion -> VARIABLE argumentos POINT . llamadaAfuncion
    (42) llamadaAfuncion -> . VARIABLE argumentos
    (43) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (44) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (45) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (46) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion

    VARIABLE        shift and go to state 107

    llamadaAfuncion                shift and go to state 134

state 107

    (42) llamadaAfuncion -> VARIABLE . argumentos
    (43) llamadaAfuncion -> VARIABLE . argumentos POINT llamadaAfuncion
    (44) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS argumentos
    (45) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS
    (46) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS llamadaAfuncion
    (47) argumentos -> . LPAREN argumento RPAREN
    (48) argumentos -> . LPAREN RPAREN

    TWO_POINTS      shift and go to state 81
    LPAREN          shift and go to state 82

    argumentos                     shift and go to state 79

state 108

    (41) llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion .

    COMMA_DOT       reduce using rule 41 (llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion .)
    COMA            reduce using rule 41 (llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion .)
    RPAREN          reduce using rule 41 (llamadaAfuncionPorAlias -> VARIABLE POINT llamadaAfuncion .)


state 109

    (44) llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS . argumentos
    (45) llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS .
    (46) llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS . llamadaAfuncion
    (47) argumentos -> . LPAREN argumento RPAREN
    (48) argumentos -> . LPAREN RPAREN
    (42) llamadaAfuncion -> . VARIABLE argumentos
    (43) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (44) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (45) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (46) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion

    COMMA_DOT       reduce using rule 45 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS .)
    COMA            reduce using rule 45 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS .)
    RPAREN          reduce using rule 45 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS .)
    LPAREN          shift and go to state 82
    VARIABLE        shift and go to state 107

    argumentos                     shift and go to state 135
    llamadaAfuncion                shift and go to state 136

state 110

    (47) argumentos -> LPAREN argumento . RPAREN

    RPAREN          shift and go to state 137


state 111

    (48) argumentos -> LPAREN RPAREN .

    POINT           reduce using rule 48 (argumentos -> LPAREN RPAREN .)
    COMMA_DOT       reduce using rule 48 (argumentos -> LPAREN RPAREN .)
    COMA            reduce using rule 48 (argumentos -> LPAREN RPAREN .)
    RPAREN          reduce using rule 48 (argumentos -> LPAREN RPAREN .)


state 112

    (49) argumento -> VARIABLE .
    (51) argumento -> VARIABLE . COMA argumento
    (42) llamadaAfuncion -> VARIABLE . argumentos
    (43) llamadaAfuncion -> VARIABLE . argumentos POINT llamadaAfuncion
    (44) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS argumentos
    (45) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS
    (46) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS llamadaAfuncion
    (41) llamadaAfuncionPorAlias -> VARIABLE . POINT llamadaAfuncion
    (47) argumentos -> . LPAREN argumento RPAREN
    (48) argumentos -> . LPAREN RPAREN

    RPAREN          reduce using rule 49 (argumento -> VARIABLE .)
    COMA            shift and go to state 138
    TWO_POINTS      shift and go to state 81
    POINT           shift and go to state 80
    LPAREN          shift and go to state 82

    argumentos                     shift and go to state 79

state 113

    (50) argumento -> dato .
    (52) argumento -> dato . COMA argumento

    RPAREN          reduce using rule 50 (argumento -> dato .)
    COMA            shift and go to state 139


state 114

    (53) argumento -> llamadaAfuncion .
    (55) argumento -> llamadaAfuncion . COMA argumento

    RPAREN          reduce using rule 53 (argumento -> llamadaAfuncion .)
    COMA            shift and go to state 140


state 115

    (54) argumento -> llamadaAfuncionPorAlias .
    (56) argumento -> llamadaAfuncionPorAlias . COMA argumento

    RPAREN          reduce using rule 54 (argumento -> llamadaAfuncionPorAlias .)
    COMA            shift and go to state 141


state 116

    (14) varEnVar -> VARIABLE POINT VARIABLE .
    (42) llamadaAfuncion -> VARIABLE . argumentos
    (43) llamadaAfuncion -> VARIABLE . argumentos POINT llamadaAfuncion
    (44) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS argumentos
    (45) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS
    (46) llamadaAfuncion -> VARIABLE . TWO_POINTS TWO_POINTS llamadaAfuncion
    (47) argumentos -> . LPAREN argumento RPAREN
    (48) argumentos -> . LPAREN RPAREN

    COMMA_DOT       reduce using rule 14 (varEnVar -> VARIABLE POINT VARIABLE .)
    TWO_POINTS      shift and go to state 81
    LPAREN          shift and go to state 82

    argumentos                     shift and go to state 79

state 117

    (72) atributos -> VARIABLE TWO_POINTS . dato
    (73) atributos -> VARIABLE TWO_POINTS . dato COMA atributos
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56

    dato                           shift and go to state 142

state 118

    (71) struct -> STRUCT VARIABLE LKEY atributos RKEY .

    $end            reduce using rule 71 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    RKEY            reduce using rule 71 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)
    COMA            reduce using rule 71 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)


state 119

    (57) definirFuncion -> FN VARIABLE trait parametros LKEY . cuerpoFuncion RKEY
    (70) cuerpoFuncion -> . cuerpo
    (1) cuerpo -> . asignacion
    (2) cuerpo -> . struct
    (3) cuerpo -> . varEnVar
    (4) cuerpo -> . definirFuncion
    (5) cuerpo -> . hashMap
    (6) cuerpo -> . vector
    (7) cuerpo -> . for
    (8) cuerpo -> . loop
    (9) cuerpo -> . eMatch
    (10) asignacion -> . definicion ASSIGN valorAsignado COMMA_DOT
    (11) asignacion -> . VARIABLE ASSIGN valorAsignado COMMA_DOT
    (12) asignacion -> . VARIABLE ASSIGN varEnVar COMMA_DOT
    (13) asignacion -> . definicion
    (71) struct -> . STRUCT VARIABLE LKEY atributos RKEY
    (14) varEnVar -> . VARIABLE POINT VARIABLE
    (57) definirFuncion -> . FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY
    (58) definirFuncion -> . FN VARIABLE parametros LKEY cuerpoFuncion RKEY
    (77) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (74) vector -> . VEC NOT LBRACKET datos RBRACKET
    (78) for -> . FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY
    (84) loop -> . LOOP LKEY cuerpoFuncion RKEY
    (81) eMatch -> . MATCH VARIABLE LKEY content RKEY
    (15) definicion -> . creacion
    (16) definicion -> . creacion COMMA_DOT
    (17) definicion -> . creacion tipoDato
    (18) creacion -> . LET MUT VARIABLE
    (19) creacion -> . LET VARIABLE
    (20) creacion -> . CONST VARIABLE

    VARIABLE        shift and go to state 12
    STRUCT          shift and go to state 13
    FN              shift and go to state 14
    HASHMAP         shift and go to state 15
    VEC             shift and go to state 16
    FOR             shift and go to state 17
    LOOP            shift and go to state 18
    MATCH           shift and go to state 19
    LET             shift and go to state 21
    CONST           shift and go to state 22

    cuerpoFuncion                  shift and go to state 143
    cuerpo                         shift and go to state 70
    asignacion                     shift and go to state 2
    struct                         shift and go to state 3
    varEnVar                       shift and go to state 4
    definirFuncion                 shift and go to state 5
    hashMap                        shift and go to state 6
    vector                         shift and go to state 7
    for                            shift and go to state 8
    loop                           shift and go to state 9
    eMatch                         shift and go to state 10
    definicion                     shift and go to state 11
    creacion                       shift and go to state 20

state 120

    (58) definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion . RKEY

    RKEY            shift and go to state 144


state 121

    (59) trait -> LESS_THAN GENERIC TWO_POINTS . VARIABLE MORE_THAN

    VARIABLE        shift and go to state 145


state 122

    (62) parametros -> LPAREN RPAREN datoARetornar .

    LKEY            reduce using rule 62 (parametros -> LPAREN RPAREN datoARetornar .)
    ASSIGN          reduce using rule 62 (parametros -> LPAREN RPAREN datoARetornar .)
    $end            reduce using rule 62 (parametros -> LPAREN RPAREN datoARetornar .)
    RKEY            reduce using rule 62 (parametros -> LPAREN RPAREN datoARetornar .)
    COMA            reduce using rule 62 (parametros -> LPAREN RPAREN datoARetornar .)


state 123

    (60) datoARetornar -> MINUS . MORE_THAN dato
    (61) datoARetornar -> MINUS . MORE_THAN NOT

    MORE_THAN       shift and go to state 146


state 124

    (63) parametros -> LPAREN parametro RPAREN . datoARetornar
    (65) parametros -> LPAREN parametro RPAREN .
    (60) datoARetornar -> . MINUS MORE_THAN dato
    (61) datoARetornar -> . MINUS MORE_THAN NOT

    LKEY            reduce using rule 65 (parametros -> LPAREN parametro RPAREN .)
    ASSIGN          reduce using rule 65 (parametros -> LPAREN parametro RPAREN .)
    $end            reduce using rule 65 (parametros -> LPAREN parametro RPAREN .)
    RKEY            reduce using rule 65 (parametros -> LPAREN parametro RPAREN .)
    COMA            reduce using rule 65 (parametros -> LPAREN parametro RPAREN .)
    MINUS           shift and go to state 123

    datoARetornar                  shift and go to state 147

state 125

    (66) parametro -> VARIABLE TWO_POINTS . dato
    (67) parametro -> VARIABLE TWO_POINTS . dato COMA parametro
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56

    dato                           shift and go to state 148

state 126

    (68) parametro -> dato COMA . parametro
    (66) parametro -> . VARIABLE TWO_POINTS dato
    (67) parametro -> . VARIABLE TWO_POINTS dato COMA parametro
    (68) parametro -> . dato COMA parametro
    (69) parametro -> . dato
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC

    VARIABLE        shift and go to state 93
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56

    dato                           shift and go to state 94
    parametro                      shift and go to state 149

state 127

    (77) hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN . RPAREN

    RPAREN          shift and go to state 150


state 128

    (74) vector -> VEC NOT LBRACKET datos RBRACKET .

    $end            reduce using rule 74 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    COMMA_DOT       reduce using rule 74 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    RKEY            reduce using rule 74 (vector -> VEC NOT LBRACKET datos RBRACKET .)
    COMA            reduce using rule 74 (vector -> VEC NOT LBRACKET datos RBRACKET .)


state 129

    (76) datos -> dato COMA . datos
    (75) datos -> . dato
    (76) datos -> . dato COMA datos
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56

    dato                           shift and go to state 97
    datos                          shift and go to state 151

state 130

    (78) for -> FOR VARIABLE IN rango LKEY . cuerpoFuncion RKEY
    (70) cuerpoFuncion -> . cuerpo
    (1) cuerpo -> . asignacion
    (2) cuerpo -> . struct
    (3) cuerpo -> . varEnVar
    (4) cuerpo -> . definirFuncion
    (5) cuerpo -> . hashMap
    (6) cuerpo -> . vector
    (7) cuerpo -> . for
    (8) cuerpo -> . loop
    (9) cuerpo -> . eMatch
    (10) asignacion -> . definicion ASSIGN valorAsignado COMMA_DOT
    (11) asignacion -> . VARIABLE ASSIGN valorAsignado COMMA_DOT
    (12) asignacion -> . VARIABLE ASSIGN varEnVar COMMA_DOT
    (13) asignacion -> . definicion
    (71) struct -> . STRUCT VARIABLE LKEY atributos RKEY
    (14) varEnVar -> . VARIABLE POINT VARIABLE
    (57) definirFuncion -> . FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY
    (58) definirFuncion -> . FN VARIABLE parametros LKEY cuerpoFuncion RKEY
    (77) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (74) vector -> . VEC NOT LBRACKET datos RBRACKET
    (78) for -> . FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY
    (84) loop -> . LOOP LKEY cuerpoFuncion RKEY
    (81) eMatch -> . MATCH VARIABLE LKEY content RKEY
    (15) definicion -> . creacion
    (16) definicion -> . creacion COMMA_DOT
    (17) definicion -> . creacion tipoDato
    (18) creacion -> . LET MUT VARIABLE
    (19) creacion -> . LET VARIABLE
    (20) creacion -> . CONST VARIABLE

    VARIABLE        shift and go to state 12
    STRUCT          shift and go to state 13
    FN              shift and go to state 14
    HASHMAP         shift and go to state 15
    VEC             shift and go to state 16
    FOR             shift and go to state 17
    LOOP            shift and go to state 18
    MATCH           shift and go to state 19
    LET             shift and go to state 21
    CONST           shift and go to state 22

    cuerpoFuncion                  shift and go to state 152
    cuerpo                         shift and go to state 70
    asignacion                     shift and go to state 2
    struct                         shift and go to state 3
    varEnVar                       shift and go to state 4
    definirFuncion                 shift and go to state 5
    hashMap                        shift and go to state 6
    vector                         shift and go to state 7
    for                            shift and go to state 8
    loop                           shift and go to state 9
    eMatch                         shift and go to state 10
    definicion                     shift and go to state 11
    creacion                       shift and go to state 20

state 131

    (79) rango -> DECIMAL POINT . POINT DECIMAL
    (80) rango -> DECIMAL POINT . POINT ASSIGN DECIMAL

    POINT           shift and go to state 153


state 132

    (81) eMatch -> MATCH VARIABLE LKEY content RKEY .

    $end            reduce using rule 81 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    RKEY            reduce using rule 81 (eMatch -> MATCH VARIABLE LKEY content RKEY .)
    COMA            reduce using rule 81 (eMatch -> MATCH VARIABLE LKEY content RKEY .)


state 133

    (82) content -> dato MOREEQUAL_THAN . cuerpoFuncion
    (83) content -> dato MOREEQUAL_THAN . cuerpoFuncion COMA content
    (70) cuerpoFuncion -> . cuerpo
    (1) cuerpo -> . asignacion
    (2) cuerpo -> . struct
    (3) cuerpo -> . varEnVar
    (4) cuerpo -> . definirFuncion
    (5) cuerpo -> . hashMap
    (6) cuerpo -> . vector
    (7) cuerpo -> . for
    (8) cuerpo -> . loop
    (9) cuerpo -> . eMatch
    (10) asignacion -> . definicion ASSIGN valorAsignado COMMA_DOT
    (11) asignacion -> . VARIABLE ASSIGN valorAsignado COMMA_DOT
    (12) asignacion -> . VARIABLE ASSIGN varEnVar COMMA_DOT
    (13) asignacion -> . definicion
    (71) struct -> . STRUCT VARIABLE LKEY atributos RKEY
    (14) varEnVar -> . VARIABLE POINT VARIABLE
    (57) definirFuncion -> . FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY
    (58) definirFuncion -> . FN VARIABLE parametros LKEY cuerpoFuncion RKEY
    (77) hashMap -> . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN
    (74) vector -> . VEC NOT LBRACKET datos RBRACKET
    (78) for -> . FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY
    (84) loop -> . LOOP LKEY cuerpoFuncion RKEY
    (81) eMatch -> . MATCH VARIABLE LKEY content RKEY
    (15) definicion -> . creacion
    (16) definicion -> . creacion COMMA_DOT
    (17) definicion -> . creacion tipoDato
    (18) creacion -> . LET MUT VARIABLE
    (19) creacion -> . LET VARIABLE
    (20) creacion -> . CONST VARIABLE

    VARIABLE        shift and go to state 12
    STRUCT          shift and go to state 13
    FN              shift and go to state 14
    HASHMAP         shift and go to state 15
    VEC             shift and go to state 16
    FOR             shift and go to state 17
    LOOP            shift and go to state 18
    MATCH           shift and go to state 19
    LET             shift and go to state 21
    CONST           shift and go to state 22

    cuerpoFuncion                  shift and go to state 154
    cuerpo                         shift and go to state 70
    asignacion                     shift and go to state 2
    struct                         shift and go to state 3
    varEnVar                       shift and go to state 4
    definirFuncion                 shift and go to state 5
    hashMap                        shift and go to state 6
    vector                         shift and go to state 7
    for                            shift and go to state 8
    loop                           shift and go to state 9
    eMatch                         shift and go to state 10
    definicion                     shift and go to state 11
    creacion                       shift and go to state 20

state 134

    (43) llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion .

    COMMA_DOT       reduce using rule 43 (llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion .)
    COMA            reduce using rule 43 (llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion .)
    RPAREN          reduce using rule 43 (llamadaAfuncion -> VARIABLE argumentos POINT llamadaAfuncion .)


state 135

    (44) llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos .

    COMMA_DOT       reduce using rule 44 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos .)
    COMA            reduce using rule 44 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos .)
    RPAREN          reduce using rule 44 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS argumentos .)


state 136

    (46) llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion .

    COMMA_DOT       reduce using rule 46 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion .)
    COMA            reduce using rule 46 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion .)
    RPAREN          reduce using rule 46 (llamadaAfuncion -> VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion .)


state 137

    (47) argumentos -> LPAREN argumento RPAREN .

    POINT           reduce using rule 47 (argumentos -> LPAREN argumento RPAREN .)
    COMMA_DOT       reduce using rule 47 (argumentos -> LPAREN argumento RPAREN .)
    COMA            reduce using rule 47 (argumentos -> LPAREN argumento RPAREN .)
    RPAREN          reduce using rule 47 (argumentos -> LPAREN argumento RPAREN .)


state 138

    (51) argumento -> VARIABLE COMA . argumento
    (49) argumento -> . VARIABLE
    (50) argumento -> . dato
    (51) argumento -> . VARIABLE COMA argumento
    (52) argumento -> . dato COMA argumento
    (53) argumento -> . llamadaAfuncion
    (54) argumento -> . llamadaAfuncionPorAlias
    (55) argumento -> . llamadaAfuncion COMA argumento
    (56) argumento -> . llamadaAfuncionPorAlias COMA argumento
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC
    (42) llamadaAfuncion -> . VARIABLE argumentos
    (43) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (44) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (45) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (46) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion
    (41) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    VARIABLE        shift and go to state 112
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56

    argumento                      shift and go to state 155
    dato                           shift and go to state 113
    llamadaAfuncion                shift and go to state 114
    llamadaAfuncionPorAlias        shift and go to state 115

state 139

    (52) argumento -> dato COMA . argumento
    (49) argumento -> . VARIABLE
    (50) argumento -> . dato
    (51) argumento -> . VARIABLE COMA argumento
    (52) argumento -> . dato COMA argumento
    (53) argumento -> . llamadaAfuncion
    (54) argumento -> . llamadaAfuncionPorAlias
    (55) argumento -> . llamadaAfuncion COMA argumento
    (56) argumento -> . llamadaAfuncionPorAlias COMA argumento
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC
    (42) llamadaAfuncion -> . VARIABLE argumentos
    (43) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (44) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (45) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (46) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion
    (41) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    VARIABLE        shift and go to state 112
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56

    dato                           shift and go to state 113
    argumento                      shift and go to state 156
    llamadaAfuncion                shift and go to state 114
    llamadaAfuncionPorAlias        shift and go to state 115

state 140

    (55) argumento -> llamadaAfuncion COMA . argumento
    (49) argumento -> . VARIABLE
    (50) argumento -> . dato
    (51) argumento -> . VARIABLE COMA argumento
    (52) argumento -> . dato COMA argumento
    (53) argumento -> . llamadaAfuncion
    (54) argumento -> . llamadaAfuncionPorAlias
    (55) argumento -> . llamadaAfuncion COMA argumento
    (56) argumento -> . llamadaAfuncionPorAlias COMA argumento
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC
    (42) llamadaAfuncion -> . VARIABLE argumentos
    (43) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (44) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (45) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (46) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion
    (41) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    VARIABLE        shift and go to state 112
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56

    llamadaAfuncion                shift and go to state 114
    argumento                      shift and go to state 157
    dato                           shift and go to state 113
    llamadaAfuncionPorAlias        shift and go to state 115

state 141

    (56) argumento -> llamadaAfuncionPorAlias COMA . argumento
    (49) argumento -> . VARIABLE
    (50) argumento -> . dato
    (51) argumento -> . VARIABLE COMA argumento
    (52) argumento -> . dato COMA argumento
    (53) argumento -> . llamadaAfuncion
    (54) argumento -> . llamadaAfuncionPorAlias
    (55) argumento -> . llamadaAfuncion COMA argumento
    (56) argumento -> . llamadaAfuncionPorAlias COMA argumento
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC
    (42) llamadaAfuncion -> . VARIABLE argumentos
    (43) llamadaAfuncion -> . VARIABLE argumentos POINT llamadaAfuncion
    (44) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS argumentos
    (45) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS
    (46) llamadaAfuncion -> . VARIABLE TWO_POINTS TWO_POINTS llamadaAfuncion
    (41) llamadaAfuncionPorAlias -> . VARIABLE POINT llamadaAfuncion

    VARIABLE        shift and go to state 112
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56

    llamadaAfuncionPorAlias        shift and go to state 115
    argumento                      shift and go to state 158
    dato                           shift and go to state 113
    llamadaAfuncion                shift and go to state 114

state 142

    (72) atributos -> VARIABLE TWO_POINTS dato .
    (73) atributos -> VARIABLE TWO_POINTS dato . COMA atributos

    RKEY            reduce using rule 72 (atributos -> VARIABLE TWO_POINTS dato .)
    COMA            shift and go to state 159


state 143

    (57) definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion . RKEY

    RKEY            shift and go to state 160


state 144

    (58) definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .

    $end            reduce using rule 58 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    RKEY            reduce using rule 58 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)
    COMA            reduce using rule 58 (definirFuncion -> FN VARIABLE parametros LKEY cuerpoFuncion RKEY .)


state 145

    (59) trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE . MORE_THAN

    MORE_THAN       shift and go to state 161


state 146

    (60) datoARetornar -> MINUS MORE_THAN . dato
    (61) datoARetornar -> MINUS MORE_THAN . NOT
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC

    NOT             shift and go to state 163
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56

    dato                           shift and go to state 162

state 147

    (63) parametros -> LPAREN parametro RPAREN datoARetornar .

    LKEY            reduce using rule 63 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    ASSIGN          reduce using rule 63 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    $end            reduce using rule 63 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    RKEY            reduce using rule 63 (parametros -> LPAREN parametro RPAREN datoARetornar .)
    COMA            reduce using rule 63 (parametros -> LPAREN parametro RPAREN datoARetornar .)


state 148

    (66) parametro -> VARIABLE TWO_POINTS dato .
    (67) parametro -> VARIABLE TWO_POINTS dato . COMA parametro

    RPAREN          reduce using rule 66 (parametro -> VARIABLE TWO_POINTS dato .)
    COMA            shift and go to state 164


state 149

    (68) parametro -> dato COMA parametro .

    RPAREN          reduce using rule 68 (parametro -> dato COMA parametro .)


state 150

    (77) hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .

    $end            reduce using rule 77 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    COMMA_DOT       reduce using rule 77 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    RKEY            reduce using rule 77 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)
    COMA            reduce using rule 77 (hashMap -> HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN .)


state 151

    (76) datos -> dato COMA datos .

    RBRACKET        reduce using rule 76 (datos -> dato COMA datos .)


state 152

    (78) for -> FOR VARIABLE IN rango LKEY cuerpoFuncion . RKEY

    RKEY            shift and go to state 165


state 153

    (79) rango -> DECIMAL POINT POINT . DECIMAL
    (80) rango -> DECIMAL POINT POINT . ASSIGN DECIMAL

    DECIMAL         shift and go to state 166
    ASSIGN          shift and go to state 167


state 154

    (82) content -> dato MOREEQUAL_THAN cuerpoFuncion .
    (83) content -> dato MOREEQUAL_THAN cuerpoFuncion . COMA content

    RKEY            reduce using rule 82 (content -> dato MOREEQUAL_THAN cuerpoFuncion .)
    COMA            shift and go to state 168


state 155

    (51) argumento -> VARIABLE COMA argumento .

    RPAREN          reduce using rule 51 (argumento -> VARIABLE COMA argumento .)


state 156

    (52) argumento -> dato COMA argumento .

    RPAREN          reduce using rule 52 (argumento -> dato COMA argumento .)


state 157

    (55) argumento -> llamadaAfuncion COMA argumento .

    RPAREN          reduce using rule 55 (argumento -> llamadaAfuncion COMA argumento .)


state 158

    (56) argumento -> llamadaAfuncionPorAlias COMA argumento .

    RPAREN          reduce using rule 56 (argumento -> llamadaAfuncionPorAlias COMA argumento .)


state 159

    (73) atributos -> VARIABLE TWO_POINTS dato COMA . atributos
    (72) atributos -> . VARIABLE TWO_POINTS dato
    (73) atributos -> . VARIABLE TWO_POINTS dato COMA atributos

    VARIABLE        shift and go to state 86

    atributos                      shift and go to state 169

state 160

    (57) definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .

    $end            reduce using rule 57 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    RKEY            reduce using rule 57 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)
    COMA            reduce using rule 57 (definirFuncion -> FN VARIABLE trait parametros LKEY cuerpoFuncion RKEY .)


state 161

    (59) trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN .

    LPAREN          reduce using rule 59 (trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN .)


state 162

    (60) datoARetornar -> MINUS MORE_THAN dato .

    LKEY            reduce using rule 60 (datoARetornar -> MINUS MORE_THAN dato .)
    ASSIGN          reduce using rule 60 (datoARetornar -> MINUS MORE_THAN dato .)
    $end            reduce using rule 60 (datoARetornar -> MINUS MORE_THAN dato .)
    RKEY            reduce using rule 60 (datoARetornar -> MINUS MORE_THAN dato .)
    COMA            reduce using rule 60 (datoARetornar -> MINUS MORE_THAN dato .)


state 163

    (61) datoARetornar -> MINUS MORE_THAN NOT .

    LKEY            reduce using rule 61 (datoARetornar -> MINUS MORE_THAN NOT .)
    ASSIGN          reduce using rule 61 (datoARetornar -> MINUS MORE_THAN NOT .)
    $end            reduce using rule 61 (datoARetornar -> MINUS MORE_THAN NOT .)
    RKEY            reduce using rule 61 (datoARetornar -> MINUS MORE_THAN NOT .)
    COMA            reduce using rule 61 (datoARetornar -> MINUS MORE_THAN NOT .)


state 164

    (67) parametro -> VARIABLE TWO_POINTS dato COMA . parametro
    (66) parametro -> . VARIABLE TWO_POINTS dato
    (67) parametro -> . VARIABLE TWO_POINTS dato COMA parametro
    (68) parametro -> . dato COMA parametro
    (69) parametro -> . dato
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC

    VARIABLE        shift and go to state 93
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56

    dato                           shift and go to state 94
    parametro                      shift and go to state 170

state 165

    (78) for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .

    $end            reduce using rule 78 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    RKEY            reduce using rule 78 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)
    COMA            reduce using rule 78 (for -> FOR VARIABLE IN rango LKEY cuerpoFuncion RKEY .)


state 166

    (79) rango -> DECIMAL POINT POINT DECIMAL .

    LKEY            reduce using rule 79 (rango -> DECIMAL POINT POINT DECIMAL .)


state 167

    (80) rango -> DECIMAL POINT POINT ASSIGN . DECIMAL

    DECIMAL         shift and go to state 171


state 168

    (83) content -> dato MOREEQUAL_THAN cuerpoFuncion COMA . content
    (82) content -> . dato MOREEQUAL_THAN cuerpoFuncion
    (83) content -> . dato MOREEQUAL_THAN cuerpoFuncion COMA content
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . DECIMAL
    (28) dato -> . HEXADECIMAL
    (29) dato -> . OCTAL
    (30) dato -> . BINARIO
    (31) dato -> . BOOL
    (32) dato -> . FLOAT
    (33) dato -> . VEC
    (34) dato -> . GENERIC

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    DECIMAL         shift and go to state 49
    HEXADECIMAL     shift and go to state 50
    OCTAL           shift and go to state 51
    BINARIO         shift and go to state 52
    BOOL            shift and go to state 53
    FLOAT           shift and go to state 54
    VEC             shift and go to state 74
    GENERIC         shift and go to state 56

    dato                           shift and go to state 102
    content                        shift and go to state 172

state 169

    (73) atributos -> VARIABLE TWO_POINTS dato COMA atributos .

    RKEY            reduce using rule 73 (atributos -> VARIABLE TWO_POINTS dato COMA atributos .)


state 170

    (67) parametro -> VARIABLE TWO_POINTS dato COMA parametro .

    RPAREN          reduce using rule 67 (parametro -> VARIABLE TWO_POINTS dato COMA parametro .)


state 171

    (80) rango -> DECIMAL POINT POINT ASSIGN DECIMAL .

    LKEY            reduce using rule 80 (rango -> DECIMAL POINT POINT ASSIGN DECIMAL .)


state 172

    (83) content -> dato MOREEQUAL_THAN cuerpoFuncion COMA content .

    RKEY            reduce using rule 83 (content -> dato MOREEQUAL_THAN cuerpoFuncion COMA content .)

