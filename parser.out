Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ALIGNOF
    AND
    AND_BIT
    BECOME
    BOX
    BREAK
    BYTE
    CONST
    CONTINUE
    CRATE
    DIVIDE
    DO
    ELSE
    ENUM
    EQUALS
    EXTERN
    FINAL
    IF
    IMPL
    INTEGER
    LEFT_MAYUS
    LESSEQUAL_THAN
    MACRO
    MATH_REMINDER
    MOD
    MOV
    NOT_EQUALS
    OFFSETOF
    OR
    OR_BIT
    OVERRIDE
    PLUS
    PRIV
    PROC
    PUB
    PURE
    QUO_MARKS
    REF
    RETURN
    RIGHT_MAYUS
    SELF
    SIZEOF
    STATIC
    SUPER
    TIMES
    TRAIT
    TYPEOF
    UNSAFE
    UNSIZED
    USE
    VIRTUAL
    WHERE
    WHILE
    XOR_BIT
    YIELD

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> asignacion
Rule 2     cuerpo -> asignacionMutable
Rule 3     cuerpo -> eMatch
Rule 4     cuerpo -> instruccion
Rule 5     cuerpo -> funcion
Rule 6     cuerpo -> funcionDiv
Rule 7     cuerpo -> vector
Rule 8     cuerpo -> for
Rule 9     cuerpo -> apuntador
Rule 10    cuerpo -> trait
Rule 11    cuerpo -> loop
Rule 12    cuerpo -> struct
Rule 13    cuerpo -> casting
Rule 14    cuerpo -> alias
Rule 15    cuerpo -> link
Rule 16    cuerpo -> parametro
Rule 17    asignacion -> LET VARIABLE ASSIGN valor COMMA_DOT
Rule 18    valor -> STRING
Rule 19    valor -> CHAR
Rule 20    valor -> DECIMAL
Rule 21    valor -> HEXADECIMAL
Rule 22    valor -> OCTAL
Rule 23    valor -> BINARIO
Rule 24    valor -> BOOL
Rule 25    valor -> FLOAT
Rule 26    eMatch -> MATCH VARIABLE LKEY content RKEY
Rule 27    content -> valor MOREEQUAL_THAN instruccion
Rule 28    content -> valor MOREEQUAL_THAN instruccion COMA content
Rule 29    instruccion -> imprimir
Rule 30    instruccion -> hashMap
Rule 31    imprimir -> PRINTLN NOT LPAREN valor RPAREN
Rule 32    loop -> LOOP LKEY instruccion RKEY
Rule 33    for -> FOR VARIABLE IN rango LKEY instruccion RKEY
Rule 34    rango -> DECIMAL POINT POINT DECIMAL
Rule 35    rango -> DECIMAL POINT POINT ASSIGN DECIMAL
Rule 36    vector -> LET VARIABLE ASSIGN VEC NOT LBRACKET valores RBRACKET
Rule 37    valores -> valor
Rule 38    valores -> valor COMA valores
Rule 39    hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT
Rule 40    struct -> STRUCT VARIABLE LKEY atributos RKEY
Rule 41    atributos -> VARIABLE TWO_POINTS valor
Rule 42    atributos -> VARIABLE TWO_POINTS valor COMA atributos
Rule 43    asignacionMutable -> LET MUT VARIABLE ASSIGN valor COMMA_DOT
Rule 44    funcion -> FN VARIABLE parametros LKEY instruccion RKEY
Rule 45    parametros -> LPAREN RPAREN
Rule 46    parametros -> LPAREN parametro RPAREN
Rule 47    parametro -> VARIABLE TWO_POINTS valor
Rule 48    parametro -> VARIABLE TWO_POINTS valor COMA parametro
Rule 49    parametro -> VARIABLE TWO_POINTS GENERIC
Rule 50    parametro -> VARIABLE TWO_POINTS GENERIC COMA parametro
Rule 51    funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY
Rule 52    casting -> valor AS valor
Rule 53    casting -> valor AS casting
Rule 54    casting -> VARIABLE AS valor
Rule 55    casting -> VARIABLE AS casting
Rule 56    alias -> TYPE VARIABLE ASSIGN valor COMMA_DOT
Rule 57    link -> LET LPAREN variables RPAREN ASSIGN LPAREN valores RPAREN COMMA_DOT
Rule 58    variables -> VARIABLE
Rule 59    variables -> VARIABLE COMA variables
Rule 60    trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN
Rule 61    apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT

Terminals, with rules where they appear

ABSTRACT             : 
ALIGNOF              : 
AND                  : 
AND_BIT              : 
AS                   : 52 53 54 55
ASSIGN               : 17 35 36 39 43 56 57 61
BECOME               : 
BINARIO              : 23
BOOL                 : 24
BOX                  : 
BREAK                : 
BYTE                 : 
CHAR                 : 19
COMA                 : 28 38 42 48 50 59
COMMA_DOT            : 17 39 43 56 57 61
CONST                : 
CONTINUE             : 
CRATE                : 
DECIMAL              : 20 34 34 35 35
DIVIDE               : 
DO                   : 
ELSE                 : 
ENUM                 : 
EQUALS               : 
EXTERN               : 
FINAL                : 
FLOAT                : 25
FN                   : 44 51 61
FOR                  : 33
GENERIC              : 49 50 60
HASHMAP              : 39
HEXADECIMAL          : 21
IF                   : 
IMPL                 : 
IN                   : 33
INTEGER              : 
LBRACKET             : 36
LEFT_MAYUS           : 
LESSEQUAL_THAN       : 
LESS_THAN            : 60
LET                  : 17 36 39 43 57 61
LKEY                 : 26 32 33 40 44 51
LOOP                 : 32
LPAREN               : 31 39 45 46 57 57
MACRO                : 
MATCH                : 26
MATH_REMINDER        : 
MINUS                : 51 61
MOD                  : 
MOREEQUAL_THAN       : 27 28
MORE_THAN            : 51 60 61
MOV                  : 
MUT                  : 39 43
NEW                  : 39
NOT                  : 31 36 51
NOT_EQUALS           : 
OCTAL                : 22
OFFSETOF             : 
OR                   : 
OR_BIT               : 
OVERRIDE             : 
PLUS                 : 
POINT                : 34 34 35 35
PRINTLN              : 31
PRIV                 : 
PROC                 : 
PUB                  : 
PURE                 : 
QUO_MARKS            : 
RBRACKET             : 36
REF                  : 
RETURN               : 
RIGHT_MAYUS          : 
RKEY                 : 26 32 33 40 44 51
RPAREN               : 31 39 45 46 57 57
SELF                 : 
SIZEOF               : 
STATIC               : 
STRING               : 18
STRUCT               : 40
SUPER                : 
TIMES                : 
TRAIT                : 
TWO_POINTS           : 39 39 41 42 47 48 49 50 60 61
TYPE                 : 56
TYPEOF               : 
UNSAFE               : 
UNSIZED              : 
USE                  : 
VARIABLE             : 17 26 33 36 39 40 41 42 43 44 47 48 49 50 51 54 55 56 58 59 60 61 61
VEC                  : 36
VIRTUAL              : 
WHERE                : 
WHILE                : 
XOR_BIT              : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

alias                : 14
apuntador            : 9
asignacion           : 1
asignacionMutable    : 2
atributos            : 40 42
casting              : 13 53 55
content              : 26 28
cuerpo               : 0
eMatch               : 3
for                  : 8
funcion              : 5
funcionDiv           : 6
hashMap              : 30
imprimir             : 29
instruccion          : 4 27 28 32 33 44 51
link                 : 15
loop                 : 11
parametro            : 16 46 48 50
parametros           : 44 51 61
rango                : 33
struct               : 12
trait                : 10
valor                : 17 27 28 31 37 38 41 42 43 47 48 52 52 53 54 56 61
valores              : 36 38 57
variables            : 57 59
vector               : 7

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . asignacion
    (2) cuerpo -> . asignacionMutable
    (3) cuerpo -> . eMatch
    (4) cuerpo -> . instruccion
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcionDiv
    (7) cuerpo -> . vector
    (8) cuerpo -> . for
    (9) cuerpo -> . apuntador
    (10) cuerpo -> . trait
    (11) cuerpo -> . loop
    (12) cuerpo -> . struct
    (13) cuerpo -> . casting
    (14) cuerpo -> . alias
    (15) cuerpo -> . link
    (16) cuerpo -> . parametro
    (17) asignacion -> . LET VARIABLE ASSIGN valor COMMA_DOT
    (43) asignacionMutable -> . LET MUT VARIABLE ASSIGN valor COMMA_DOT
    (26) eMatch -> . MATCH VARIABLE LKEY content RKEY
    (29) instruccion -> . imprimir
    (30) instruccion -> . hashMap
    (44) funcion -> . FN VARIABLE parametros LKEY instruccion RKEY
    (51) funcionDiv -> . FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY
    (36) vector -> . LET VARIABLE ASSIGN VEC NOT LBRACKET valores RBRACKET
    (33) for -> . FOR VARIABLE IN rango LKEY instruccion RKEY
    (61) apuntador -> . LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT
    (60) trait -> . LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN
    (32) loop -> . LOOP LKEY instruccion RKEY
    (40) struct -> . STRUCT VARIABLE LKEY atributos RKEY
    (52) casting -> . valor AS valor
    (53) casting -> . valor AS casting
    (54) casting -> . VARIABLE AS valor
    (55) casting -> . VARIABLE AS casting
    (56) alias -> . TYPE VARIABLE ASSIGN valor COMMA_DOT
    (57) link -> . LET LPAREN variables RPAREN ASSIGN LPAREN valores RPAREN COMMA_DOT
    (47) parametro -> . VARIABLE TWO_POINTS valor
    (48) parametro -> . VARIABLE TWO_POINTS valor COMA parametro
    (49) parametro -> . VARIABLE TWO_POINTS GENERIC
    (50) parametro -> . VARIABLE TWO_POINTS GENERIC COMA parametro
    (31) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (39) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT
    (18) valor -> . STRING
    (19) valor -> . CHAR
    (20) valor -> . DECIMAL
    (21) valor -> . HEXADECIMAL
    (22) valor -> . OCTAL
    (23) valor -> . BINARIO
    (24) valor -> . BOOL
    (25) valor -> . FLOAT

    LET             shift and go to state 18
    MATCH           shift and go to state 21
    FN              shift and go to state 24
    FOR             shift and go to state 25
    LESS_THAN       shift and go to state 26
    LOOP            shift and go to state 27
    STRUCT          shift and go to state 28
    VARIABLE        shift and go to state 19
    TYPE            shift and go to state 29
    PRINTLN         shift and go to state 30
    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    DECIMAL         shift and go to state 33
    HEXADECIMAL     shift and go to state 34
    OCTAL           shift and go to state 35
    BINARIO         shift and go to state 36
    BOOL            shift and go to state 37
    FLOAT           shift and go to state 38

    cuerpo                         shift and go to state 1
    asignacion                     shift and go to state 2
    asignacionMutable              shift and go to state 3
    eMatch                         shift and go to state 4
    instruccion                    shift and go to state 5
    funcion                        shift and go to state 6
    funcionDiv                     shift and go to state 7
    vector                         shift and go to state 8
    for                            shift and go to state 9
    apuntador                      shift and go to state 10
    trait                          shift and go to state 11
    loop                           shift and go to state 12
    struct                         shift and go to state 13
    casting                        shift and go to state 14
    alias                          shift and go to state 15
    link                           shift and go to state 16
    parametro                      shift and go to state 17
    valor                          shift and go to state 20
    imprimir                       shift and go to state 22
    hashMap                        shift and go to state 23

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> asignacion .

    $end            reduce using rule 1 (cuerpo -> asignacion .)


state 3

    (2) cuerpo -> asignacionMutable .

    $end            reduce using rule 2 (cuerpo -> asignacionMutable .)


state 4

    (3) cuerpo -> eMatch .

    $end            reduce using rule 3 (cuerpo -> eMatch .)


state 5

    (4) cuerpo -> instruccion .

    $end            reduce using rule 4 (cuerpo -> instruccion .)


state 6

    (5) cuerpo -> funcion .

    $end            reduce using rule 5 (cuerpo -> funcion .)


state 7

    (6) cuerpo -> funcionDiv .

    $end            reduce using rule 6 (cuerpo -> funcionDiv .)


state 8

    (7) cuerpo -> vector .

    $end            reduce using rule 7 (cuerpo -> vector .)


state 9

    (8) cuerpo -> for .

    $end            reduce using rule 8 (cuerpo -> for .)


state 10

    (9) cuerpo -> apuntador .

    $end            reduce using rule 9 (cuerpo -> apuntador .)


state 11

    (10) cuerpo -> trait .

    $end            reduce using rule 10 (cuerpo -> trait .)


state 12

    (11) cuerpo -> loop .

    $end            reduce using rule 11 (cuerpo -> loop .)


state 13

    (12) cuerpo -> struct .

    $end            reduce using rule 12 (cuerpo -> struct .)


state 14

    (13) cuerpo -> casting .

    $end            reduce using rule 13 (cuerpo -> casting .)


state 15

    (14) cuerpo -> alias .

    $end            reduce using rule 14 (cuerpo -> alias .)


state 16

    (15) cuerpo -> link .

    $end            reduce using rule 15 (cuerpo -> link .)


state 17

    (16) cuerpo -> parametro .

    $end            reduce using rule 16 (cuerpo -> parametro .)


state 18

    (17) asignacion -> LET . VARIABLE ASSIGN valor COMMA_DOT
    (43) asignacionMutable -> LET . MUT VARIABLE ASSIGN valor COMMA_DOT
    (36) vector -> LET . VARIABLE ASSIGN VEC NOT LBRACKET valores RBRACKET
    (61) apuntador -> LET . VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT
    (57) link -> LET . LPAREN variables RPAREN ASSIGN LPAREN valores RPAREN COMMA_DOT
    (39) hashMap -> LET . MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    VARIABLE        shift and go to state 39
    MUT             shift and go to state 40
    LPAREN          shift and go to state 41


state 19

    (54) casting -> VARIABLE . AS valor
    (55) casting -> VARIABLE . AS casting
    (47) parametro -> VARIABLE . TWO_POINTS valor
    (48) parametro -> VARIABLE . TWO_POINTS valor COMA parametro
    (49) parametro -> VARIABLE . TWO_POINTS GENERIC
    (50) parametro -> VARIABLE . TWO_POINTS GENERIC COMA parametro

    AS              shift and go to state 42
    TWO_POINTS      shift and go to state 43


state 20

    (52) casting -> valor . AS valor
    (53) casting -> valor . AS casting

    AS              shift and go to state 44


state 21

    (26) eMatch -> MATCH . VARIABLE LKEY content RKEY

    VARIABLE        shift and go to state 45


state 22

    (29) instruccion -> imprimir .

    $end            reduce using rule 29 (instruccion -> imprimir .)
    RKEY            reduce using rule 29 (instruccion -> imprimir .)
    COMA            reduce using rule 29 (instruccion -> imprimir .)


state 23

    (30) instruccion -> hashMap .

    $end            reduce using rule 30 (instruccion -> hashMap .)
    RKEY            reduce using rule 30 (instruccion -> hashMap .)
    COMA            reduce using rule 30 (instruccion -> hashMap .)


state 24

    (44) funcion -> FN . VARIABLE parametros LKEY instruccion RKEY
    (51) funcionDiv -> FN . VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY

    VARIABLE        shift and go to state 46


state 25

    (33) for -> FOR . VARIABLE IN rango LKEY instruccion RKEY

    VARIABLE        shift and go to state 47


state 26

    (60) trait -> LESS_THAN . GENERIC TWO_POINTS VARIABLE MORE_THAN

    GENERIC         shift and go to state 48


state 27

    (32) loop -> LOOP . LKEY instruccion RKEY

    LKEY            shift and go to state 49


state 28

    (40) struct -> STRUCT . VARIABLE LKEY atributos RKEY

    VARIABLE        shift and go to state 50


state 29

    (56) alias -> TYPE . VARIABLE ASSIGN valor COMMA_DOT

    VARIABLE        shift and go to state 51


state 30

    (31) imprimir -> PRINTLN . NOT LPAREN valor RPAREN

    NOT             shift and go to state 52


state 31

    (18) valor -> STRING .

    AS              reduce using rule 18 (valor -> STRING .)
    $end            reduce using rule 18 (valor -> STRING .)
    COMA            reduce using rule 18 (valor -> STRING .)
    RPAREN          reduce using rule 18 (valor -> STRING .)
    COMMA_DOT       reduce using rule 18 (valor -> STRING .)
    MOREEQUAL_THAN  reduce using rule 18 (valor -> STRING .)
    RKEY            reduce using rule 18 (valor -> STRING .)
    RBRACKET        reduce using rule 18 (valor -> STRING .)
    ASSIGN          reduce using rule 18 (valor -> STRING .)


state 32

    (19) valor -> CHAR .

    AS              reduce using rule 19 (valor -> CHAR .)
    $end            reduce using rule 19 (valor -> CHAR .)
    COMA            reduce using rule 19 (valor -> CHAR .)
    RPAREN          reduce using rule 19 (valor -> CHAR .)
    COMMA_DOT       reduce using rule 19 (valor -> CHAR .)
    MOREEQUAL_THAN  reduce using rule 19 (valor -> CHAR .)
    RKEY            reduce using rule 19 (valor -> CHAR .)
    RBRACKET        reduce using rule 19 (valor -> CHAR .)
    ASSIGN          reduce using rule 19 (valor -> CHAR .)


state 33

    (20) valor -> DECIMAL .

    AS              reduce using rule 20 (valor -> DECIMAL .)
    $end            reduce using rule 20 (valor -> DECIMAL .)
    COMA            reduce using rule 20 (valor -> DECIMAL .)
    RPAREN          reduce using rule 20 (valor -> DECIMAL .)
    COMMA_DOT       reduce using rule 20 (valor -> DECIMAL .)
    MOREEQUAL_THAN  reduce using rule 20 (valor -> DECIMAL .)
    RKEY            reduce using rule 20 (valor -> DECIMAL .)
    RBRACKET        reduce using rule 20 (valor -> DECIMAL .)
    ASSIGN          reduce using rule 20 (valor -> DECIMAL .)


state 34

    (21) valor -> HEXADECIMAL .

    AS              reduce using rule 21 (valor -> HEXADECIMAL .)
    $end            reduce using rule 21 (valor -> HEXADECIMAL .)
    COMA            reduce using rule 21 (valor -> HEXADECIMAL .)
    RPAREN          reduce using rule 21 (valor -> HEXADECIMAL .)
    COMMA_DOT       reduce using rule 21 (valor -> HEXADECIMAL .)
    MOREEQUAL_THAN  reduce using rule 21 (valor -> HEXADECIMAL .)
    RKEY            reduce using rule 21 (valor -> HEXADECIMAL .)
    RBRACKET        reduce using rule 21 (valor -> HEXADECIMAL .)
    ASSIGN          reduce using rule 21 (valor -> HEXADECIMAL .)


state 35

    (22) valor -> OCTAL .

    AS              reduce using rule 22 (valor -> OCTAL .)
    $end            reduce using rule 22 (valor -> OCTAL .)
    COMA            reduce using rule 22 (valor -> OCTAL .)
    RPAREN          reduce using rule 22 (valor -> OCTAL .)
    COMMA_DOT       reduce using rule 22 (valor -> OCTAL .)
    MOREEQUAL_THAN  reduce using rule 22 (valor -> OCTAL .)
    RKEY            reduce using rule 22 (valor -> OCTAL .)
    RBRACKET        reduce using rule 22 (valor -> OCTAL .)
    ASSIGN          reduce using rule 22 (valor -> OCTAL .)


state 36

    (23) valor -> BINARIO .

    AS              reduce using rule 23 (valor -> BINARIO .)
    $end            reduce using rule 23 (valor -> BINARIO .)
    COMA            reduce using rule 23 (valor -> BINARIO .)
    RPAREN          reduce using rule 23 (valor -> BINARIO .)
    COMMA_DOT       reduce using rule 23 (valor -> BINARIO .)
    MOREEQUAL_THAN  reduce using rule 23 (valor -> BINARIO .)
    RKEY            reduce using rule 23 (valor -> BINARIO .)
    RBRACKET        reduce using rule 23 (valor -> BINARIO .)
    ASSIGN          reduce using rule 23 (valor -> BINARIO .)


state 37

    (24) valor -> BOOL .

    AS              reduce using rule 24 (valor -> BOOL .)
    $end            reduce using rule 24 (valor -> BOOL .)
    COMA            reduce using rule 24 (valor -> BOOL .)
    RPAREN          reduce using rule 24 (valor -> BOOL .)
    COMMA_DOT       reduce using rule 24 (valor -> BOOL .)
    MOREEQUAL_THAN  reduce using rule 24 (valor -> BOOL .)
    RKEY            reduce using rule 24 (valor -> BOOL .)
    RBRACKET        reduce using rule 24 (valor -> BOOL .)
    ASSIGN          reduce using rule 24 (valor -> BOOL .)


state 38

    (25) valor -> FLOAT .

    AS              reduce using rule 25 (valor -> FLOAT .)
    $end            reduce using rule 25 (valor -> FLOAT .)
    COMA            reduce using rule 25 (valor -> FLOAT .)
    RPAREN          reduce using rule 25 (valor -> FLOAT .)
    COMMA_DOT       reduce using rule 25 (valor -> FLOAT .)
    MOREEQUAL_THAN  reduce using rule 25 (valor -> FLOAT .)
    RKEY            reduce using rule 25 (valor -> FLOAT .)
    RBRACKET        reduce using rule 25 (valor -> FLOAT .)
    ASSIGN          reduce using rule 25 (valor -> FLOAT .)


state 39

    (17) asignacion -> LET VARIABLE . ASSIGN valor COMMA_DOT
    (36) vector -> LET VARIABLE . ASSIGN VEC NOT LBRACKET valores RBRACKET
    (61) apuntador -> LET VARIABLE . TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT

    ASSIGN          shift and go to state 53
    TWO_POINTS      shift and go to state 54


state 40

    (43) asignacionMutable -> LET MUT . VARIABLE ASSIGN valor COMMA_DOT
    (39) hashMap -> LET MUT . VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    VARIABLE        shift and go to state 55


state 41

    (57) link -> LET LPAREN . variables RPAREN ASSIGN LPAREN valores RPAREN COMMA_DOT
    (58) variables -> . VARIABLE
    (59) variables -> . VARIABLE COMA variables

    VARIABLE        shift and go to state 57

    variables                      shift and go to state 56

state 42

    (54) casting -> VARIABLE AS . valor
    (55) casting -> VARIABLE AS . casting
    (18) valor -> . STRING
    (19) valor -> . CHAR
    (20) valor -> . DECIMAL
    (21) valor -> . HEXADECIMAL
    (22) valor -> . OCTAL
    (23) valor -> . BINARIO
    (24) valor -> . BOOL
    (25) valor -> . FLOAT
    (52) casting -> . valor AS valor
    (53) casting -> . valor AS casting
    (54) casting -> . VARIABLE AS valor
    (55) casting -> . VARIABLE AS casting

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    DECIMAL         shift and go to state 33
    HEXADECIMAL     shift and go to state 34
    OCTAL           shift and go to state 35
    BINARIO         shift and go to state 36
    BOOL            shift and go to state 37
    FLOAT           shift and go to state 38
    VARIABLE        shift and go to state 58

    valor                          shift and go to state 59
    casting                        shift and go to state 60

state 43

    (47) parametro -> VARIABLE TWO_POINTS . valor
    (48) parametro -> VARIABLE TWO_POINTS . valor COMA parametro
    (49) parametro -> VARIABLE TWO_POINTS . GENERIC
    (50) parametro -> VARIABLE TWO_POINTS . GENERIC COMA parametro
    (18) valor -> . STRING
    (19) valor -> . CHAR
    (20) valor -> . DECIMAL
    (21) valor -> . HEXADECIMAL
    (22) valor -> . OCTAL
    (23) valor -> . BINARIO
    (24) valor -> . BOOL
    (25) valor -> . FLOAT

    GENERIC         shift and go to state 62
    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    DECIMAL         shift and go to state 33
    HEXADECIMAL     shift and go to state 34
    OCTAL           shift and go to state 35
    BINARIO         shift and go to state 36
    BOOL            shift and go to state 37
    FLOAT           shift and go to state 38

    valor                          shift and go to state 61

state 44

    (52) casting -> valor AS . valor
    (53) casting -> valor AS . casting
    (18) valor -> . STRING
    (19) valor -> . CHAR
    (20) valor -> . DECIMAL
    (21) valor -> . HEXADECIMAL
    (22) valor -> . OCTAL
    (23) valor -> . BINARIO
    (24) valor -> . BOOL
    (25) valor -> . FLOAT
    (52) casting -> . valor AS valor
    (53) casting -> . valor AS casting
    (54) casting -> . VARIABLE AS valor
    (55) casting -> . VARIABLE AS casting

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    DECIMAL         shift and go to state 33
    HEXADECIMAL     shift and go to state 34
    OCTAL           shift and go to state 35
    BINARIO         shift and go to state 36
    BOOL            shift and go to state 37
    FLOAT           shift and go to state 38
    VARIABLE        shift and go to state 58

    valor                          shift and go to state 63
    casting                        shift and go to state 64

state 45

    (26) eMatch -> MATCH VARIABLE . LKEY content RKEY

    LKEY            shift and go to state 65


state 46

    (44) funcion -> FN VARIABLE . parametros LKEY instruccion RKEY
    (51) funcionDiv -> FN VARIABLE . parametros MINUS MORE_THAN NOT LKEY instruccion RKEY
    (45) parametros -> . LPAREN RPAREN
    (46) parametros -> . LPAREN parametro RPAREN

    LPAREN          shift and go to state 67

    parametros                     shift and go to state 66

state 47

    (33) for -> FOR VARIABLE . IN rango LKEY instruccion RKEY

    IN              shift and go to state 68


state 48

    (60) trait -> LESS_THAN GENERIC . TWO_POINTS VARIABLE MORE_THAN

    TWO_POINTS      shift and go to state 69


state 49

    (32) loop -> LOOP LKEY . instruccion RKEY
    (29) instruccion -> . imprimir
    (30) instruccion -> . hashMap
    (31) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (39) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    PRINTLN         shift and go to state 30
    LET             shift and go to state 71

    instruccion                    shift and go to state 70
    imprimir                       shift and go to state 22
    hashMap                        shift and go to state 23

state 50

    (40) struct -> STRUCT VARIABLE . LKEY atributos RKEY

    LKEY            shift and go to state 72


state 51

    (56) alias -> TYPE VARIABLE . ASSIGN valor COMMA_DOT

    ASSIGN          shift and go to state 73


state 52

    (31) imprimir -> PRINTLN NOT . LPAREN valor RPAREN

    LPAREN          shift and go to state 74


state 53

    (17) asignacion -> LET VARIABLE ASSIGN . valor COMMA_DOT
    (36) vector -> LET VARIABLE ASSIGN . VEC NOT LBRACKET valores RBRACKET
    (18) valor -> . STRING
    (19) valor -> . CHAR
    (20) valor -> . DECIMAL
    (21) valor -> . HEXADECIMAL
    (22) valor -> . OCTAL
    (23) valor -> . BINARIO
    (24) valor -> . BOOL
    (25) valor -> . FLOAT

    VEC             shift and go to state 76
    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    DECIMAL         shift and go to state 33
    HEXADECIMAL     shift and go to state 34
    OCTAL           shift and go to state 35
    BINARIO         shift and go to state 36
    BOOL            shift and go to state 37
    FLOAT           shift and go to state 38

    valor                          shift and go to state 75

state 54

    (61) apuntador -> LET VARIABLE TWO_POINTS . FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT

    FN              shift and go to state 77


state 55

    (43) asignacionMutable -> LET MUT VARIABLE . ASSIGN valor COMMA_DOT
    (39) hashMap -> LET MUT VARIABLE . ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    ASSIGN          shift and go to state 78


state 56

    (57) link -> LET LPAREN variables . RPAREN ASSIGN LPAREN valores RPAREN COMMA_DOT

    RPAREN          shift and go to state 79


state 57

    (58) variables -> VARIABLE .
    (59) variables -> VARIABLE . COMA variables

    RPAREN          reduce using rule 58 (variables -> VARIABLE .)
    COMA            shift and go to state 80


state 58

    (54) casting -> VARIABLE . AS valor
    (55) casting -> VARIABLE . AS casting

    AS              shift and go to state 42


state 59

    (54) casting -> VARIABLE AS valor .
    (52) casting -> valor . AS valor
    (53) casting -> valor . AS casting

    $end            reduce using rule 54 (casting -> VARIABLE AS valor .)
    AS              shift and go to state 44


state 60

    (55) casting -> VARIABLE AS casting .

    $end            reduce using rule 55 (casting -> VARIABLE AS casting .)


state 61

    (47) parametro -> VARIABLE TWO_POINTS valor .
    (48) parametro -> VARIABLE TWO_POINTS valor . COMA parametro

    $end            reduce using rule 47 (parametro -> VARIABLE TWO_POINTS valor .)
    RPAREN          reduce using rule 47 (parametro -> VARIABLE TWO_POINTS valor .)
    COMA            shift and go to state 81


state 62

    (49) parametro -> VARIABLE TWO_POINTS GENERIC .
    (50) parametro -> VARIABLE TWO_POINTS GENERIC . COMA parametro

    $end            reduce using rule 49 (parametro -> VARIABLE TWO_POINTS GENERIC .)
    RPAREN          reduce using rule 49 (parametro -> VARIABLE TWO_POINTS GENERIC .)
    COMA            shift and go to state 82


state 63

    (52) casting -> valor AS valor .
    (52) casting -> valor . AS valor
    (53) casting -> valor . AS casting

    $end            reduce using rule 52 (casting -> valor AS valor .)
    AS              shift and go to state 44


state 64

    (53) casting -> valor AS casting .

    $end            reduce using rule 53 (casting -> valor AS casting .)


state 65

    (26) eMatch -> MATCH VARIABLE LKEY . content RKEY
    (27) content -> . valor MOREEQUAL_THAN instruccion
    (28) content -> . valor MOREEQUAL_THAN instruccion COMA content
    (18) valor -> . STRING
    (19) valor -> . CHAR
    (20) valor -> . DECIMAL
    (21) valor -> . HEXADECIMAL
    (22) valor -> . OCTAL
    (23) valor -> . BINARIO
    (24) valor -> . BOOL
    (25) valor -> . FLOAT

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    DECIMAL         shift and go to state 33
    HEXADECIMAL     shift and go to state 34
    OCTAL           shift and go to state 35
    BINARIO         shift and go to state 36
    BOOL            shift and go to state 37
    FLOAT           shift and go to state 38

    content                        shift and go to state 83
    valor                          shift and go to state 84

state 66

    (44) funcion -> FN VARIABLE parametros . LKEY instruccion RKEY
    (51) funcionDiv -> FN VARIABLE parametros . MINUS MORE_THAN NOT LKEY instruccion RKEY

    LKEY            shift and go to state 85
    MINUS           shift and go to state 86


state 67

    (45) parametros -> LPAREN . RPAREN
    (46) parametros -> LPAREN . parametro RPAREN
    (47) parametro -> . VARIABLE TWO_POINTS valor
    (48) parametro -> . VARIABLE TWO_POINTS valor COMA parametro
    (49) parametro -> . VARIABLE TWO_POINTS GENERIC
    (50) parametro -> . VARIABLE TWO_POINTS GENERIC COMA parametro

    RPAREN          shift and go to state 87
    VARIABLE        shift and go to state 89

    parametro                      shift and go to state 88

state 68

    (33) for -> FOR VARIABLE IN . rango LKEY instruccion RKEY
    (34) rango -> . DECIMAL POINT POINT DECIMAL
    (35) rango -> . DECIMAL POINT POINT ASSIGN DECIMAL

    DECIMAL         shift and go to state 91

    rango                          shift and go to state 90

state 69

    (60) trait -> LESS_THAN GENERIC TWO_POINTS . VARIABLE MORE_THAN

    VARIABLE        shift and go to state 92


state 70

    (32) loop -> LOOP LKEY instruccion . RKEY

    RKEY            shift and go to state 93


state 71

    (39) hashMap -> LET . MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    MUT             shift and go to state 94


state 72

    (40) struct -> STRUCT VARIABLE LKEY . atributos RKEY
    (41) atributos -> . VARIABLE TWO_POINTS valor
    (42) atributos -> . VARIABLE TWO_POINTS valor COMA atributos

    VARIABLE        shift and go to state 95

    atributos                      shift and go to state 96

state 73

    (56) alias -> TYPE VARIABLE ASSIGN . valor COMMA_DOT
    (18) valor -> . STRING
    (19) valor -> . CHAR
    (20) valor -> . DECIMAL
    (21) valor -> . HEXADECIMAL
    (22) valor -> . OCTAL
    (23) valor -> . BINARIO
    (24) valor -> . BOOL
    (25) valor -> . FLOAT

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    DECIMAL         shift and go to state 33
    HEXADECIMAL     shift and go to state 34
    OCTAL           shift and go to state 35
    BINARIO         shift and go to state 36
    BOOL            shift and go to state 37
    FLOAT           shift and go to state 38

    valor                          shift and go to state 97

state 74

    (31) imprimir -> PRINTLN NOT LPAREN . valor RPAREN
    (18) valor -> . STRING
    (19) valor -> . CHAR
    (20) valor -> . DECIMAL
    (21) valor -> . HEXADECIMAL
    (22) valor -> . OCTAL
    (23) valor -> . BINARIO
    (24) valor -> . BOOL
    (25) valor -> . FLOAT

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    DECIMAL         shift and go to state 33
    HEXADECIMAL     shift and go to state 34
    OCTAL           shift and go to state 35
    BINARIO         shift and go to state 36
    BOOL            shift and go to state 37
    FLOAT           shift and go to state 38

    valor                          shift and go to state 98

state 75

    (17) asignacion -> LET VARIABLE ASSIGN valor . COMMA_DOT

    COMMA_DOT       shift and go to state 99


state 76

    (36) vector -> LET VARIABLE ASSIGN VEC . NOT LBRACKET valores RBRACKET

    NOT             shift and go to state 100


state 77

    (61) apuntador -> LET VARIABLE TWO_POINTS FN . parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT
    (45) parametros -> . LPAREN RPAREN
    (46) parametros -> . LPAREN parametro RPAREN

    LPAREN          shift and go to state 67

    parametros                     shift and go to state 101

state 78

    (43) asignacionMutable -> LET MUT VARIABLE ASSIGN . valor COMMA_DOT
    (39) hashMap -> LET MUT VARIABLE ASSIGN . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT
    (18) valor -> . STRING
    (19) valor -> . CHAR
    (20) valor -> . DECIMAL
    (21) valor -> . HEXADECIMAL
    (22) valor -> . OCTAL
    (23) valor -> . BINARIO
    (24) valor -> . BOOL
    (25) valor -> . FLOAT

    HASHMAP         shift and go to state 103
    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    DECIMAL         shift and go to state 33
    HEXADECIMAL     shift and go to state 34
    OCTAL           shift and go to state 35
    BINARIO         shift and go to state 36
    BOOL            shift and go to state 37
    FLOAT           shift and go to state 38

    valor                          shift and go to state 102

state 79

    (57) link -> LET LPAREN variables RPAREN . ASSIGN LPAREN valores RPAREN COMMA_DOT

    ASSIGN          shift and go to state 104


state 80

    (59) variables -> VARIABLE COMA . variables
    (58) variables -> . VARIABLE
    (59) variables -> . VARIABLE COMA variables

    VARIABLE        shift and go to state 57

    variables                      shift and go to state 105

state 81

    (48) parametro -> VARIABLE TWO_POINTS valor COMA . parametro
    (47) parametro -> . VARIABLE TWO_POINTS valor
    (48) parametro -> . VARIABLE TWO_POINTS valor COMA parametro
    (49) parametro -> . VARIABLE TWO_POINTS GENERIC
    (50) parametro -> . VARIABLE TWO_POINTS GENERIC COMA parametro

    VARIABLE        shift and go to state 89

    parametro                      shift and go to state 106

state 82

    (50) parametro -> VARIABLE TWO_POINTS GENERIC COMA . parametro
    (47) parametro -> . VARIABLE TWO_POINTS valor
    (48) parametro -> . VARIABLE TWO_POINTS valor COMA parametro
    (49) parametro -> . VARIABLE TWO_POINTS GENERIC
    (50) parametro -> . VARIABLE TWO_POINTS GENERIC COMA parametro

    VARIABLE        shift and go to state 89

    parametro                      shift and go to state 107

state 83

    (26) eMatch -> MATCH VARIABLE LKEY content . RKEY

    RKEY            shift and go to state 108


state 84

    (27) content -> valor . MOREEQUAL_THAN instruccion
    (28) content -> valor . MOREEQUAL_THAN instruccion COMA content

    MOREEQUAL_THAN  shift and go to state 109


state 85

    (44) funcion -> FN VARIABLE parametros LKEY . instruccion RKEY
    (29) instruccion -> . imprimir
    (30) instruccion -> . hashMap
    (31) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (39) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    PRINTLN         shift and go to state 30
    LET             shift and go to state 71

    instruccion                    shift and go to state 110
    imprimir                       shift and go to state 22
    hashMap                        shift and go to state 23

state 86

    (51) funcionDiv -> FN VARIABLE parametros MINUS . MORE_THAN NOT LKEY instruccion RKEY

    MORE_THAN       shift and go to state 111


state 87

    (45) parametros -> LPAREN RPAREN .

    LKEY            reduce using rule 45 (parametros -> LPAREN RPAREN .)
    MINUS           reduce using rule 45 (parametros -> LPAREN RPAREN .)


state 88

    (46) parametros -> LPAREN parametro . RPAREN

    RPAREN          shift and go to state 112


state 89

    (47) parametro -> VARIABLE . TWO_POINTS valor
    (48) parametro -> VARIABLE . TWO_POINTS valor COMA parametro
    (49) parametro -> VARIABLE . TWO_POINTS GENERIC
    (50) parametro -> VARIABLE . TWO_POINTS GENERIC COMA parametro

    TWO_POINTS      shift and go to state 43


state 90

    (33) for -> FOR VARIABLE IN rango . LKEY instruccion RKEY

    LKEY            shift and go to state 113


state 91

    (34) rango -> DECIMAL . POINT POINT DECIMAL
    (35) rango -> DECIMAL . POINT POINT ASSIGN DECIMAL

    POINT           shift and go to state 114


state 92

    (60) trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE . MORE_THAN

    MORE_THAN       shift and go to state 115


state 93

    (32) loop -> LOOP LKEY instruccion RKEY .

    $end            reduce using rule 32 (loop -> LOOP LKEY instruccion RKEY .)


state 94

    (39) hashMap -> LET MUT . VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    VARIABLE        shift and go to state 116


state 95

    (41) atributos -> VARIABLE . TWO_POINTS valor
    (42) atributos -> VARIABLE . TWO_POINTS valor COMA atributos

    TWO_POINTS      shift and go to state 117


state 96

    (40) struct -> STRUCT VARIABLE LKEY atributos . RKEY

    RKEY            shift and go to state 118


state 97

    (56) alias -> TYPE VARIABLE ASSIGN valor . COMMA_DOT

    COMMA_DOT       shift and go to state 119


state 98

    (31) imprimir -> PRINTLN NOT LPAREN valor . RPAREN

    RPAREN          shift and go to state 120


state 99

    (17) asignacion -> LET VARIABLE ASSIGN valor COMMA_DOT .

    $end            reduce using rule 17 (asignacion -> LET VARIABLE ASSIGN valor COMMA_DOT .)


state 100

    (36) vector -> LET VARIABLE ASSIGN VEC NOT . LBRACKET valores RBRACKET

    LBRACKET        shift and go to state 121


state 101

    (61) apuntador -> LET VARIABLE TWO_POINTS FN parametros . MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT

    MINUS           shift and go to state 122


state 102

    (43) asignacionMutable -> LET MUT VARIABLE ASSIGN valor . COMMA_DOT

    COMMA_DOT       shift and go to state 123


state 103

    (39) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP . TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    TWO_POINTS      shift and go to state 124


state 104

    (57) link -> LET LPAREN variables RPAREN ASSIGN . LPAREN valores RPAREN COMMA_DOT

    LPAREN          shift and go to state 125


state 105

    (59) variables -> VARIABLE COMA variables .

    RPAREN          reduce using rule 59 (variables -> VARIABLE COMA variables .)


state 106

    (48) parametro -> VARIABLE TWO_POINTS valor COMA parametro .

    $end            reduce using rule 48 (parametro -> VARIABLE TWO_POINTS valor COMA parametro .)
    RPAREN          reduce using rule 48 (parametro -> VARIABLE TWO_POINTS valor COMA parametro .)


state 107

    (50) parametro -> VARIABLE TWO_POINTS GENERIC COMA parametro .

    $end            reduce using rule 50 (parametro -> VARIABLE TWO_POINTS GENERIC COMA parametro .)
    RPAREN          reduce using rule 50 (parametro -> VARIABLE TWO_POINTS GENERIC COMA parametro .)


state 108

    (26) eMatch -> MATCH VARIABLE LKEY content RKEY .

    $end            reduce using rule 26 (eMatch -> MATCH VARIABLE LKEY content RKEY .)


state 109

    (27) content -> valor MOREEQUAL_THAN . instruccion
    (28) content -> valor MOREEQUAL_THAN . instruccion COMA content
    (29) instruccion -> . imprimir
    (30) instruccion -> . hashMap
    (31) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (39) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    PRINTLN         shift and go to state 30
    LET             shift and go to state 71

    instruccion                    shift and go to state 126
    imprimir                       shift and go to state 22
    hashMap                        shift and go to state 23

state 110

    (44) funcion -> FN VARIABLE parametros LKEY instruccion . RKEY

    RKEY            shift and go to state 127


state 111

    (51) funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN . NOT LKEY instruccion RKEY

    NOT             shift and go to state 128


state 112

    (46) parametros -> LPAREN parametro RPAREN .

    LKEY            reduce using rule 46 (parametros -> LPAREN parametro RPAREN .)
    MINUS           reduce using rule 46 (parametros -> LPAREN parametro RPAREN .)


state 113

    (33) for -> FOR VARIABLE IN rango LKEY . instruccion RKEY
    (29) instruccion -> . imprimir
    (30) instruccion -> . hashMap
    (31) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (39) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    PRINTLN         shift and go to state 30
    LET             shift and go to state 71

    instruccion                    shift and go to state 129
    imprimir                       shift and go to state 22
    hashMap                        shift and go to state 23

state 114

    (34) rango -> DECIMAL POINT . POINT DECIMAL
    (35) rango -> DECIMAL POINT . POINT ASSIGN DECIMAL

    POINT           shift and go to state 130


state 115

    (60) trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN .

    $end            reduce using rule 60 (trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN .)


state 116

    (39) hashMap -> LET MUT VARIABLE . ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    ASSIGN          shift and go to state 131


state 117

    (41) atributos -> VARIABLE TWO_POINTS . valor
    (42) atributos -> VARIABLE TWO_POINTS . valor COMA atributos
    (18) valor -> . STRING
    (19) valor -> . CHAR
    (20) valor -> . DECIMAL
    (21) valor -> . HEXADECIMAL
    (22) valor -> . OCTAL
    (23) valor -> . BINARIO
    (24) valor -> . BOOL
    (25) valor -> . FLOAT

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    DECIMAL         shift and go to state 33
    HEXADECIMAL     shift and go to state 34
    OCTAL           shift and go to state 35
    BINARIO         shift and go to state 36
    BOOL            shift and go to state 37
    FLOAT           shift and go to state 38

    valor                          shift and go to state 132

state 118

    (40) struct -> STRUCT VARIABLE LKEY atributos RKEY .

    $end            reduce using rule 40 (struct -> STRUCT VARIABLE LKEY atributos RKEY .)


state 119

    (56) alias -> TYPE VARIABLE ASSIGN valor COMMA_DOT .

    $end            reduce using rule 56 (alias -> TYPE VARIABLE ASSIGN valor COMMA_DOT .)


state 120

    (31) imprimir -> PRINTLN NOT LPAREN valor RPAREN .

    $end            reduce using rule 31 (imprimir -> PRINTLN NOT LPAREN valor RPAREN .)
    RKEY            reduce using rule 31 (imprimir -> PRINTLN NOT LPAREN valor RPAREN .)
    COMA            reduce using rule 31 (imprimir -> PRINTLN NOT LPAREN valor RPAREN .)


state 121

    (36) vector -> LET VARIABLE ASSIGN VEC NOT LBRACKET . valores RBRACKET
    (37) valores -> . valor
    (38) valores -> . valor COMA valores
    (18) valor -> . STRING
    (19) valor -> . CHAR
    (20) valor -> . DECIMAL
    (21) valor -> . HEXADECIMAL
    (22) valor -> . OCTAL
    (23) valor -> . BINARIO
    (24) valor -> . BOOL
    (25) valor -> . FLOAT

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    DECIMAL         shift and go to state 33
    HEXADECIMAL     shift and go to state 34
    OCTAL           shift and go to state 35
    BINARIO         shift and go to state 36
    BOOL            shift and go to state 37
    FLOAT           shift and go to state 38

    valores                        shift and go to state 133
    valor                          shift and go to state 134

state 122

    (61) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS . MORE_THAN valor ASSIGN VARIABLE COMMA_DOT

    MORE_THAN       shift and go to state 135


state 123

    (43) asignacionMutable -> LET MUT VARIABLE ASSIGN valor COMMA_DOT .

    $end            reduce using rule 43 (asignacionMutable -> LET MUT VARIABLE ASSIGN valor COMMA_DOT .)


state 124

    (39) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS . TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    TWO_POINTS      shift and go to state 136


state 125

    (57) link -> LET LPAREN variables RPAREN ASSIGN LPAREN . valores RPAREN COMMA_DOT
    (37) valores -> . valor
    (38) valores -> . valor COMA valores
    (18) valor -> . STRING
    (19) valor -> . CHAR
    (20) valor -> . DECIMAL
    (21) valor -> . HEXADECIMAL
    (22) valor -> . OCTAL
    (23) valor -> . BINARIO
    (24) valor -> . BOOL
    (25) valor -> . FLOAT

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    DECIMAL         shift and go to state 33
    HEXADECIMAL     shift and go to state 34
    OCTAL           shift and go to state 35
    BINARIO         shift and go to state 36
    BOOL            shift and go to state 37
    FLOAT           shift and go to state 38

    valores                        shift and go to state 137
    valor                          shift and go to state 134

state 126

    (27) content -> valor MOREEQUAL_THAN instruccion .
    (28) content -> valor MOREEQUAL_THAN instruccion . COMA content

    RKEY            reduce using rule 27 (content -> valor MOREEQUAL_THAN instruccion .)
    COMA            shift and go to state 138


state 127

    (44) funcion -> FN VARIABLE parametros LKEY instruccion RKEY .

    $end            reduce using rule 44 (funcion -> FN VARIABLE parametros LKEY instruccion RKEY .)


state 128

    (51) funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT . LKEY instruccion RKEY

    LKEY            shift and go to state 139


state 129

    (33) for -> FOR VARIABLE IN rango LKEY instruccion . RKEY

    RKEY            shift and go to state 140


state 130

    (34) rango -> DECIMAL POINT POINT . DECIMAL
    (35) rango -> DECIMAL POINT POINT . ASSIGN DECIMAL

    DECIMAL         shift and go to state 141
    ASSIGN          shift and go to state 142


state 131

    (39) hashMap -> LET MUT VARIABLE ASSIGN . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    HASHMAP         shift and go to state 103


state 132

    (41) atributos -> VARIABLE TWO_POINTS valor .
    (42) atributos -> VARIABLE TWO_POINTS valor . COMA atributos

    RKEY            reduce using rule 41 (atributos -> VARIABLE TWO_POINTS valor .)
    COMA            shift and go to state 143


state 133

    (36) vector -> LET VARIABLE ASSIGN VEC NOT LBRACKET valores . RBRACKET

    RBRACKET        shift and go to state 144


state 134

    (37) valores -> valor .
    (38) valores -> valor . COMA valores

    RBRACKET        reduce using rule 37 (valores -> valor .)
    RPAREN          reduce using rule 37 (valores -> valor .)
    COMA            shift and go to state 145


state 135

    (61) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN . valor ASSIGN VARIABLE COMMA_DOT
    (18) valor -> . STRING
    (19) valor -> . CHAR
    (20) valor -> . DECIMAL
    (21) valor -> . HEXADECIMAL
    (22) valor -> . OCTAL
    (23) valor -> . BINARIO
    (24) valor -> . BOOL
    (25) valor -> . FLOAT

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    DECIMAL         shift and go to state 33
    HEXADECIMAL     shift and go to state 34
    OCTAL           shift and go to state 35
    BINARIO         shift and go to state 36
    BOOL            shift and go to state 37
    FLOAT           shift and go to state 38

    valor                          shift and go to state 146

state 136

    (39) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS . NEW LPAREN RPAREN COMMA_DOT

    NEW             shift and go to state 147


state 137

    (57) link -> LET LPAREN variables RPAREN ASSIGN LPAREN valores . RPAREN COMMA_DOT

    RPAREN          shift and go to state 148


state 138

    (28) content -> valor MOREEQUAL_THAN instruccion COMA . content
    (27) content -> . valor MOREEQUAL_THAN instruccion
    (28) content -> . valor MOREEQUAL_THAN instruccion COMA content
    (18) valor -> . STRING
    (19) valor -> . CHAR
    (20) valor -> . DECIMAL
    (21) valor -> . HEXADECIMAL
    (22) valor -> . OCTAL
    (23) valor -> . BINARIO
    (24) valor -> . BOOL
    (25) valor -> . FLOAT

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    DECIMAL         shift and go to state 33
    HEXADECIMAL     shift and go to state 34
    OCTAL           shift and go to state 35
    BINARIO         shift and go to state 36
    BOOL            shift and go to state 37
    FLOAT           shift and go to state 38

    valor                          shift and go to state 84
    content                        shift and go to state 149

state 139

    (51) funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT LKEY . instruccion RKEY
    (29) instruccion -> . imprimir
    (30) instruccion -> . hashMap
    (31) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (39) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    PRINTLN         shift and go to state 30
    LET             shift and go to state 71

    instruccion                    shift and go to state 150
    imprimir                       shift and go to state 22
    hashMap                        shift and go to state 23

state 140

    (33) for -> FOR VARIABLE IN rango LKEY instruccion RKEY .

    $end            reduce using rule 33 (for -> FOR VARIABLE IN rango LKEY instruccion RKEY .)


state 141

    (34) rango -> DECIMAL POINT POINT DECIMAL .

    LKEY            reduce using rule 34 (rango -> DECIMAL POINT POINT DECIMAL .)


state 142

    (35) rango -> DECIMAL POINT POINT ASSIGN . DECIMAL

    DECIMAL         shift and go to state 151


state 143

    (42) atributos -> VARIABLE TWO_POINTS valor COMA . atributos
    (41) atributos -> . VARIABLE TWO_POINTS valor
    (42) atributos -> . VARIABLE TWO_POINTS valor COMA atributos

    VARIABLE        shift and go to state 95

    atributos                      shift and go to state 152

state 144

    (36) vector -> LET VARIABLE ASSIGN VEC NOT LBRACKET valores RBRACKET .

    $end            reduce using rule 36 (vector -> LET VARIABLE ASSIGN VEC NOT LBRACKET valores RBRACKET .)


state 145

    (38) valores -> valor COMA . valores
    (37) valores -> . valor
    (38) valores -> . valor COMA valores
    (18) valor -> . STRING
    (19) valor -> . CHAR
    (20) valor -> . DECIMAL
    (21) valor -> . HEXADECIMAL
    (22) valor -> . OCTAL
    (23) valor -> . BINARIO
    (24) valor -> . BOOL
    (25) valor -> . FLOAT

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    DECIMAL         shift and go to state 33
    HEXADECIMAL     shift and go to state 34
    OCTAL           shift and go to state 35
    BINARIO         shift and go to state 36
    BOOL            shift and go to state 37
    FLOAT           shift and go to state 38

    valor                          shift and go to state 134
    valores                        shift and go to state 153

state 146

    (61) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor . ASSIGN VARIABLE COMMA_DOT

    ASSIGN          shift and go to state 154


state 147

    (39) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW . LPAREN RPAREN COMMA_DOT

    LPAREN          shift and go to state 155


state 148

    (57) link -> LET LPAREN variables RPAREN ASSIGN LPAREN valores RPAREN . COMMA_DOT

    COMMA_DOT       shift and go to state 156


state 149

    (28) content -> valor MOREEQUAL_THAN instruccion COMA content .

    RKEY            reduce using rule 28 (content -> valor MOREEQUAL_THAN instruccion COMA content .)


state 150

    (51) funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion . RKEY

    RKEY            shift and go to state 157


state 151

    (35) rango -> DECIMAL POINT POINT ASSIGN DECIMAL .

    LKEY            reduce using rule 35 (rango -> DECIMAL POINT POINT ASSIGN DECIMAL .)


state 152

    (42) atributos -> VARIABLE TWO_POINTS valor COMA atributos .

    RKEY            reduce using rule 42 (atributos -> VARIABLE TWO_POINTS valor COMA atributos .)


state 153

    (38) valores -> valor COMA valores .

    RBRACKET        reduce using rule 38 (valores -> valor COMA valores .)
    RPAREN          reduce using rule 38 (valores -> valor COMA valores .)


state 154

    (61) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN . VARIABLE COMMA_DOT

    VARIABLE        shift and go to state 158


state 155

    (39) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN . RPAREN COMMA_DOT

    RPAREN          shift and go to state 159


state 156

    (57) link -> LET LPAREN variables RPAREN ASSIGN LPAREN valores RPAREN COMMA_DOT .

    $end            reduce using rule 57 (link -> LET LPAREN variables RPAREN ASSIGN LPAREN valores RPAREN COMMA_DOT .)


state 157

    (51) funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY .

    $end            reduce using rule 51 (funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY .)


state 158

    (61) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE . COMMA_DOT

    COMMA_DOT       shift and go to state 160


state 159

    (39) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN . COMMA_DOT

    COMMA_DOT       shift and go to state 161


state 160

    (61) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT .

    $end            reduce using rule 61 (apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT .)


state 161

    (39) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT .

    $end            reduce using rule 39 (hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT .)
    RKEY            reduce using rule 39 (hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT .)
    COMA            reduce using rule 39 (hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT .)

