Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ALIGNOF
    AND
    AND_BIT
    AS
    BECOME
    BOX
    BREAK
    BYTE
    CONST
    CONTINUE
    CRATE
    DIVIDE
    DO
    ELSE
    ENUM
    EQUALS
    EXTERN
    FINAL
    IF
    IMPL
    INTEGER
    LEFT_MAYUS
    LESSEQUAL_THAN
    LOOP
    MACRO
    MATH_REMINDER
    MOD
    MOV
    NOT_EQUALS
    OFFSETOF
    OR
    OR_BIT
    OVERRIDE
    PLUS
    PRIV
    PROC
    PUB
    PURE
    QUO_MARKS
    REF
    RETURN
    RIGHT_MAYUS
    SELF
    SIZEOF
    STATIC
    STRUCT
    SUPER
    TIMES
    TRAIT
    TYPE
    TYPEOF
    UNSAFE
    UNSIZED
    USE
    VIRTUAL
    WHERE
    WHILE
    XOR_BIT
    YIELD

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> asignacion
Rule 2     cuerpo -> asignacionMutable
Rule 3     cuerpo -> eMatch
Rule 4     cuerpo -> instruccion
Rule 5     cuerpo -> funcion
Rule 6     cuerpo -> funcionDiv
Rule 7     cuerpo -> vector
Rule 8     cuerpo -> for
Rule 9     cuerpo -> apuntador
Rule 10    cuerpo -> trait
Rule 11    asignacion -> LET VARIABLE ASSIGN valor COMMA_DOT
Rule 12    valor -> STRING
Rule 13    valor -> CHAR
Rule 14    valor -> DECIMAL
Rule 15    valor -> HEXADECIMAL
Rule 16    valor -> OCTAL
Rule 17    valor -> BINARIO
Rule 18    valor -> BOOL
Rule 19    valor -> FLOAT
Rule 20    eMatch -> MATCH VARIABLE LKEY content RKEY
Rule 21    content -> valor MOREEQUAL_THAN instruccion
Rule 22    content -> valor MOREEQUAL_THAN instruccion COMA content
Rule 23    instruccion -> imprimir
Rule 24    instruccion -> hashMap
Rule 25    imprimir -> PRINTLN NOT LPAREN valor RPAREN
Rule 26    for -> FOR VARIABLE IN rango LKEY instruccion RKEY
Rule 27    rango -> DECIMAL POINT POINT DECIMAL
Rule 28    rango -> DECIMAL POINT POINT ASSIGN DECIMAL
Rule 29    vector -> LET VARIABLE ASSIGN VEC NOT LBRACKET valores RBRACKET
Rule 30    valores -> valor
Rule 31    valores -> valor COMA valores
Rule 32    hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT
Rule 33    asignacionMutable -> LET MUT VARIABLE ASSIGN valor COMMA_DOT
Rule 34    funcion -> FN VARIABLE parametros LKEY instruccion RKEY
Rule 35    parametros -> LPAREN RPAREN
Rule 36    parametros -> LPAREN parametro RPAREN
Rule 37    parametro -> VARIABLE TWO_POINTS valor
Rule 38    parametro -> VARIABLE TWO_POINTS valor COMA parametro
Rule 39    funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY
Rule 40    trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN
Rule 41    apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT

Terminals, with rules where they appear

ABSTRACT             : 
ALIGNOF              : 
AND                  : 
AND_BIT              : 
AS                   : 
ASSIGN               : 11 28 29 32 33 41
BECOME               : 
BINARIO              : 17
BOOL                 : 18
BOX                  : 
BREAK                : 
BYTE                 : 
CHAR                 : 13
COMA                 : 22 31 38
COMMA_DOT            : 11 32 33 41
CONST                : 
CONTINUE             : 
CRATE                : 
DECIMAL              : 14 27 27 28 28
DIVIDE               : 
DO                   : 
ELSE                 : 
ENUM                 : 
EQUALS               : 
EXTERN               : 
FINAL                : 
FLOAT                : 19
FN                   : 34 39 41
FOR                  : 26
GENERIC              : 40
HASHMAP              : 32
HEXADECIMAL          : 15
IF                   : 
IMPL                 : 
IN                   : 26
INTEGER              : 
LBRACKET             : 29
LEFT_MAYUS           : 
LESSEQUAL_THAN       : 
LESS_THAN            : 40
LET                  : 11 29 32 33 41
LKEY                 : 20 26 34 39
LOOP                 : 
LPAREN               : 25 32 35 36
MACRO                : 
MATCH                : 20
MATH_REMINDER        : 
MINUS                : 39 41
MOD                  : 
MOREEQUAL_THAN       : 21 22
MORE_THAN            : 39 40 41
MOV                  : 
MUT                  : 32 33
NEW                  : 32
NOT                  : 25 29 39
NOT_EQUALS           : 
OCTAL                : 16
OFFSETOF             : 
OR                   : 
OR_BIT               : 
OVERRIDE             : 
PLUS                 : 
POINT                : 27 27 28 28
PRINTLN              : 25
PRIV                 : 
PROC                 : 
PUB                  : 
PURE                 : 
QUO_MARKS            : 
RBRACKET             : 29
REF                  : 
RETURN               : 
RIGHT_MAYUS          : 
RKEY                 : 20 26 34 39
RPAREN               : 25 32 35 36
SELF                 : 
SIZEOF               : 
STATIC               : 
STRING               : 12
STRUCT               : 
SUPER                : 
TIMES                : 
TRAIT                : 
TWO_POINTS           : 32 32 37 38 40 41
TYPE                 : 
TYPEOF               : 
UNSAFE               : 
UNSIZED              : 
USE                  : 
VARIABLE             : 11 20 26 29 32 33 34 37 38 39 40 41 41
VEC                  : 29
VIRTUAL              : 
WHERE                : 
WHILE                : 
XOR_BIT              : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

apuntador            : 9
asignacion           : 1
asignacionMutable    : 2
content              : 20 22
cuerpo               : 0
eMatch               : 3
for                  : 8
funcion              : 5
funcionDiv           : 6
hashMap              : 24
imprimir             : 23
instruccion          : 4 21 22 26 34 39
parametro            : 36 38
parametros           : 34 39 41
rango                : 26
trait                : 10
valor                : 11 21 22 25 30 31 33 37 38 41
valores              : 29 31
vector               : 7

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . asignacion
    (2) cuerpo -> . asignacionMutable
    (3) cuerpo -> . eMatch
    (4) cuerpo -> . instruccion
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcionDiv
    (7) cuerpo -> . vector
    (8) cuerpo -> . for
    (9) cuerpo -> . apuntador
    (10) cuerpo -> . trait
    (11) asignacion -> . LET VARIABLE ASSIGN valor COMMA_DOT
    (33) asignacionMutable -> . LET MUT VARIABLE ASSIGN valor COMMA_DOT
    (20) eMatch -> . MATCH VARIABLE LKEY content RKEY
    (23) instruccion -> . imprimir
    (24) instruccion -> . hashMap
    (34) funcion -> . FN VARIABLE parametros LKEY instruccion RKEY
    (39) funcionDiv -> . FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY
    (29) vector -> . LET VARIABLE ASSIGN VEC NOT LBRACKET valores RBRACKET
    (26) for -> . FOR VARIABLE IN rango LKEY instruccion RKEY
    (41) apuntador -> . LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT
    (40) trait -> . LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN
    (25) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (32) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    LET             shift and go to state 12
    MATCH           shift and go to state 13
    FN              shift and go to state 16
    FOR             shift and go to state 17
    LESS_THAN       shift and go to state 18
    PRINTLN         shift and go to state 19

    cuerpo                         shift and go to state 1
    asignacion                     shift and go to state 2
    asignacionMutable              shift and go to state 3
    eMatch                         shift and go to state 4
    instruccion                    shift and go to state 5
    funcion                        shift and go to state 6
    funcionDiv                     shift and go to state 7
    vector                         shift and go to state 8
    for                            shift and go to state 9
    apuntador                      shift and go to state 10
    trait                          shift and go to state 11
    imprimir                       shift and go to state 14
    hashMap                        shift and go to state 15

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> asignacion .

    $end            reduce using rule 1 (cuerpo -> asignacion .)


state 3

    (2) cuerpo -> asignacionMutable .

    $end            reduce using rule 2 (cuerpo -> asignacionMutable .)


state 4

    (3) cuerpo -> eMatch .

    $end            reduce using rule 3 (cuerpo -> eMatch .)


state 5

    (4) cuerpo -> instruccion .

    $end            reduce using rule 4 (cuerpo -> instruccion .)


state 6

    (5) cuerpo -> funcion .

    $end            reduce using rule 5 (cuerpo -> funcion .)


state 7

    (6) cuerpo -> funcionDiv .

    $end            reduce using rule 6 (cuerpo -> funcionDiv .)


state 8

    (7) cuerpo -> vector .

    $end            reduce using rule 7 (cuerpo -> vector .)


state 9

    (8) cuerpo -> for .

    $end            reduce using rule 8 (cuerpo -> for .)


state 10

    (9) cuerpo -> apuntador .

    $end            reduce using rule 9 (cuerpo -> apuntador .)


state 11

    (10) cuerpo -> trait .

    $end            reduce using rule 10 (cuerpo -> trait .)


state 12

    (11) asignacion -> LET . VARIABLE ASSIGN valor COMMA_DOT
    (33) asignacionMutable -> LET . MUT VARIABLE ASSIGN valor COMMA_DOT
    (29) vector -> LET . VARIABLE ASSIGN VEC NOT LBRACKET valores RBRACKET
    (41) apuntador -> LET . VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT
    (32) hashMap -> LET . MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    VARIABLE        shift and go to state 20
    MUT             shift and go to state 21


state 13

    (20) eMatch -> MATCH . VARIABLE LKEY content RKEY

    VARIABLE        shift and go to state 22


state 14

    (23) instruccion -> imprimir .

    $end            reduce using rule 23 (instruccion -> imprimir .)
    RKEY            reduce using rule 23 (instruccion -> imprimir .)
    COMA            reduce using rule 23 (instruccion -> imprimir .)


state 15

    (24) instruccion -> hashMap .

    $end            reduce using rule 24 (instruccion -> hashMap .)
    RKEY            reduce using rule 24 (instruccion -> hashMap .)
    COMA            reduce using rule 24 (instruccion -> hashMap .)


state 16

    (34) funcion -> FN . VARIABLE parametros LKEY instruccion RKEY
    (39) funcionDiv -> FN . VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY

    VARIABLE        shift and go to state 23


state 17

    (26) for -> FOR . VARIABLE IN rango LKEY instruccion RKEY

    VARIABLE        shift and go to state 24


state 18

    (40) trait -> LESS_THAN . GENERIC TWO_POINTS VARIABLE MORE_THAN

    GENERIC         shift and go to state 25


state 19

    (25) imprimir -> PRINTLN . NOT LPAREN valor RPAREN

    NOT             shift and go to state 26


state 20

    (11) asignacion -> LET VARIABLE . ASSIGN valor COMMA_DOT
    (29) vector -> LET VARIABLE . ASSIGN VEC NOT LBRACKET valores RBRACKET
    (41) apuntador -> LET VARIABLE . TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT

    ASSIGN          shift and go to state 27
    TWO_POINTS      shift and go to state 28


state 21

    (33) asignacionMutable -> LET MUT . VARIABLE ASSIGN valor COMMA_DOT
    (32) hashMap -> LET MUT . VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    VARIABLE        shift and go to state 29


state 22

    (20) eMatch -> MATCH VARIABLE . LKEY content RKEY

    LKEY            shift and go to state 30


state 23

    (34) funcion -> FN VARIABLE . parametros LKEY instruccion RKEY
    (39) funcionDiv -> FN VARIABLE . parametros MINUS MORE_THAN NOT LKEY instruccion RKEY
    (35) parametros -> . LPAREN RPAREN
    (36) parametros -> . LPAREN parametro RPAREN

    LPAREN          shift and go to state 32

    parametros                     shift and go to state 31

state 24

    (26) for -> FOR VARIABLE . IN rango LKEY instruccion RKEY

    IN              shift and go to state 33


state 25

    (40) trait -> LESS_THAN GENERIC . TWO_POINTS VARIABLE MORE_THAN

    TWO_POINTS      shift and go to state 34


state 26

    (25) imprimir -> PRINTLN NOT . LPAREN valor RPAREN

    LPAREN          shift and go to state 35


state 27

    (11) asignacion -> LET VARIABLE ASSIGN . valor COMMA_DOT
    (29) vector -> LET VARIABLE ASSIGN . VEC NOT LBRACKET valores RBRACKET
    (12) valor -> . STRING
    (13) valor -> . CHAR
    (14) valor -> . DECIMAL
    (15) valor -> . HEXADECIMAL
    (16) valor -> . OCTAL
    (17) valor -> . BINARIO
    (18) valor -> . BOOL
    (19) valor -> . FLOAT

    VEC             shift and go to state 37
    STRING          shift and go to state 38
    CHAR            shift and go to state 39
    DECIMAL         shift and go to state 40
    HEXADECIMAL     shift and go to state 41
    OCTAL           shift and go to state 42
    BINARIO         shift and go to state 43
    BOOL            shift and go to state 44
    FLOAT           shift and go to state 45

    valor                          shift and go to state 36

state 28

    (41) apuntador -> LET VARIABLE TWO_POINTS . FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT

    FN              shift and go to state 46


state 29

    (33) asignacionMutable -> LET MUT VARIABLE . ASSIGN valor COMMA_DOT
    (32) hashMap -> LET MUT VARIABLE . ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    ASSIGN          shift and go to state 47


state 30

    (20) eMatch -> MATCH VARIABLE LKEY . content RKEY
    (21) content -> . valor MOREEQUAL_THAN instruccion
    (22) content -> . valor MOREEQUAL_THAN instruccion COMA content
    (12) valor -> . STRING
    (13) valor -> . CHAR
    (14) valor -> . DECIMAL
    (15) valor -> . HEXADECIMAL
    (16) valor -> . OCTAL
    (17) valor -> . BINARIO
    (18) valor -> . BOOL
    (19) valor -> . FLOAT

    STRING          shift and go to state 38
    CHAR            shift and go to state 39
    DECIMAL         shift and go to state 40
    HEXADECIMAL     shift and go to state 41
    OCTAL           shift and go to state 42
    BINARIO         shift and go to state 43
    BOOL            shift and go to state 44
    FLOAT           shift and go to state 45

    content                        shift and go to state 48
    valor                          shift and go to state 49

state 31

    (34) funcion -> FN VARIABLE parametros . LKEY instruccion RKEY
    (39) funcionDiv -> FN VARIABLE parametros . MINUS MORE_THAN NOT LKEY instruccion RKEY

    LKEY            shift and go to state 50
    MINUS           shift and go to state 51


state 32

    (35) parametros -> LPAREN . RPAREN
    (36) parametros -> LPAREN . parametro RPAREN
    (37) parametro -> . VARIABLE TWO_POINTS valor
    (38) parametro -> . VARIABLE TWO_POINTS valor COMA parametro

    RPAREN          shift and go to state 52
    VARIABLE        shift and go to state 54

    parametro                      shift and go to state 53

state 33

    (26) for -> FOR VARIABLE IN . rango LKEY instruccion RKEY
    (27) rango -> . DECIMAL POINT POINT DECIMAL
    (28) rango -> . DECIMAL POINT POINT ASSIGN DECIMAL

    DECIMAL         shift and go to state 56

    rango                          shift and go to state 55

state 34

    (40) trait -> LESS_THAN GENERIC TWO_POINTS . VARIABLE MORE_THAN

    VARIABLE        shift and go to state 57


state 35

    (25) imprimir -> PRINTLN NOT LPAREN . valor RPAREN
    (12) valor -> . STRING
    (13) valor -> . CHAR
    (14) valor -> . DECIMAL
    (15) valor -> . HEXADECIMAL
    (16) valor -> . OCTAL
    (17) valor -> . BINARIO
    (18) valor -> . BOOL
    (19) valor -> . FLOAT

    STRING          shift and go to state 38
    CHAR            shift and go to state 39
    DECIMAL         shift and go to state 40
    HEXADECIMAL     shift and go to state 41
    OCTAL           shift and go to state 42
    BINARIO         shift and go to state 43
    BOOL            shift and go to state 44
    FLOAT           shift and go to state 45

    valor                          shift and go to state 58

state 36

    (11) asignacion -> LET VARIABLE ASSIGN valor . COMMA_DOT

    COMMA_DOT       shift and go to state 59


state 37

    (29) vector -> LET VARIABLE ASSIGN VEC . NOT LBRACKET valores RBRACKET

    NOT             shift and go to state 60


state 38

    (12) valor -> STRING .

    COMMA_DOT       reduce using rule 12 (valor -> STRING .)
    MOREEQUAL_THAN  reduce using rule 12 (valor -> STRING .)
    RPAREN          reduce using rule 12 (valor -> STRING .)
    COMA            reduce using rule 12 (valor -> STRING .)
    RBRACKET        reduce using rule 12 (valor -> STRING .)
    ASSIGN          reduce using rule 12 (valor -> STRING .)


state 39

    (13) valor -> CHAR .

    COMMA_DOT       reduce using rule 13 (valor -> CHAR .)
    MOREEQUAL_THAN  reduce using rule 13 (valor -> CHAR .)
    RPAREN          reduce using rule 13 (valor -> CHAR .)
    COMA            reduce using rule 13 (valor -> CHAR .)
    RBRACKET        reduce using rule 13 (valor -> CHAR .)
    ASSIGN          reduce using rule 13 (valor -> CHAR .)


state 40

    (14) valor -> DECIMAL .

    COMMA_DOT       reduce using rule 14 (valor -> DECIMAL .)
    MOREEQUAL_THAN  reduce using rule 14 (valor -> DECIMAL .)
    RPAREN          reduce using rule 14 (valor -> DECIMAL .)
    COMA            reduce using rule 14 (valor -> DECIMAL .)
    RBRACKET        reduce using rule 14 (valor -> DECIMAL .)
    ASSIGN          reduce using rule 14 (valor -> DECIMAL .)


state 41

    (15) valor -> HEXADECIMAL .

    COMMA_DOT       reduce using rule 15 (valor -> HEXADECIMAL .)
    MOREEQUAL_THAN  reduce using rule 15 (valor -> HEXADECIMAL .)
    RPAREN          reduce using rule 15 (valor -> HEXADECIMAL .)
    COMA            reduce using rule 15 (valor -> HEXADECIMAL .)
    RBRACKET        reduce using rule 15 (valor -> HEXADECIMAL .)
    ASSIGN          reduce using rule 15 (valor -> HEXADECIMAL .)


state 42

    (16) valor -> OCTAL .

    COMMA_DOT       reduce using rule 16 (valor -> OCTAL .)
    MOREEQUAL_THAN  reduce using rule 16 (valor -> OCTAL .)
    RPAREN          reduce using rule 16 (valor -> OCTAL .)
    COMA            reduce using rule 16 (valor -> OCTAL .)
    RBRACKET        reduce using rule 16 (valor -> OCTAL .)
    ASSIGN          reduce using rule 16 (valor -> OCTAL .)


state 43

    (17) valor -> BINARIO .

    COMMA_DOT       reduce using rule 17 (valor -> BINARIO .)
    MOREEQUAL_THAN  reduce using rule 17 (valor -> BINARIO .)
    RPAREN          reduce using rule 17 (valor -> BINARIO .)
    COMA            reduce using rule 17 (valor -> BINARIO .)
    RBRACKET        reduce using rule 17 (valor -> BINARIO .)
    ASSIGN          reduce using rule 17 (valor -> BINARIO .)


state 44

    (18) valor -> BOOL .

    COMMA_DOT       reduce using rule 18 (valor -> BOOL .)
    MOREEQUAL_THAN  reduce using rule 18 (valor -> BOOL .)
    RPAREN          reduce using rule 18 (valor -> BOOL .)
    COMA            reduce using rule 18 (valor -> BOOL .)
    RBRACKET        reduce using rule 18 (valor -> BOOL .)
    ASSIGN          reduce using rule 18 (valor -> BOOL .)


state 45

    (19) valor -> FLOAT .

    COMMA_DOT       reduce using rule 19 (valor -> FLOAT .)
    MOREEQUAL_THAN  reduce using rule 19 (valor -> FLOAT .)
    RPAREN          reduce using rule 19 (valor -> FLOAT .)
    COMA            reduce using rule 19 (valor -> FLOAT .)
    RBRACKET        reduce using rule 19 (valor -> FLOAT .)
    ASSIGN          reduce using rule 19 (valor -> FLOAT .)


state 46

    (41) apuntador -> LET VARIABLE TWO_POINTS FN . parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT
    (35) parametros -> . LPAREN RPAREN
    (36) parametros -> . LPAREN parametro RPAREN

    LPAREN          shift and go to state 32

    parametros                     shift and go to state 61

state 47

    (33) asignacionMutable -> LET MUT VARIABLE ASSIGN . valor COMMA_DOT
    (32) hashMap -> LET MUT VARIABLE ASSIGN . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT
    (12) valor -> . STRING
    (13) valor -> . CHAR
    (14) valor -> . DECIMAL
    (15) valor -> . HEXADECIMAL
    (16) valor -> . OCTAL
    (17) valor -> . BINARIO
    (18) valor -> . BOOL
    (19) valor -> . FLOAT

    HASHMAP         shift and go to state 63
    STRING          shift and go to state 38
    CHAR            shift and go to state 39
    DECIMAL         shift and go to state 40
    HEXADECIMAL     shift and go to state 41
    OCTAL           shift and go to state 42
    BINARIO         shift and go to state 43
    BOOL            shift and go to state 44
    FLOAT           shift and go to state 45

    valor                          shift and go to state 62

state 48

    (20) eMatch -> MATCH VARIABLE LKEY content . RKEY

    RKEY            shift and go to state 64


state 49

    (21) content -> valor . MOREEQUAL_THAN instruccion
    (22) content -> valor . MOREEQUAL_THAN instruccion COMA content

    MOREEQUAL_THAN  shift and go to state 65


state 50

    (34) funcion -> FN VARIABLE parametros LKEY . instruccion RKEY
    (23) instruccion -> . imprimir
    (24) instruccion -> . hashMap
    (25) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (32) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    PRINTLN         shift and go to state 19
    LET             shift and go to state 67

    instruccion                    shift and go to state 66
    imprimir                       shift and go to state 14
    hashMap                        shift and go to state 15

state 51

    (39) funcionDiv -> FN VARIABLE parametros MINUS . MORE_THAN NOT LKEY instruccion RKEY

    MORE_THAN       shift and go to state 68


state 52

    (35) parametros -> LPAREN RPAREN .

    LKEY            reduce using rule 35 (parametros -> LPAREN RPAREN .)
    MINUS           reduce using rule 35 (parametros -> LPAREN RPAREN .)


state 53

    (36) parametros -> LPAREN parametro . RPAREN

    RPAREN          shift and go to state 69


state 54

    (37) parametro -> VARIABLE . TWO_POINTS valor
    (38) parametro -> VARIABLE . TWO_POINTS valor COMA parametro

    TWO_POINTS      shift and go to state 70


state 55

    (26) for -> FOR VARIABLE IN rango . LKEY instruccion RKEY

    LKEY            shift and go to state 71


state 56

    (27) rango -> DECIMAL . POINT POINT DECIMAL
    (28) rango -> DECIMAL . POINT POINT ASSIGN DECIMAL

    POINT           shift and go to state 72


state 57

    (40) trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE . MORE_THAN

    MORE_THAN       shift and go to state 73


state 58

    (25) imprimir -> PRINTLN NOT LPAREN valor . RPAREN

    RPAREN          shift and go to state 74


state 59

    (11) asignacion -> LET VARIABLE ASSIGN valor COMMA_DOT .

    $end            reduce using rule 11 (asignacion -> LET VARIABLE ASSIGN valor COMMA_DOT .)


state 60

    (29) vector -> LET VARIABLE ASSIGN VEC NOT . LBRACKET valores RBRACKET

    LBRACKET        shift and go to state 75


state 61

    (41) apuntador -> LET VARIABLE TWO_POINTS FN parametros . MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT

    MINUS           shift and go to state 76


state 62

    (33) asignacionMutable -> LET MUT VARIABLE ASSIGN valor . COMMA_DOT

    COMMA_DOT       shift and go to state 77


state 63

    (32) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP . TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    TWO_POINTS      shift and go to state 78


state 64

    (20) eMatch -> MATCH VARIABLE LKEY content RKEY .

    $end            reduce using rule 20 (eMatch -> MATCH VARIABLE LKEY content RKEY .)


state 65

    (21) content -> valor MOREEQUAL_THAN . instruccion
    (22) content -> valor MOREEQUAL_THAN . instruccion COMA content
    (23) instruccion -> . imprimir
    (24) instruccion -> . hashMap
    (25) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (32) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    PRINTLN         shift and go to state 19
    LET             shift and go to state 67

    instruccion                    shift and go to state 79
    imprimir                       shift and go to state 14
    hashMap                        shift and go to state 15

state 66

    (34) funcion -> FN VARIABLE parametros LKEY instruccion . RKEY

    RKEY            shift and go to state 80


state 67

    (32) hashMap -> LET . MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    MUT             shift and go to state 81


state 68

    (39) funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN . NOT LKEY instruccion RKEY

    NOT             shift and go to state 82


state 69

    (36) parametros -> LPAREN parametro RPAREN .

    LKEY            reduce using rule 36 (parametros -> LPAREN parametro RPAREN .)
    MINUS           reduce using rule 36 (parametros -> LPAREN parametro RPAREN .)


state 70

    (37) parametro -> VARIABLE TWO_POINTS . valor
    (38) parametro -> VARIABLE TWO_POINTS . valor COMA parametro
    (12) valor -> . STRING
    (13) valor -> . CHAR
    (14) valor -> . DECIMAL
    (15) valor -> . HEXADECIMAL
    (16) valor -> . OCTAL
    (17) valor -> . BINARIO
    (18) valor -> . BOOL
    (19) valor -> . FLOAT

    STRING          shift and go to state 38
    CHAR            shift and go to state 39
    DECIMAL         shift and go to state 40
    HEXADECIMAL     shift and go to state 41
    OCTAL           shift and go to state 42
    BINARIO         shift and go to state 43
    BOOL            shift and go to state 44
    FLOAT           shift and go to state 45

    valor                          shift and go to state 83

state 71

    (26) for -> FOR VARIABLE IN rango LKEY . instruccion RKEY
    (23) instruccion -> . imprimir
    (24) instruccion -> . hashMap
    (25) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (32) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    PRINTLN         shift and go to state 19
    LET             shift and go to state 67

    instruccion                    shift and go to state 84
    imprimir                       shift and go to state 14
    hashMap                        shift and go to state 15

state 72

    (27) rango -> DECIMAL POINT . POINT DECIMAL
    (28) rango -> DECIMAL POINT . POINT ASSIGN DECIMAL

    POINT           shift and go to state 85


state 73

    (40) trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN .

    $end            reduce using rule 40 (trait -> LESS_THAN GENERIC TWO_POINTS VARIABLE MORE_THAN .)


state 74

    (25) imprimir -> PRINTLN NOT LPAREN valor RPAREN .

    $end            reduce using rule 25 (imprimir -> PRINTLN NOT LPAREN valor RPAREN .)
    RKEY            reduce using rule 25 (imprimir -> PRINTLN NOT LPAREN valor RPAREN .)
    COMA            reduce using rule 25 (imprimir -> PRINTLN NOT LPAREN valor RPAREN .)


state 75

    (29) vector -> LET VARIABLE ASSIGN VEC NOT LBRACKET . valores RBRACKET
    (30) valores -> . valor
    (31) valores -> . valor COMA valores
    (12) valor -> . STRING
    (13) valor -> . CHAR
    (14) valor -> . DECIMAL
    (15) valor -> . HEXADECIMAL
    (16) valor -> . OCTAL
    (17) valor -> . BINARIO
    (18) valor -> . BOOL
    (19) valor -> . FLOAT

    STRING          shift and go to state 38
    CHAR            shift and go to state 39
    DECIMAL         shift and go to state 40
    HEXADECIMAL     shift and go to state 41
    OCTAL           shift and go to state 42
    BINARIO         shift and go to state 43
    BOOL            shift and go to state 44
    FLOAT           shift and go to state 45

    valores                        shift and go to state 86
    valor                          shift and go to state 87

state 76

    (41) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS . MORE_THAN valor ASSIGN VARIABLE COMMA_DOT

    MORE_THAN       shift and go to state 88


state 77

    (33) asignacionMutable -> LET MUT VARIABLE ASSIGN valor COMMA_DOT .

    $end            reduce using rule 33 (asignacionMutable -> LET MUT VARIABLE ASSIGN valor COMMA_DOT .)


state 78

    (32) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS . TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    TWO_POINTS      shift and go to state 89


state 79

    (21) content -> valor MOREEQUAL_THAN instruccion .
    (22) content -> valor MOREEQUAL_THAN instruccion . COMA content

    RKEY            reduce using rule 21 (content -> valor MOREEQUAL_THAN instruccion .)
    COMA            shift and go to state 90


state 80

    (34) funcion -> FN VARIABLE parametros LKEY instruccion RKEY .

    $end            reduce using rule 34 (funcion -> FN VARIABLE parametros LKEY instruccion RKEY .)


state 81

    (32) hashMap -> LET MUT . VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    VARIABLE        shift and go to state 91


state 82

    (39) funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT . LKEY instruccion RKEY

    LKEY            shift and go to state 92


state 83

    (37) parametro -> VARIABLE TWO_POINTS valor .
    (38) parametro -> VARIABLE TWO_POINTS valor . COMA parametro

    RPAREN          reduce using rule 37 (parametro -> VARIABLE TWO_POINTS valor .)
    COMA            shift and go to state 93


state 84

    (26) for -> FOR VARIABLE IN rango LKEY instruccion . RKEY

    RKEY            shift and go to state 94


state 85

    (27) rango -> DECIMAL POINT POINT . DECIMAL
    (28) rango -> DECIMAL POINT POINT . ASSIGN DECIMAL

    DECIMAL         shift and go to state 95
    ASSIGN          shift and go to state 96


state 86

    (29) vector -> LET VARIABLE ASSIGN VEC NOT LBRACKET valores . RBRACKET

    RBRACKET        shift and go to state 97


state 87

    (30) valores -> valor .
    (31) valores -> valor . COMA valores

    RBRACKET        reduce using rule 30 (valores -> valor .)
    COMA            shift and go to state 98


state 88

    (41) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN . valor ASSIGN VARIABLE COMMA_DOT
    (12) valor -> . STRING
    (13) valor -> . CHAR
    (14) valor -> . DECIMAL
    (15) valor -> . HEXADECIMAL
    (16) valor -> . OCTAL
    (17) valor -> . BINARIO
    (18) valor -> . BOOL
    (19) valor -> . FLOAT

    STRING          shift and go to state 38
    CHAR            shift and go to state 39
    DECIMAL         shift and go to state 40
    HEXADECIMAL     shift and go to state 41
    OCTAL           shift and go to state 42
    BINARIO         shift and go to state 43
    BOOL            shift and go to state 44
    FLOAT           shift and go to state 45

    valor                          shift and go to state 99

state 89

    (32) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS . NEW LPAREN RPAREN COMMA_DOT

    NEW             shift and go to state 100


state 90

    (22) content -> valor MOREEQUAL_THAN instruccion COMA . content
    (21) content -> . valor MOREEQUAL_THAN instruccion
    (22) content -> . valor MOREEQUAL_THAN instruccion COMA content
    (12) valor -> . STRING
    (13) valor -> . CHAR
    (14) valor -> . DECIMAL
    (15) valor -> . HEXADECIMAL
    (16) valor -> . OCTAL
    (17) valor -> . BINARIO
    (18) valor -> . BOOL
    (19) valor -> . FLOAT

    STRING          shift and go to state 38
    CHAR            shift and go to state 39
    DECIMAL         shift and go to state 40
    HEXADECIMAL     shift and go to state 41
    OCTAL           shift and go to state 42
    BINARIO         shift and go to state 43
    BOOL            shift and go to state 44
    FLOAT           shift and go to state 45

    valor                          shift and go to state 49
    content                        shift and go to state 101

state 91

    (32) hashMap -> LET MUT VARIABLE . ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    ASSIGN          shift and go to state 102


state 92

    (39) funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT LKEY . instruccion RKEY
    (23) instruccion -> . imprimir
    (24) instruccion -> . hashMap
    (25) imprimir -> . PRINTLN NOT LPAREN valor RPAREN
    (32) hashMap -> . LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    PRINTLN         shift and go to state 19
    LET             shift and go to state 67

    instruccion                    shift and go to state 103
    imprimir                       shift and go to state 14
    hashMap                        shift and go to state 15

state 93

    (38) parametro -> VARIABLE TWO_POINTS valor COMA . parametro
    (37) parametro -> . VARIABLE TWO_POINTS valor
    (38) parametro -> . VARIABLE TWO_POINTS valor COMA parametro

    VARIABLE        shift and go to state 54

    parametro                      shift and go to state 104

state 94

    (26) for -> FOR VARIABLE IN rango LKEY instruccion RKEY .

    $end            reduce using rule 26 (for -> FOR VARIABLE IN rango LKEY instruccion RKEY .)


state 95

    (27) rango -> DECIMAL POINT POINT DECIMAL .

    LKEY            reduce using rule 27 (rango -> DECIMAL POINT POINT DECIMAL .)


state 96

    (28) rango -> DECIMAL POINT POINT ASSIGN . DECIMAL

    DECIMAL         shift and go to state 105


state 97

    (29) vector -> LET VARIABLE ASSIGN VEC NOT LBRACKET valores RBRACKET .

    $end            reduce using rule 29 (vector -> LET VARIABLE ASSIGN VEC NOT LBRACKET valores RBRACKET .)


state 98

    (31) valores -> valor COMA . valores
    (30) valores -> . valor
    (31) valores -> . valor COMA valores
    (12) valor -> . STRING
    (13) valor -> . CHAR
    (14) valor -> . DECIMAL
    (15) valor -> . HEXADECIMAL
    (16) valor -> . OCTAL
    (17) valor -> . BINARIO
    (18) valor -> . BOOL
    (19) valor -> . FLOAT

    STRING          shift and go to state 38
    CHAR            shift and go to state 39
    DECIMAL         shift and go to state 40
    HEXADECIMAL     shift and go to state 41
    OCTAL           shift and go to state 42
    BINARIO         shift and go to state 43
    BOOL            shift and go to state 44
    FLOAT           shift and go to state 45

    valor                          shift and go to state 87
    valores                        shift and go to state 106

state 99

    (41) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor . ASSIGN VARIABLE COMMA_DOT

    ASSIGN          shift and go to state 107


state 100

    (32) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW . LPAREN RPAREN COMMA_DOT

    LPAREN          shift and go to state 108


state 101

    (22) content -> valor MOREEQUAL_THAN instruccion COMA content .

    RKEY            reduce using rule 22 (content -> valor MOREEQUAL_THAN instruccion COMA content .)


state 102

    (32) hashMap -> LET MUT VARIABLE ASSIGN . HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT

    HASHMAP         shift and go to state 63


state 103

    (39) funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion . RKEY

    RKEY            shift and go to state 109


state 104

    (38) parametro -> VARIABLE TWO_POINTS valor COMA parametro .

    RPAREN          reduce using rule 38 (parametro -> VARIABLE TWO_POINTS valor COMA parametro .)


state 105

    (28) rango -> DECIMAL POINT POINT ASSIGN DECIMAL .

    LKEY            reduce using rule 28 (rango -> DECIMAL POINT POINT ASSIGN DECIMAL .)


state 106

    (31) valores -> valor COMA valores .

    RBRACKET        reduce using rule 31 (valores -> valor COMA valores .)


state 107

    (41) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN . VARIABLE COMMA_DOT

    VARIABLE        shift and go to state 110


state 108

    (32) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN . RPAREN COMMA_DOT

    RPAREN          shift and go to state 111


state 109

    (39) funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY .

    $end            reduce using rule 39 (funcionDiv -> FN VARIABLE parametros MINUS MORE_THAN NOT LKEY instruccion RKEY .)


state 110

    (41) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE . COMMA_DOT

    COMMA_DOT       shift and go to state 112


state 111

    (32) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN . COMMA_DOT

    COMMA_DOT       shift and go to state 113


state 112

    (41) apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT .

    $end            reduce using rule 41 (apuntador -> LET VARIABLE TWO_POINTS FN parametros MINUS MORE_THAN valor ASSIGN VARIABLE COMMA_DOT .)


state 113

    (32) hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT .

    $end            reduce using rule 32 (hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT .)
    RKEY            reduce using rule 32 (hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT .)
    COMA            reduce using rule 32 (hashMap -> LET MUT VARIABLE ASSIGN HASHMAP TWO_POINTS TWO_POINTS NEW LPAREN RPAREN COMMA_DOT .)

