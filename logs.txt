fn print_pais(pais_nombre: str){println!(1)} 2022-11-21 23:46:40.345315
let asd = vec![12] 2022-11-21 23:52:30.733548
fn print_pais(pais_nombre: str){println!(1)} 2022-11-21 23:52:44.316549
loop {println!(1)} 2022-11-21 23:53:03.114549
let var = 12; 2022-11-21 23:53:36.658349
let var = "asd"; 2022-11-21 23:53:39.893350
let var = 12.2; 2022-11-21 23:53:43.245916
let var = true; 2022-11-21 23:53:48.567593
let mut var = 'a'; 2022-11-21 23:54:03.944543
struct 2022-11-21 23:58:09.874633
struct 2022-11-21 23:58:33.628636
struct asd {xsd:12} 2022-11-21 23:58:45.447592
struct{x:1} 2022-11-25 21:12:10.888022
struct{x:1} 2022-11-25 21:12:38.407028
struct asd {x:1} 2022-11-25 21:13:30.302130
asd : string 2022-11-25 21:14:08.293031
asd:string 2022-11-25 21:15:43.805033
asd:T 2022-11-25 21:18:36.249032
type asd = i32 2022-11-25 21:18:52.515558
type asd = string 2022-11-25 21:18:58.485034
type asd = string; 2022-11-25 21:19:16.670033
let mut s = s.to_ascii_lowercase().chars().collect::<Vec<_>>(); 2022-11-25 21:21:43.621030
    let mut t = t.to_ascii_lowercase().chars().collect::<Vec<_>>(); 2022-11-25 21:21:45.690047
    let mut t = t.to_ascii_lowercase().chars().collect::<Vec<_>>(); 2022-11-25 21:21:50.480032
    let mut t = t.to_ascii_lowercase().chars().collect::<Vec<_>>(); 2022-11-25 21:21:51.553032
let asd = 1; 2022-11-26 09:33:54.823071
x = 1; 2022-11-26 10:25:20.062699
x = 1 2022-11-26 10:25:22.543740
let x = 1 2022-11-26 10:25:26.518812
let mut x = 1 2022-11-26 10:25:30.290811
let mut x:i32 = 1 2022-11-26 10:25:40.061724
let mut x = x.asd() 2022-11-26 10:25:50.636125
x = asd() 2022-11-26 10:31:12.778791
x = asd(); 2022-11-26 10:31:16.577648
x = asd(asd,asd); 2022-11-26 10:31:19.950754
x = asd(asd,asd()); 2022-11-26 10:31:24.230876
x = asd(asd,1,asd()); 2022-11-26 10:31:28.263117
x = asd(asd,1,aasd.asd(),asd()); 2022-11-26 10:31:36.362481
x = asd(asd,1,aasd.asd(1),asd()); 2022-11-26 10:31:39.035083
struct 2022-11-26 10:34:20.245691
let mut s = s.to_ascii_lowercase().chars().collect::<Vec<_>>(); 2022-11-26 10:37:12.654475
let mut s = s.to_ascii_lowercase().chars().collect::<Vec<_>>(); 2022-11-26 10:40:11.173250
let mut s = s.to_ascii_lowercase().chars().collect::<Vec<_>>(); 2022-11-26 10:43:38.907350
let mut s = s.to_ascii_lowercase().chars().collect::<Vec<_>>(); 2022-11-26 10:44:35.405383
let mut s = s.to_ascii_lowercase().chars().collect::<Vec<_>>(); 2022-11-26 10:46:17.031192
let mut s = s.to_ascii_lowercase().chars().collect::<Vec<_>>(); 2022-11-26 10:46:40.531008
let mut s = s.to_ascii_lowercase().chars().collect::<Vec<_>>(); 2022-11-26 10:48:19.038769
let mut s = s.to_ascii_lowercase().chars().collect::<Vec<_>>(); 2022-11-26 10:48:42.706544
let asd = 1; 2022-11-26 11:53:55.776101
let asd Vec = 1; 2022-11-26 11:54:01.436845
VEC 2022-11-26 11:54:24.551398
vec 2022-11-26 11:54:36.639286
Vec 2022-11-26 11:54:39.386859
let asd: Vec = 1; 2022-11-26 11:55:15.613571
let asd : Vec = 1; 2022-11-26 11:55:22.164375
Vec 2022-11-26 11:55:43.773859
let asd : Vec = 1; 2022-11-26 11:56:11.625298
let asd : Vec<i32> = 1; 2022-11-26 11:56:22.969506
let asd : Vec <i32> = 1; 2022-11-26 11:56:29.453567
let asd :Vec <i32> = 1; 2022-11-26 11:56:33.968683
let asd:Vec <i32> = 1; 2022-11-26 11:56:37.118012
let asd:Vec = 1; 2022-11-26 11:56:42.331293
let asd: Vec = 1; 2022-11-26 11:56:45.714189
Vec 2022-11-26 11:56:51.214649
Vec = 1 2022-11-26 11:56:58.055936
VEC 2022-11-26 11:57:21.323758
Tasd 2022-11-26 11:57:30.117347
as 2022-11-26 11:57:33.962748
asdasd 2022-11-26 11:57:36.094673
let asd:bool = true; 2022-11-26 11:58:27.110644
let asd:i32 = true; 2022-11-26 11:58:39.417793
let asd : bool = true; 2022-11-26 11:59:09.301280
bool 2022-11-26 11:59:13.361620
let asd : bool = 1; 2022-11-26 11:59:30.790775
let asd : bool = 1; 2022-11-26 12:00:30.132137
bool 2022-11-26 12:00:33.154806
bool 2022-11-26 12:00:41.596115
let asd : bool = true; 2022-11-26 12:00:43.219795
bool 2022-11-26 12:01:23.459627
string 2022-11-26 12:01:27.008307
let asd : string = 1 2022-11-26 12:01:36.759714
let mut s = s.to_ascii_lowercase().chars().collect::<Vec<_>>(); 2022-11-26 12:01:43.473795
close 2022-11-26 12:02:09.954078
stru 2022-11-26 12:02:18.849890
struct 2022-11-26 12:02:22.682252
str 2022-11-26 12:02:26.427594
&str 2022-11-26 12:02:29.965558
let asd: &str = 12; 2022-11-26 12:03:20.951901
let asd: & str = 12; 2022-11-26 12:03:28.265684
let asd: & string = 12; 2022-11-26 12:03:34.568037
let asd: &string = 12; 2022-11-26 12:03:38.040034
let asd: &str = 12; 2022-11-26 12:03:41.294982
str 2022-11-26 12:03:45.546625
let asd: str = 12; 2022-11-26 12:03:50.024529
let asd: str = 12; 2022-11-26 12:03:53.611236
let asd: str = 12; 2022-11-26 12:04:03.783774
let asd: str = 12; 2022-11-26 12:04:05.509683
let asd: str = 12; 2022-11-26 12:04:06.844266
str 2022-11-26 12:04:21.107594
let asd: str = 12; 2022-11-26 12:06:23.791809
struct asd {x:1} 2022-11-26 12:06:55.156588
struct asd {x:1} 2022-11-26 12:07:04.611338
let asd: str = 12; 2022-11-26 12:07:19.060554
struct asd {x:1} 2022-11-26 12:07:24.712813
let asd: str = 12; 2022-11-26 12:07:34.244195
let asd: &string = 12; 2022-11-26 12:07:47.852883
let asd: &str = 12; 2022-11-26 12:07:52.550401
let asd: &str = 12; 2022-11-26 12:08:04.585264
let asd:&str = 12; 2022-11-26 12:08:08.512428
let asd:&str = 12; 2022-11-26 12:08:40.471466
let asd: &str = 12; 2022-11-26 12:08:48.502138
const asd = 1 2022-11-26 12:09:57.122787
const asd = 1; 2022-11-26 12:09:58.822552
let asd: &str = 12; 2022-11-26 12:10:11.204778
let asd: &str = 12; 2022-11-26 12:10:24.256196
str 2022-11-26 12:10:53.932307
&str 2022-11-26 12:11:00.412839
let asd: &str = 12; 2022-11-26 12:11:02.831329
let asd &str = 12; 2022-11-26 12:11:08.465733
let asd: = 12; 2022-11-26 12:11:15.546946
let asd:i32 = 12; 2022-11-26 12:11:20.325675
let asd: i32 = 12; 2022-11-26 12:11:26.221905
let asd: f32 = 12; 2022-11-26 12:11:32.328383
let asd: string = 12; 2022-11-26 12:11:44.261628
let asd: T = 12; 2022-11-26 12:12:12.798923
let asd:i32 = true; 2022-11-26 12:12:54.466462
let asd:string = true; 2022-11-26 12:13:00.076457
let asd:bool = true; 2022-11-26 12:13:05.854200
let asd:str = true; 2022-11-26 12:13:12.135124
let asd:&str = true; 2022-11-26 12:13:17.088952
let asd:&str = true; 2022-11-26 12:13:44.086395
let asd:bool = true; 2022-11-26 12:13:47.964812
bool 2022-11-26 12:14:14.910005
let asd = bool; 2022-11-26 12:14:22.876560
let asd:&str = true; 2022-11-26 12:14:30.776696
let asd &str = true; 2022-11-26 12:14:37.478429
 &str = true; 2022-11-26 12:14:43.380711
 str = true; 2022-11-26 12:14:49.750869
let asd &str = true; 2022-11-26 12:15:13.940510
let asd = true; 2022-11-26 12:15:21.552038
let asd:&str = true; 2022-11-26 12:15:24.837342
let asd; 2022-11-26 12:15:30.639038
let asd; 2022-11-26 12:16:06.263506
let asd; 2022-11-26 12:16:26.803785
asd = true; 2022-11-26 17:34:02.012268
let asd = asd.asd(); 2022-11-26 17:34:42.960077
struct asd {x:1} 2022-11-26 17:35:58.726439
let asd: string = 1 2022-11-26 17:36:08.323389
let asd: string = 1; 2022-11-26 17:36:10.702016
let asd: bool = 1; 2022-11-26 17:36:15.475636
let asd:bool = 1; 2022-11-26 17:36:21.949923
let asd:bool = true; 2022-11-26 17:36:31.384796
let asd:i32 = true; 2022-11-26 17:36:43.544302
let asd:f32 = true; 2022-11-26 17:36:46.450889
let asd:f64 = true; 2022-11-26 17:36:50.236161
let asd: char = true; 2022-11-26 17:37:05.964789
let asd: char = true; 2022-11-26 17:37:24.454026
let asd: char = true; 2022-11-26 17:37:38.448166
let asd: str = 1; 2022-11-26 17:37:48.222971
let asd: str = 1; 2022-11-26 17:37:57.698832
let asd:bool = true; 2022-11-26 17:38:20.222989
struct asd {x:1} 2022-11-26 17:38:26.085820
struct asd {x:1} 2022-11-26 17:40:51.037131
let asd: &str = 1; 2022-11-26 17:41:04.267237
Vec 2022-11-26 17:44:03.603268
let asd:Vec = 2; 2022-11-26 17:44:19.186611
let asd:Vec = 2; 2022-11-26 17:44:38.210480
let asd:Vec<i32> = 2; 2022-11-26 17:45:38.191801
let asd:Vec<char> = 2; 2022-11-26 17:46:07.412204
let asd:T = 2; 2022-11-26 17:46:54.611912
let asd:T = 2; 2022-11-26 17:47:20.862224
let asd:<T> = 2; 2022-11-26 17:47:29.029789
let asd:<T> = 2; 2022-11-26 17:48:13.018252
let asd:Vec<> = 2; 2022-11-26 17:48:27.575284
let asd:Vec<i32> = 2; 2022-11-26 17:48:31.792045
let asd:Vec = 2; 2022-11-26 17:48:37.966372
let asd:Vec = 2; 2022-11-26 17:48:46.106271
let asd:Vec; 2022-11-26 17:48:53.753246
let asd:Vec = 2; 2022-11-26 17:49:22.821888
let asd:Vec<i32> = 2; 2022-11-26 17:49:25.955894
let asd:Vec<i32> = 2; 2022-11-26 17:49:48.976050
let mut s = s.to_ascii_lowercase().chars().collect::<Vec<_>>(); 2022-11-26 17:50:00.122394
let mut s:<Vec<_>>=1; 2022-11-26 17:53:03.883029
let mut s:<Vec<_>>=1; 2022-11-26 17:54:16.109879
_ 2022-11-26 17:54:21.754649
let mut s:<Vec<_>>=1; 2022-11-26 17:54:25.077655
let mut s:<Vec<_>>=1; 2022-11-26 17:57:35.590230
let mut s:<Vec>=1; 2022-11-26 18:02:26.542550
let mut s:<Vec>=1; 2022-11-26 18:02:39.446799
let mut s:<Vec<_>>=1; 2022-11-26 18:03:14.477447
let mut s:<Vec>=1; 2022-11-26 18:03:17.942246
let mut s:Vec=1; 2022-11-26 18:03:39.163095
let mut s:Vec<i32>=1; 2022-11-26 18:03:43.588701
let mut s:Vec<i32> = 1; 2022-11-26 18:03:51.676937
let mut s: Vec<i32> = 1; 2022-11-26 18:03:55.408623
let mut s: Vec<char> = 1; 2022-11-26 18:04:31.862844
let mut s:<_> = 1; 2022-11-26 18:05:39.640818
let mut s: Vec<char> = 1; 2022-11-26 18:07:05.224458
let mut s: Vec<i32> = 1; 2022-11-26 18:07:09.830569
    | dato tipoDato''' 2022-11-26 18:11:41.361148
let mut s = s.to_ascii_lowercase().chars().collect::<Vec<_>>(); 2022-11-26 18:11:49.827015
let mut s = s.to_ascii_lowercase().asddas().collect::<Vec<_>>(); 2022-11-26 18:17:13.881557
let mut s = s.to_ascii_lowercase().asddas().collect::<Vec<_>>(); 2022-11-26 18:17:48.882000
let mut s = s.to_ascii_lowercase().asddas().collect::<Vec<_>>(); 2022-11-26 18:22:41.862099
let mut s = s.to_ascii_lowercase().asddas().collect::<Vec<_>>(); 2022-11-26 18:24:55.518359
let mut s = s.to_ascii_lowercase().asddas().collect::<Vec<_>>(); 2022-11-26 18:25:09.417321
let mut s = s.to_ascii_lowercase().asddas().collect::<Vec<_>>(); 2022-11-26 18:28:10.871835
let mut s = s.to_ascii_lowercase().asddas().collect::<Vec<_>>(); 2022-11-26 18:29:17.870308
    | dato tipoDato''' 2022-11-26 18:30:49.846264
let mut s = s.to_ascii_lowercase().chars().collect::<Vec<_>>(); 2022-11-26 18:30:53.227278
let mut s = s.to_ascii_lowercase().asddas().collect::<Vec<_>>(); 2022-11-26 18:30:59.244910
let mut s = s.to_ascii_lowercase().asddas().collect::<Vec<_>(); 2022-11-26 18:31:17.570542
let mut s = s.to_ascii_lowercase().asddas().collect::<Vec<_>>(); 2022-11-26 18:31:26.396241
let mut s = s.to_ascii_lowercase().asddas().collect::<Vec<_>(); 2022-11-26 18:32:12.416965
let mut s: Vec<i32> = 1; 2022-11-26 18:32:28.440328
let mut s: Vec<char> = 1; 2022-11-26 18:32:30.636085
let mut s:bool = 1; 2022-11-26 18:32:39.953672
asd.asd 2022-11-26 18:35:49.477844
asd.asd 2022-11-26 18:37:21.614039
asd = asd.asd 2022-11-26 18:37:26.165575
asd = asd.asd; 2022-11-26 18:37:35.258534
fn asd(){let asd =1;} 2022-11-28 09:30:30.619862
fn asd(){let asd =1;} 2022-11-28 09:31:55.861603
fn asd(){let asd =1;} 2022-11-28 09:31:59.782264
fn asd<i32>(){let asd =1;} 2022-11-28 10:31:05.603254
fn asd<T:asd>(){let asd =1;} 2022-11-28 10:31:13.387961
fn asd<T:asd>(asd){let asd =1;} 2022-11-28 10:31:17.631290
fn asd<T:asd>(1){let asd =1;} 2022-11-28 10:31:21.461276
fn asd<T:asd>(1,2){let asd =1;} 2022-11-28 10:31:31.997977
fn asd(1,2){let asd =1;} 2022-11-28 10:31:38.693128
fn asd<T:asd>()->i32{let asd =1;} 2022-11-28 10:32:28.701085
fn asd<T:asd>()->!{let asd =1;} 2022-11-28 10:32:33.037085
fn asd(asd:i32){let asd:1;} 2022-11-28 10:33:21.968641
fn asd(asd:i32){let asd=1;} 2022-11-28 10:33:29.257078
vec![] 2022-11-28 11:41:21.833865
vec![1,1] 2022-11-28 11:41:25.587142
HashMap::new() 2022-11-28 11:43:19.992470
HashMap::new() 2022-11-28 11:43:31.785704
HashMap::new(); 2022-11-28 11:43:33.275912
let asd = HashMap::new(); 2022-11-28 12:01:29.269336
asd 2022-11-28 12:11:43.364007
asd 2022-11-28 12:13:05.064456
rfiojfer 2022-11-28 12:15:37.535197
asd = 123 2022-11-28 12:15:46.800233
sdfs = 13; 2022-11-28 12:15:53.570438
asd 2022-11-28 12:17:52.857858
let asd = 1; 2022-11-28 12:18:12.689465
let asd = 1; 2022-11-28 12:18:36.079506
let asd = 1; 2022-11-28 12:19:01.010268
byuhyu 2022-11-28 12:19:04.625925
byuhyu 2022-11-28 12:19:40.291654
byuhyu 2022-11-28 12:19:42.935754
byuhy = 123; 2022-11-28 12:26:47.592517
dsfdsf 2022-11-28 12:26:53.241192
& C:/Users/rdavi/AppData/Local/Microsoft/WindowsApps/python3.10.exe c:/Users/rdavi/Documents/GitHub/Rust_InterpreteBasico/AnalizadorSintactico.py 2022-11-28 12:29:17.654148
hola 2022-11-28 12:29:23.559002
hola 2022-11-28 12:33:11.510597
hola 2022-11-28 12:35:03.476806
& C:/Users/rdavi/AppData/Local/Microsoft/WindowsApps/python3.10.exe c:/Users/rdavi/Documents/GitHub/Rust_InterpreteBasico/AnalizadorSintactico.py 2022-11-28 12:36:05.097523
hola 2022-11-28 12:36:18.048861
hola = 123; 2022-11-28 12:36:25.066345
let hola = 123; 2022-11-28 12:36:40.997332
& C:/Users/rdavi/AppData/Local/Microsoft/WindowsApps/python3.10.exe c:/Users/rdavi/Documents/GitHub/Rust_InterpreteBasico/AnalizadorSintactico.py 2022-11-28 12:37:15.307802
hola 2022-11-28 12:37:36.394630
hola = 123; 2022-11-28 12:37:41.676642
hola =  2022-11-28 12:37:55.178966
= 123; 2022-11-28 12:38:10.563661
=hola; 2022-11-28 12:40:27.481540
hla 2022-11-28 12:47:00.066116
hola = 123; 2022-11-28 12:47:06.993736
dsaaa 2022-11-28 14:27:30.138109
let asd =; 2022-11-28 14:27:40.573162
let asd =1; 2022-11-28 14:27:51.233449
=hola; 2022-11-28 14:27:58.069283
let asd = 1; 2022-11-28 16:21:27.583908
fn asd(){} 2022-11-28 16:21:39.405280
fn asd(){let asd=1;} 2022-11-28 16:21:46.016535
fn asd(){return} 2022-11-28 16:21:54.387634
for numero in 0..3{ 2022-11-28 21:56:42.807199
println!(numero); 2022-11-28 21:56:42.808198
for numero in 0..3{let asd =1:} 2022-11-28 21:57:08.750210
for numero in 0..3{let asd =1;} 2022-11-28 21:57:25.180611
loop{let asd =1;} 2022-11-28 21:57:51.857221
macth asd{0=>leta asd +1;} 2022-11-28 21:58:31.135437
macth asd{0=>let asd +1;} 2022-11-28 21:58:35.306213
macth asd{0 => let asd +1;} 2022-11-28 21:58:41.391212
macth asd {0 => let asd =1;} 2022-11-28 21:59:02.386534
macth asd {0 => let asd = 1} 2022-11-28 21:59:07.250561
match asd {0 => let asd = 1} 2022-11-28 21:59:27.713171
match asd {0 => let asd = 1;} 2022-11-28 21:59:32.182278
match asd {0 => let asd = 1;,1=>let asd =2:} 2022-11-28 21:59:45.871033
match asd {0 => let asd = 1;,1=>let asd =2;} 2022-11-28 21:59:51.704945
let asd: fn(i32) -> i32 = 1; 2022-11-28 22:25:27.039626
let asd: fn(i32) -> i32 = 1; 2022-11-28 22:26:10.928742
let asd: fn(i32) -> i32 = 1; 2022-11-28 22:27:31.669011
let asd: fn(i32) -> i32 = aasd; 2022-11-28 22:27:38.134068
let asd: fn(i32) -> i32 2022-11-28 22:28:35.011396
let asd: fn(i32) -> i32: 2022-11-28 22:28:39.260734
let asd: fn(i32) -> i32; 2022-11-28 22:28:41.702357
let asd: fn(i32) -> i32 = 2022-11-28 22:28:46.884958
let asd: fn(i32) -> i32; 2022-11-28 22:29:50.525463
let asd: fn(i32) -> i32 = aasd; 2022-11-28 22:31:03.454669
let asd: fn(i32) -> i32= aasd; 2022-11-28 22:31:08.291652
let asd: fn(i32) -> i32=aasd; 2022-11-28 22:31:10.833184
let asd: fn(i32) -> i32 2022-11-28 22:31:48.639441
let asd: fn(i32) -> i32 = 2022-11-28 22:32:01.773886
let asd=fna(); 2022-11-28 22:33:40.100304
let asd=fna(s); 2022-11-28 22:33:41.975488
let asd:fn()->i32=fna(s); 2022-11-28 22:33:59.963652
let asd:fn(i32)->i32=fna(s); 2022-11-28 22:34:03.403860
let asd:fn(i32)->i32=fa(s); 2022-11-28 22:34:08.615612
let asd:fn(i32)->i32 2022-11-28 22:34:20.469503
let asd:fn(i32)->i32= 2022-11-28 22:34:22.792502
asd:fn(i32)->i32  2022-11-28 22:36:05.957591
let asd:fn(i32)->i32  2022-11-28 22:36:17.284211
let asd:fn(i32)->i32 =  2022-11-28 22:36:25.478438
let asd:fn(i32)->i32 =  2022-11-28 22:36:57.861863
let asd:fn(i32)-> =  2022-11-28 22:38:11.449442
let asd:i32= 2; 2022-11-28 22:38:24.643212
let asd:fn(i32)-> = 1; 2022-11-28 22:38:32.290441
let asd:fn(i32)-> = 1; 2022-11-28 22:39:56.702211
let asd:fn(i32) = 1; 2022-11-28 22:40:05.212917
let asd:fn(i32)->i32 =  2022-11-28 22:41:24.373212
let asd; 2022-11-28 22:42:07.655204
let asd; 2022-11-28 22:44:08.472737
let asd:fn(i32)-> i32= 1; 2022-11-28 22:44:22.675895
let asd:fn(i32)-> i32= ''; 2022-11-28 22:44:31.165175
let asd:fn(i32)-> i32= 'asd'; 2022-11-28 22:44:32.944956
let asd:fn(i32)-> i32; 2022-11-28 22:44:53.037241
let asd:bool = true; 2022-11-28 22:45:04.441420
let asd:fn(i32)-> i32; 2022-11-28 22:49:55.365887
let asd:fn= 'asd'; 2022-11-28 22:50:39.515404
let asd:fn= 'asd'; 2022-11-28 22:50:51.363580
let asd:fn()= 'asd'; 2022-11-28 22:51:23.546224
let asd:fn-> i32; 2022-11-28 22:52:36.776197
let asd:fn-> i32=1; 2022-11-28 22:52:40.866795
let asd:fn-> i32=1; 2022-11-28 22:53:03.308211
let asd:fn(i32)-> i32; 2022-11-28 22:53:08.553212
let asd:fn(i32)-> i32=1; 2022-11-28 22:53:13.020834
let asd:fn(i32)-> i32=1; 2022-11-28 22:53:54.102204
let asd:fn(i32)-> i32=asd; 2022-11-28 22:54:03.779201
let asd = stdin(); 2022-11-28 22:56:30.402951
let asd = std::io::stdin(); 2022-11-28 22:56:47.218210
let asd = stdin(); 2022-11-28 22:57:01.019385
let asd = std::io::stdin(); 2022-11-28 22:57:10.897211
let asd = stdin().unwrap(); 2022-11-28 22:58:27.357031
let asd = stdin().unwrap().asdhu(); 2022-11-28 22:58:32.055197
let asd = stdin().unwrap().asdhu(asd()); 2022-11-28 22:58:35.109406
let asd = stdin().unwrap().asdhu(asd(1)); 2022-11-28 22:58:37.291213
let asd = std::io::stdin(); 2022-11-28 23:00:05.361209
let asd = std::io::stdin().asd(); 2022-11-28 23:00:15.703429
